"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkfront_end"] = self["webpackChunkfront_end"] || []).push([["vendors-node_modules_devexpress_dx-react-grid_dist_dx-react-grid_es_js"],{

/***/ "./node_modules/@devexpress/dx-react-grid/dist/dx-react-grid.es.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@devexpress/dx-react-grid/dist/dx-react-grid.es.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ColumnChooser\": function() { return /* binding */ ColumnChooser; },\n/* harmony export */   \"CustomGrouping\": function() { return /* binding */ CustomGrouping; },\n/* harmony export */   \"CustomPaging\": function() { return /* binding */ CustomPaging; },\n/* harmony export */   \"CustomSummary\": function() { return /* binding */ CustomSummary; },\n/* harmony export */   \"CustomTreeData\": function() { return /* binding */ CustomTreeData; },\n/* harmony export */   \"DataTypeProvider\": function() { return /* binding */ DataTypeProvider; },\n/* harmony export */   \"DragDropProvider\": function() { return /* binding */ DragDropProvider; },\n/* harmony export */   \"EditingState\": function() { return /* binding */ EditingState; },\n/* harmony export */   \"ExportPanel\": function() { return /* binding */ ExportPanel; },\n/* harmony export */   \"FilteringState\": function() { return /* binding */ FilteringState; },\n/* harmony export */   \"Grid\": function() { return /* binding */ Grid; },\n/* harmony export */   \"GroupPanelLayout\": function() { return /* binding */ GroupPanelLayout; },\n/* harmony export */   \"GroupingPanel\": function() { return /* binding */ GroupingPanel; },\n/* harmony export */   \"GroupingState\": function() { return /* binding */ GroupingState; },\n/* harmony export */   \"InlineSummaryItem\": function() { return /* binding */ InlineSummaryItem; },\n/* harmony export */   \"IntegratedFiltering\": function() { return /* binding */ IntegratedFiltering; },\n/* harmony export */   \"IntegratedGrouping\": function() { return /* binding */ IntegratedGrouping; },\n/* harmony export */   \"IntegratedPaging\": function() { return /* binding */ IntegratedPaging; },\n/* harmony export */   \"IntegratedSelection\": function() { return /* binding */ IntegratedSelection; },\n/* harmony export */   \"IntegratedSorting\": function() { return /* binding */ IntegratedSorting; },\n/* harmony export */   \"IntegratedSummary\": function() { return /* binding */ IntegratedSummary; },\n/* harmony export */   \"PagingPanel\": function() { return /* binding */ PagingPanel; },\n/* harmony export */   \"PagingState\": function() { return /* binding */ PagingState; },\n/* harmony export */   \"RowDetailState\": function() { return /* binding */ RowDetailState; },\n/* harmony export */   \"SearchPanel\": function() { return /* binding */ SearchPanel; },\n/* harmony export */   \"SearchState\": function() { return /* binding */ SearchState; },\n/* harmony export */   \"SelectionState\": function() { return /* binding */ SelectionState; },\n/* harmony export */   \"SortingState\": function() { return /* binding */ SortingState; },\n/* harmony export */   \"StaticTableLayout\": function() { return /* binding */ StaticTableLayout; },\n/* harmony export */   \"SummaryState\": function() { return /* binding */ SummaryState; },\n/* harmony export */   \"Table\": function() { return /* binding */ Table; },\n/* harmony export */   \"TableBandHeader\": function() { return /* binding */ TableBandHeader; },\n/* harmony export */   \"TableColumnReordering\": function() { return /* binding */ TableColumnReordering; },\n/* harmony export */   \"TableColumnResizing\": function() { return /* binding */ TableColumnResizing; },\n/* harmony export */   \"TableColumnVisibility\": function() { return /* binding */ TableColumnVisibility; },\n/* harmony export */   \"TableEditColumn\": function() { return /* binding */ TableEditColumn; },\n/* harmony export */   \"TableEditRow\": function() { return /* binding */ TableEditRow; },\n/* harmony export */   \"TableFilterRow\": function() { return /* binding */ TableFilterRow; },\n/* harmony export */   \"TableFixedColumns\": function() { return /* binding */ TableFixedColumns; },\n/* harmony export */   \"TableGroupRow\": function() { return /* binding */ TableGroupRow; },\n/* harmony export */   \"TableHeaderRow\": function() { return /* binding */ TableHeaderRow; },\n/* harmony export */   \"TableInlineCellEditing\": function() { return /* binding */ TableInlineCellEditing; },\n/* harmony export */   \"TableLayout\": function() { return /* binding */ TableLayout; },\n/* harmony export */   \"TableRowDetail\": function() { return /* binding */ TableRowDetail; },\n/* harmony export */   \"TableSelection\": function() { return /* binding */ TableSelection; },\n/* harmony export */   \"TableSummaryRow\": function() { return /* binding */ TableSummaryRow; },\n/* harmony export */   \"TableSummaryRowBase\": function() { return /* binding */ TableSummaryRowBase; },\n/* harmony export */   \"TableTreeColumn\": function() { return /* binding */ TableTreeColumn; },\n/* harmony export */   \"Toolbar\": function() { return /* binding */ Toolbar; },\n/* harmony export */   \"TreeDataState\": function() { return /* binding */ TreeDataState; },\n/* harmony export */   \"VirtualTableLayout\": function() { return /* binding */ VirtualTableLayout; },\n/* harmony export */   \"VirtualTableState\": function() { return /* binding */ VirtualTableState; },\n/* harmony export */   \"createRowCache\": function() { return /* binding */ createRowCache; },\n/* harmony export */   \"defaultMessages\": function() { return /* binding */ defaultMessages$1; },\n/* harmony export */   \"emptyViewport\": function() { return /* binding */ emptyViewport; },\n/* harmony export */   \"makeVirtualTable\": function() { return /* binding */ makeVirtualTable; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @devexpress/dx-react-core */ \"webpack/sharing/consume/default/@devexpress/dx-react-core/@devexpress/dx-react-core\");\n/* harmony import */ var _devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @devexpress/dx-grid-core */ \"./node_modules/@devexpress/dx-grid-core/dist/dx-grid-core.es.js\");\n/* harmony import */ var _devexpress_dx_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @devexpress/dx-core */ \"./node_modules/@devexpress/dx-core/dist/dx-core.es.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-dom */ \"webpack/sharing/consume/default/react-dom/react-dom\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_4__);\n/**\n * Bundle of @devexpress/dx-react-grid\n * Generated: 2021-06-24\n * Version: 2.7.6\n * License: https://js.devexpress.com/Licensing\n */\n\n\n\n\n\n\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\n\nvar showColumnWhenGroupedGetter = function (showColumnsWhenGrouped, columnExtensions) {\r\n    if (columnExtensions === void 0) { columnExtensions = []; }\r\n    var map = columnExtensions.reduce(function (acc, columnExtension) {\r\n        acc[columnExtension.columnName] = columnExtension.showWhenGrouped;\r\n        return acc;\r\n    }, {});\r\n    return function (columnName) { return map[columnName] || showColumnsWhenGrouped; };\r\n};\r\n/** @internal */\r\nvar TableColumnsWithGrouping = (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(function (_a) {\r\n    var indentColumnWidth = _a.indentColumnWidth, showColumnsWhenGrouped = _a.showColumnsWhenGrouped, columnExtensions = _a.columnExtensions;\r\n    var tableColumnsComputed = function (_a) {\r\n        var columns = _a.columns, tableColumns = _a.tableColumns, grouping = _a.grouping, draftGrouping = _a.draftGrouping;\r\n        return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.tableColumnsWithGrouping)(columns, tableColumns, grouping, draftGrouping, indentColumnWidth, showColumnWhenGroupedGetter(showColumnsWhenGrouped, columnExtensions));\r\n    };\r\n    return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, null,\r\n        (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"tableColumns\", computed: tableColumnsComputed })));\r\n});\r\nTableColumnsWithGrouping.defaultProps = {\r\n    indentColumnWidth: 0,\r\n};\n\nvar GridCoreGetters = (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(function (_a) {\r\n    var rows = _a.rows, columns = _a.columns, getRowId = _a.getRowId, getCellValue = _a.getCellValue;\r\n    return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, null,\r\n        (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"rows\", value: rows }),\r\n        (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"getRowId\", value: (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.rowIdGetter)(getRowId, rows) }),\r\n        (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"columns\", value: columns }),\r\n        (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"getCellValue\", value: (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.cellValueGetter)(getCellValue, columns) })));\r\n});\n\nvar TableColumnsWithDataRowsGetter = (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(function (_a) {\r\n    var columnExtensions = _a.columnExtensions;\r\n    var tableColumnsComputed = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (_a) {\r\n        var columns = _a.columns;\r\n        return ((0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.tableColumnsWithDataRows)(columns, columnExtensions));\r\n    }, [columnExtensions]);\r\n    (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.checkTableColumnExtensions)(columnExtensions);\r\n    return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, null,\r\n        (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"tableColumns\", computed: tableColumnsComputed })));\r\n});\n\nvar visibleTableColumnsComputed = function (_a) {\r\n    var tableColumns = _a.tableColumns, hiddenColumnNames = _a.hiddenColumnNames;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.visibleTableColumns)(tableColumns, hiddenColumnNames);\r\n};\r\n/** @internal */\r\nvar VisibleTableColumns = (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(function (_a) {\r\n    var hiddenColumnNames = _a.hiddenColumnNames;\r\n    return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, null,\r\n        (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"hiddenColumnNames\", value: hiddenColumnNames }),\r\n        (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"tableColumns\", computed: visibleTableColumnsComputed })));\r\n});\r\nVisibleTableColumns.defaultProps = {\r\n    hiddenColumnNames: [],\r\n};\n\n/** @internal */\r\nvar OrderedTableColumns = function (_a) {\r\n    var order = _a.order;\r\n    var columnsComputed = function (_a) {\r\n        var tableColumns = _a.tableColumns;\r\n        return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.orderedColumns)(tableColumns, order);\r\n    };\r\n    return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, null,\r\n        (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"tableColumns\", computed: columnsComputed })));\r\n};\r\nOrderedTableColumns.defaultProps = {\r\n    order: [],\r\n};\n\nvar GridCore = /*#__PURE__*/ (function (_super) {\r\n    __extends(GridCore, _super);\r\n    function GridCore() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    GridCore.prototype.render = function () {\r\n        var _a = this.props, Root = _a.rootComponent, restProps = __rest(_a, [\"rootComponent\"]);\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, null,\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"skip\", value: 0 }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"loadedRowsStart\", value: 0 }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(GridCoreGetters, __assign({}, restProps)),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"root\" },\r\n                (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Root, null,\r\n                    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplatePlaceholder, { name: \"header\" }),\r\n                    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplatePlaceholder, { name: \"body\" }),\r\n                    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplatePlaceholder, { name: \"footer\" })))));\r\n    };\r\n    return GridCore;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\n\nvar GridBase = function (_a) {\r\n    var rows = _a.rows, columns = _a.columns, getRowId = _a.getRowId, getCellValue = _a.getCellValue, rootComponent = _a.rootComponent, children = _a.children;\r\n    return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.PluginHost, null,\r\n        (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(GridCore, { rows: rows, columns: columns, getRowId: getRowId, getCellValue: getCellValue, rootComponent: rootComponent }),\r\n        children));\r\n};\r\n/***\r\n * The Grid is a root container component designed to process and display data specified via\r\n * the `rows` property. You can configure columns using the `columns` property. The Grid's\r\n * functionality  is implemented in several plugins specified as child components.\r\n * See the plugins concept for details.\r\n * */\r\nvar Grid = GridBase;\n\nvar pluginDependencies = [\r\n    { name: 'TableColumnVisibility' },\r\n    { name: 'Toolbar' },\r\n];\r\nvar ColumnChooserBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(ColumnChooserBase, _super);\r\n    function ColumnChooserBase(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.state = {\r\n            visible: false,\r\n        };\r\n        _this.handleToggle = _this.handleToggle.bind(_this);\r\n        _this.handleHide = _this.handleHide.bind(_this);\r\n        _this.setButtonRef = _this.setButtonRef.bind(_this);\r\n        return _this;\r\n    }\r\n    ColumnChooserBase.prototype.setButtonRef = function (button) {\r\n        this.button = button;\r\n    };\r\n    ColumnChooserBase.prototype.handleToggle = function () {\r\n        var visible = this.state.visible;\r\n        this.setState({ visible: !visible });\r\n    };\r\n    ColumnChooserBase.prototype.handleHide = function () {\r\n        this.setState({ visible: false });\r\n    };\r\n    ColumnChooserBase.prototype.render = function () {\r\n        var _this = this;\r\n        var _a = this.props, Overlay = _a.overlayComponent, Container = _a.containerComponent, Item = _a.itemComponent, ToggleButton = _a.toggleButtonComponent, messages = _a.messages;\r\n        var getMessage = (0,_devexpress_dx_core__WEBPACK_IMPORTED_MODULE_3__.getMessagesFormatter)(messages);\r\n        var visible = this.state.visible;\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"ColumnChooser\", dependencies: pluginDependencies },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"toolbarContent\" },\r\n                (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplatePlaceholder, null),\r\n                (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplateConnector, null, function (_a, _b) {\r\n                    var columns = _a.columns, hiddenColumnNames = _a.hiddenColumnNames, isColumnTogglingEnabled = _a.isColumnTogglingEnabled;\r\n                    var toggleColumnVisibility = _b.toggleColumnVisibility;\r\n                    return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,\r\n                        (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(ToggleButton, { buttonRef: _this.setButtonRef, onToggle: _this.handleToggle, getMessage: getMessage, active: visible }),\r\n                        (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Overlay, { visible: visible, target: _this.button, onHide: _this.handleHide },\r\n                            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Container, null, (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.columnChooserItems)(columns, hiddenColumnNames)\r\n                                .map(function (item) {\r\n                                var columnName = item.column.name;\r\n                                var togglingEnabled = isColumnTogglingEnabled(columnName);\r\n                                return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Item, { key: columnName, item: item, disabled: !togglingEnabled, onToggle: function () { return toggleColumnVisibility(columnName); } }));\r\n                            })))));\r\n                }))));\r\n    };\r\n    ColumnChooserBase.defaultProps = {\r\n        messages: {},\r\n    };\r\n    ColumnChooserBase.components = {\r\n        overlayComponent: 'Overlay',\r\n        containerComponent: 'Container',\r\n        itemComponent: 'Item',\r\n        toggleButtonComponent: 'ToggleButton',\r\n    };\r\n    return ColumnChooserBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n/***\r\n * The ColumnChooser plugin allows a user to toggle grid columns' visibility at runtime.\r\n * The column chooser lists columns with checkboxes that control a corresponding\r\n * column's visibility.\r\n * */\r\nvar ColumnChooser = ColumnChooserBase;\n\nvar columnExtensionValueGetter = function (columnExtensions, defaultValue) { return ((0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.getColumnExtensionValueGetter)(columnExtensions, 'filteringEnabled', defaultValue)); };\r\nvar filterExpressionComputed = function (_a) {\r\n    var filters = _a.filters, filterExpressionValue = _a.filterExpression;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.filterExpression)(filters, filterExpressionValue);\r\n};\r\nvar FilteringStateBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(FilteringStateBase, _super);\r\n    function FilteringStateBase(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.state = {\r\n            filters: props.filters || props.defaultFilters,\r\n        };\r\n        var stateHelper = (0,_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.createStateHelper)(_this, {\r\n            filters: function () {\r\n                var onFiltersChange = _this.props.onFiltersChange;\r\n                return onFiltersChange;\r\n            },\r\n        });\r\n        _this.changeColumnFilter = stateHelper.applyFieldReducer\r\n            .bind(stateHelper, 'filters', _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.changeColumnFilter);\r\n        return _this;\r\n    }\r\n    // tslint:disable-next-line:member-ordering\r\n    FilteringStateBase.getDerivedStateFromProps = function (nextProps, prevState) {\r\n        var _a = nextProps.filters, filters = _a === void 0 ? prevState.filters : _a;\r\n        return {\r\n            filters: filters,\r\n        };\r\n    };\r\n    FilteringStateBase.prototype.render = function () {\r\n        var filters = this.state.filters;\r\n        var _a = this.props, columnExtensions = _a.columnExtensions, columnFilteringEnabled = _a.columnFilteringEnabled;\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"FilteringState\" },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"filters\", value: filters }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"filterExpression\", computed: filterExpressionComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"isColumnFilteringEnabled\", value: columnExtensionValueGetter(columnExtensions, columnFilteringEnabled) }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"changeColumnFilter\", action: this.changeColumnFilter })));\r\n    };\r\n    FilteringStateBase.defaultProps = {\r\n        defaultFilters: [],\r\n        columnFilteringEnabled: true,\r\n    };\r\n    return FilteringStateBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n/** A plugin that manages the filtering state. */\r\nvar FilteringState = FilteringStateBase;\n\nvar pluginDependencies$1 = [\r\n    { name: 'FilteringState', optional: true },\r\n    { name: 'SearchState', optional: true },\r\n];\r\nvar getCollapsedRowsComputed = function (_a) {\r\n    var rows = _a.rows;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.filteredCollapsedRowsGetter)(rows);\r\n};\r\nvar unwrappedRowsComputed = function (_a) {\r\n    var rows = _a.rows;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.unwrappedFilteredRows)(rows);\r\n};\r\nvar IntegratedFilteringBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(IntegratedFilteringBase, _super);\r\n    function IntegratedFilteringBase() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    IntegratedFilteringBase.prototype.render = function () {\r\n        var columnExtensions = this.props.columnExtensions;\r\n        var getColumnPredicate = function (columnName) { return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.getColumnExtension)(columnExtensions, columnName).predicate; };\r\n        var rowsComputed = function (_a) {\r\n            var rows = _a.rows, filterExpression = _a.filterExpression, getCellValue = _a.getCellValue, getRowLevelKey = _a.getRowLevelKey, getCollapsedRows = _a.getCollapsedRows;\r\n            return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.filteredRows)(rows, filterExpression, getCellValue, getColumnPredicate, getRowLevelKey, getCollapsedRows);\r\n        };\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"IntegratedFiltering\", dependencies: pluginDependencies$1 },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"rows\", computed: rowsComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"getCollapsedRows\", computed: getCollapsedRowsComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"rows\", computed: unwrappedRowsComputed })));\r\n    };\r\n    return IntegratedFilteringBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\nIntegratedFilteringBase.defaultPredicate = _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.defaultFilterPredicate;\r\nvar IntegratedFiltering = IntegratedFilteringBase;\n\nvar columnExtensionValueGetter$1 = function (columnExtensions, defaultValue) { return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.getColumnExtensionValueGetter)(columnExtensions, 'editingEnabled', defaultValue); };\r\nvar EditingStateBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(EditingStateBase, _super);\r\n    function EditingStateBase(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        var rowChanges = props.rowChanges || props.defaultRowChanges;\r\n        var addedRows = props.addedRows || props.defaultAddedRows;\r\n        var getRowChanges = function () {\r\n            var stateRowChanges = _this.state.rowChanges;\r\n            return stateRowChanges;\r\n        };\r\n        var getAddedRows = function () {\r\n            var stateAddedRows = _this.state.addedRows;\r\n            return stateAddedRows;\r\n        };\r\n        _this.state = {\r\n            addedRows: addedRows,\r\n            rowChanges: rowChanges,\r\n            editingRowIds: props.editingRowIds || props.defaultEditingRowIds,\r\n            deletedRowIds: props.deletedRowIds || props.defaultDeletedRowIds,\r\n            editingCells: props.editingCells || props.defaultEditingCells,\r\n        };\r\n        var stateHelper = (0,_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.createStateHelper)(_this, {\r\n            editingRowIds: function () {\r\n                var onEditingRowIdsChange = _this.props.onEditingRowIdsChange;\r\n                return onEditingRowIdsChange;\r\n            },\r\n            editingCells: function () {\r\n                var onEditingCellsChange = _this.props.onEditingCellsChange;\r\n                return onEditingCellsChange;\r\n            },\r\n            addedRows: function () {\r\n                var onAddedRowsChange = _this.props.onAddedRowsChange;\r\n                return onAddedRowsChange;\r\n            },\r\n            rowChanges: function () {\r\n                var onRowChangesChange = _this.props.onRowChangesChange;\r\n                return onRowChangesChange;\r\n            },\r\n            deletedRowIds: function () {\r\n                var onDeletedRowIdsChange = _this.props.onDeletedRowIdsChange;\r\n                return onDeletedRowIdsChange;\r\n            },\r\n        });\r\n        _this.startEditRows = stateHelper.applyFieldReducer\r\n            .bind(stateHelper, 'editingRowIds', _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.startEditRows);\r\n        _this.stopEditRows = stateHelper.applyFieldReducer\r\n            .bind(stateHelper, 'editingRowIds', _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.stopEditRows);\r\n        _this.startEditCells = stateHelper.applyFieldReducer\r\n            .bind(stateHelper, 'editingCells', _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.startEditCells);\r\n        _this.stopEditCells = stateHelper.applyFieldReducer\r\n            .bind(stateHelper, 'editingCells', _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.stopEditCells);\r\n        _this.changeRow = stateHelper.applyFieldReducer\r\n            .bind(stateHelper, 'rowChanges', _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.changeRow);\r\n        _this.cancelChangedRows = stateHelper.applyFieldReducer\r\n            .bind(stateHelper, 'rowChanges', _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.cancelChanges);\r\n        _this.commitChangedRows = function (_a) {\r\n            var rowIds = _a.rowIds;\r\n            var onCommitChanges = _this.props.onCommitChanges;\r\n            onCommitChanges({\r\n                changed: (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.changedRowsByIds)(getRowChanges(), rowIds),\r\n            });\r\n            _this.cancelChangedRows({ rowIds: rowIds });\r\n        };\r\n        _this.addRow = stateHelper.applyFieldReducer\r\n            .bind(stateHelper, 'addedRows', _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.addRow);\r\n        _this.changeAddedRow = stateHelper.applyFieldReducer\r\n            .bind(stateHelper, 'addedRows', _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.changeAddedRow);\r\n        _this.cancelAddedRows = stateHelper.applyFieldReducer\r\n            .bind(stateHelper, 'addedRows', _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.cancelAddedRows);\r\n        _this.commitAddedRows = function (_a) {\r\n            var rowIds = _a.rowIds;\r\n            var onCommitChanges = _this.props.onCommitChanges;\r\n            onCommitChanges({\r\n                added: (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.addedRowsByIds)(getAddedRows(), rowIds),\r\n            });\r\n            _this.cancelAddedRows({ rowIds: rowIds });\r\n        };\r\n        _this.deleteRows = stateHelper.applyFieldReducer\r\n            .bind(stateHelper, 'deletedRowIds', _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.deleteRows);\r\n        _this.cancelDeletedRows = stateHelper.applyFieldReducer\r\n            .bind(stateHelper, 'deletedRowIds', _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.cancelDeletedRows);\r\n        _this.commitDeletedRows = function (_a) {\r\n            var rowIds = _a.rowIds;\r\n            var onCommitChanges = _this.props.onCommitChanges;\r\n            onCommitChanges({ deleted: rowIds });\r\n            _this.cancelDeletedRows({ rowIds: rowIds });\r\n        };\r\n        return _this;\r\n    }\r\n    EditingStateBase.getDerivedStateFromProps = function (nextProps, prevState) {\r\n        var _a = nextProps.editingRowIds, editingRowIds = _a === void 0 ? prevState.editingRowIds : _a, _b = nextProps.editingCells, editingCells = _b === void 0 ? prevState.editingCells : _b, _c = nextProps.rowChanges, rowChanges = _c === void 0 ? prevState.rowChanges : _c, _d = nextProps.addedRows, addedRows = _d === void 0 ? prevState.addedRows : _d, _e = nextProps.deletedRowIds, deletedRowIds = _e === void 0 ? prevState.deletedRowIds : _e;\r\n        return {\r\n            editingRowIds: editingRowIds,\r\n            editingCells: editingCells,\r\n            rowChanges: rowChanges,\r\n            addedRows: addedRows,\r\n            deletedRowIds: deletedRowIds,\r\n        };\r\n    };\r\n    EditingStateBase.prototype.render = function () {\r\n        var _a = this.props, createRowChange = _a.createRowChange, columnExtensions = _a.columnExtensions, columnEditingEnabled = _a.columnEditingEnabled;\r\n        var _b = this.state, editingRowIds = _b.editingRowIds, editingCells = _b.editingCells, rowChanges = _b.rowChanges, addedRows = _b.addedRows, deletedRowIds = _b.deletedRowIds;\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"EditingState\" },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"createRowChange\", value: (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.createRowChangeGetter)(createRowChange, columnExtensions) }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"editingRowIds\", value: editingRowIds }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"startEditRows\", action: this.startEditRows }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"stopEditRows\", action: this.stopEditRows }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"editingCells\", value: editingCells }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"startEditCells\", action: this.startEditCells }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"stopEditCells\", action: this.stopEditCells }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"rowChanges\", value: rowChanges }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"changeRow\", action: this.changeRow }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"cancelChangedRows\", action: this.cancelChangedRows }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"commitChangedRows\", action: this.commitChangedRows }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"addedRows\", value: addedRows }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"addRow\", action: this.addRow }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"changeAddedRow\", action: this.changeAddedRow }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"cancelAddedRows\", action: this.cancelAddedRows }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"commitAddedRows\", action: this.commitAddedRows }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"deletedRowIds\", value: deletedRowIds }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"deleteRows\", action: this.deleteRows }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"cancelDeletedRows\", action: this.cancelDeletedRows }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"commitDeletedRows\", action: this.commitDeletedRows }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"isColumnEditingEnabled\", value: columnExtensionValueGetter$1(columnExtensions, columnEditingEnabled) })));\r\n    };\r\n    EditingStateBase.defaultProps = {\r\n        columnEditingEnabled: true,\r\n        defaultEditingRowIds: [],\r\n        defaultEditingCells: [],\r\n        defaultRowChanges: {},\r\n        defaultAddedRows: [],\r\n        defaultDeletedRowIds: [],\r\n    };\r\n    return EditingStateBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n/***\r\n * A plugin that manages grid rows' editing state. It arranges grid rows\r\n * by different lists depending on a row's state.\r\n * */\r\nvar EditingState = EditingStateBase;\n\nvar PagingStateBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(PagingStateBase, _super);\r\n    function PagingStateBase(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.state = {\r\n            currentPage: props.currentPage || props.defaultCurrentPage,\r\n            pageSize: props.pageSize !== undefined ? props.pageSize : props.defaultPageSize,\r\n        };\r\n        var stateHelper = (0,_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.createStateHelper)(_this, {\r\n            currentPage: function () {\r\n                var onCurrentPageChange = _this.props.onCurrentPageChange;\r\n                return onCurrentPageChange;\r\n            },\r\n            pageSize: function () {\r\n                var onPageSizeChange = _this.props.onPageSizeChange;\r\n                return onPageSizeChange;\r\n            },\r\n        });\r\n        _this.setCurrentPage = stateHelper.applyFieldReducer\r\n            .bind(stateHelper, 'currentPage', _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.setCurrentPage);\r\n        _this.setPageSize = stateHelper.applyFieldReducer\r\n            .bind(stateHelper, 'pageSize', _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.setPageSize);\r\n        return _this;\r\n    }\r\n    PagingStateBase.getDerivedStateFromProps = function (nextProps, prevState) {\r\n        var _a = nextProps.currentPage, currentPage = _a === void 0 ? prevState.currentPage : _a, _b = nextProps.pageSize, pageSize = _b === void 0 ? prevState.pageSize : _b;\r\n        return {\r\n            currentPage: currentPage,\r\n            pageSize: pageSize,\r\n        };\r\n    };\r\n    PagingStateBase.prototype.render = function () {\r\n        var _a = this.state, pageSize = _a.pageSize, currentPage = _a.currentPage;\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"PagingState\" },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"currentPage\", value: currentPage }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"pageSize\", value: pageSize }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"setCurrentPage\", action: this.setCurrentPage }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"setPageSize\", action: this.setPageSize })));\r\n    };\r\n    PagingStateBase.defaultProps = {\r\n        defaultPageSize: 10,\r\n        defaultCurrentPage: 0,\r\n    };\r\n    return PagingStateBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n/***\r\n * A plugin that manages the paging state. It controls the total page count depending on the\r\n * total row count and the specified page size, controls the currently selected page number\r\n * and changes it in response to the corresponding actions.\r\n * */\r\nvar PagingState = PagingStateBase;\n\nvar pluginDependencies$2 = [\r\n    { name: 'PagingState' },\r\n];\r\nvar rowsWithHeadersComputed = function (_a) {\r\n    var rows = _a.rows, pageSize = _a.pageSize, getRowLevelKey = _a.getRowLevelKey;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.rowsWithPageHeaders)(rows, pageSize, getRowLevelKey);\r\n};\r\nvar totalCountComputed = function (_a) {\r\n    var rows = _a.rows;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.rowCount)(rows);\r\n};\r\nvar paginatedRowsComputed = function (_a) {\r\n    var rows = _a.rows, pageSize = _a.pageSize, page = _a.currentPage;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.paginatedRows)(rows, pageSize, page);\r\n};\r\nvar currentPageComputed = function (_a, _b) {\r\n    var page = _a.currentPage, totalCount = _a.totalCount, pageSize = _a.pageSize;\r\n    var setCurrentPage = _b.setCurrentPage;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.currentPage)(page, totalCount, pageSize, setCurrentPage);\r\n};\r\n// eslint-disable-next-line react/prefer-stateless-function\r\nvar IntegratedPagingBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(IntegratedPagingBase, _super);\r\n    function IntegratedPagingBase() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    IntegratedPagingBase.prototype.render = function () {\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"IntegratedPaging\", dependencies: pluginDependencies$2 },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"rows\", computed: rowsWithHeadersComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"totalCount\", computed: totalCountComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"currentPage\", computed: currentPageComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"rows\", computed: paginatedRowsComputed })));\r\n    };\r\n    return IntegratedPagingBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n/***\r\n * A plugin that performs built-in data paging. It also changes the current page if the provided\r\n * one cannot be applied due to fewer available pages.\r\n * */\r\nvar IntegratedPaging = IntegratedPagingBase;\n\nvar pluginDependencies$3 = [\r\n    { name: 'PagingState' },\r\n];\r\nvar CustomPagingBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(CustomPagingBase, _super);\r\n    function CustomPagingBase() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    CustomPagingBase.prototype.render = function () {\r\n        var totalCount = this.props.totalCount;\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"CustomPaging\", dependencies: pluginDependencies$3 },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"totalCount\", value: totalCount })));\r\n    };\r\n    CustomPagingBase.defaultProps = {\r\n        totalCount: 0,\r\n    };\r\n    return CustomPagingBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n/** A plugin that allows implementing a custom totalCount calculation logic. */\r\nvar CustomPaging = CustomPagingBase;\n\nvar dependencies = [\r\n    { name: 'SortingState', optional: true },\r\n];\r\nvar columnExtensionValueGetter$2 = function (columnExtensions, defaultValue) { return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.getColumnExtensionValueGetter)(columnExtensions, 'groupingEnabled', defaultValue); };\r\nvar GroupingStateBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(GroupingStateBase, _super);\r\n    function GroupingStateBase(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.state = {\r\n            grouping: props.grouping || props.defaultGrouping,\r\n            draftGrouping: null,\r\n            expandedGroups: props.expandedGroups || props.defaultExpandedGroups,\r\n        };\r\n        _this.stateHelper = (0,_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.createStateHelper)(_this, {\r\n            grouping: function () {\r\n                var onGroupingChange = _this.props.onGroupingChange;\r\n                return onGroupingChange;\r\n            },\r\n            expandedGroups: function () {\r\n                var onExpandedGroupsChange = _this.props.onExpandedGroupsChange;\r\n                return onExpandedGroupsChange;\r\n            },\r\n        });\r\n        _this.changeColumnGrouping = _this.changeColumnGrouping.bind(_this);\r\n        _this.toggleGroupExpanded = _this.stateHelper.applyReducer\r\n            .bind(_this.stateHelper, _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.toggleExpandedGroups);\r\n        _this.draftColumnGrouping = _this.stateHelper.applyReducer\r\n            .bind(_this.stateHelper, _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.draftColumnGrouping);\r\n        _this.cancelColumnGroupingDraft = _this.stateHelper.applyReducer\r\n            .bind(_this.stateHelper, _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.cancelColumnGroupingDraft);\r\n        _this.changeColumnSorting = _this.changeColumnSorting.bind(_this);\r\n        return _this;\r\n    }\r\n    GroupingStateBase.getDerivedStateFromProps = function (nextProps, prevState) {\r\n        var _a = nextProps.grouping, grouping = _a === void 0 ? prevState.grouping : _a, _b = nextProps.expandedGroups, expandedGroups = _b === void 0 ? prevState.expandedGroups : _b;\r\n        return {\r\n            grouping: grouping,\r\n            expandedGroups: expandedGroups,\r\n        };\r\n    };\r\n    GroupingStateBase.prototype.changeColumnSorting = function (_a, _b, _c) {\r\n        var sorting = _b.sorting;\r\n        var changeColumnSorting = _c.changeColumnSorting;\r\n        var columnName = _a.columnName, keepOther = _a.keepOther, restParams = __rest(_a, [\"columnName\", \"keepOther\"]);\r\n        var grouping = this.state.grouping;\r\n        var groupingIndex = grouping\r\n            .findIndex(function (columnGrouping) { return columnGrouping.columnName === columnName; });\r\n        if (groupingIndex === -1) {\r\n            changeColumnSorting(__assign({ columnName: columnName, keepOther: keepOther || grouping.map(function (columnGrouping) { return columnGrouping.columnName; }) }, restParams));\r\n            return false;\r\n        }\r\n        var sortIndex = (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.adjustSortIndex)(groupingIndex, grouping, sorting);\r\n        changeColumnSorting(__assign({ columnName: columnName,\r\n            sortIndex: sortIndex, keepOther: true }, restParams));\r\n        return false;\r\n    };\r\n    GroupingStateBase.prototype.changeColumnGrouping = function (_a, getters, actions) {\r\n        var columnName = _a.columnName, groupIndex = _a.groupIndex;\r\n        this.stateHelper.applyReducer(_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.changeColumnGrouping, { columnName: columnName, groupIndex: groupIndex }, function (nextState, state) {\r\n            var grouping = nextState.grouping;\r\n            var prevGrouping = state.grouping;\r\n            var sorting = getters.sorting;\r\n            var changeColumnSorting = actions.changeColumnSorting;\r\n            if (!sorting)\r\n                return;\r\n            var columnSortingIndex = sorting\r\n                .findIndex(function (columnSorting) { return columnSorting.columnName === columnName; });\r\n            var prevGroupingIndex = prevGrouping\r\n                .findIndex(function (columnGrouping) { return columnGrouping.columnName === columnName; });\r\n            var groupingIndex = grouping\r\n                .findIndex(function (columnGrouping) { return columnGrouping.columnName === columnName; });\r\n            if (columnSortingIndex === -1\r\n                || (prevGroupingIndex === prevGrouping.length - 1 && groupingIndex === -1))\r\n                return;\r\n            var sortIndex = (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.adjustSortIndex)(groupingIndex === -1 ? grouping.length : groupingIndex, grouping, sorting);\r\n            if (columnSortingIndex === sortIndex)\r\n                return;\r\n            changeColumnSorting(__assign({ sortIndex: sortIndex, keepOther: true }, sorting[columnSortingIndex]));\r\n        });\r\n    };\r\n    GroupingStateBase.prototype.render = function () {\r\n        var _a = this.state, grouping = _a.grouping, draftGrouping = _a.draftGrouping, expandedGroups = _a.expandedGroups;\r\n        var _b = this.props, columnExtensions = _b.columnExtensions, columnGroupingEnabled = _b.columnGroupingEnabled;\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"GroupingState\", dependencies: dependencies },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"grouping\", value: grouping }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"draftGrouping\", value: draftGrouping || grouping }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"isColumnGroupingEnabled\", value: columnExtensionValueGetter$2(columnExtensions, columnGroupingEnabled) }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"changeColumnGrouping\", action: this.changeColumnGrouping }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"draftColumnGrouping\", action: this.draftColumnGrouping }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"cancelColumnGroupingDraft\", action: this.cancelColumnGroupingDraft }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"expandedGroups\", value: expandedGroups }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"toggleGroupExpanded\", action: this.toggleGroupExpanded }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"changeColumnSorting\", action: this.changeColumnSorting })));\r\n    };\r\n    GroupingStateBase.defaultProps = {\r\n        defaultGrouping: [],\r\n        defaultExpandedGroups: [],\r\n        columnGroupingEnabled: true,\r\n    };\r\n    return GroupingStateBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n/***\r\n * A plugin that manages the grouping state. It lists columns used for grouping and stores\r\n * information about expanded/collapsed groups.\r\n * */\r\nvar GroupingState = GroupingStateBase;\n\nvar pluginDependencies$4 = [\r\n    { name: 'GroupingState' },\r\n];\r\nvar getCollapsedRowsComputed$1 = function (_a) {\r\n    var getCollapsedRows = _a.getCollapsedRows;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.groupCollapsedRowsGetter)(getCollapsedRows);\r\n};\r\nvar expandedGroupedRowsComputed = function (_a) {\r\n    var rows = _a.rows, grouping = _a.grouping, expandedGroups = _a.expandedGroups, isExporting = _a.isExporting;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.expandedGroupRows)(rows, grouping, expandedGroups, isExporting);\r\n};\r\nvar IntegratedGroupingBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(IntegratedGroupingBase, _super);\r\n    function IntegratedGroupingBase() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    IntegratedGroupingBase.prototype.render = function () {\r\n        var columnExtensions = this.props.columnExtensions;\r\n        var getColumnCriteria = function (columnName) { return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.getColumnExtension)(columnExtensions, columnName).criteria; };\r\n        var groupedRowsComputed = function (_a) {\r\n            var rows = _a.rows, grouping = _a.grouping, getCellValue = _a.getCellValue;\r\n            return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.groupedRows)(rows, grouping, getCellValue, getColumnCriteria);\r\n        };\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"IntegratedGrouping\", dependencies: pluginDependencies$4 },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"isGroupRow\", value: _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.groupRowChecker }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"getRowLevelKey\", value: _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.groupRowLevelKeyGetter }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"getCollapsedRows\", computed: getCollapsedRowsComputed$1 }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"rows\", computed: groupedRowsComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"rows\", computed: expandedGroupedRowsComputed })));\r\n    };\r\n    return IntegratedGroupingBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n/* tslint:disable: max-line-length */\r\n/** A plugin that performs built-in grouping and group expanding/collapsing. */\r\nvar IntegratedGrouping = IntegratedGroupingBase;\r\n/* tslint:enable: max-line-length */\n\nvar pluginDependencies$5 = [\r\n    { name: 'GroupingState' },\r\n];\r\nvar getCollapsedRowsComputed$2 = function (_a) {\r\n    var getCollapsedRows = _a.getCollapsedRows;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.groupCollapsedRowsGetter)(getCollapsedRows);\r\n};\r\nvar expandedGroupedRowsComputed$1 = function (_a) {\r\n    var rows = _a.rows, grouping = _a.grouping, expandedGroups = _a.expandedGroups, isExporting = _a.isExporting;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.expandedGroupRows)(rows, grouping, expandedGroups, isExporting);\r\n};\r\nvar getRowIdComputed = function (_a) {\r\n    var getRowId = _a.getRowId, rows = _a.rows;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.customGroupingRowIdGetter)(getRowId, rows);\r\n};\r\nvar CustomGroupingBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(CustomGroupingBase, _super);\r\n    function CustomGroupingBase() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    CustomGroupingBase.prototype.render = function () {\r\n        var _a = this.props, getChildGroups = _a.getChildGroups, appliedGrouping = _a.grouping, appliedExpandedGroups = _a.expandedGroups;\r\n        var groupedRowsComputed = function (_a) {\r\n            var rows = _a.rows, grouping = _a.grouping;\r\n            return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.customGroupedRows)(rows, grouping, getChildGroups);\r\n        };\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"CustomGrouping\", dependencies: pluginDependencies$5 },\r\n            appliedGrouping && ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"grouping\", value: appliedGrouping })),\r\n            appliedExpandedGroups && ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"expandedGroups\", value: appliedExpandedGroups })),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"isGroupRow\", value: _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.groupRowChecker }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"getRowLevelKey\", value: _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.groupRowLevelKeyGetter }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"getCollapsedRows\", computed: getCollapsedRowsComputed$2 }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"rows\", computed: groupedRowsComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"getRowId\", computed: getRowIdComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"rows\", computed: expandedGroupedRowsComputed$1 })));\r\n    };\r\n    return CustomGroupingBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n// tslint:disable-next-line: max-line-length\r\n/** A plugin that converts custom formatted grouped data to a supported format and performs local group expanding/collapsing. */\r\nvar CustomGrouping = CustomGroupingBase;\n\nvar SelectionStateBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(SelectionStateBase, _super);\r\n    function SelectionStateBase(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.state = {\r\n            selection: props.selection || props.defaultSelection,\r\n        };\r\n        var stateHelper = (0,_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.createStateHelper)(_this, {\r\n            selection: function () {\r\n                var onSelectionChange = _this.props.onSelectionChange;\r\n                return onSelectionChange;\r\n            },\r\n        });\r\n        _this.toggleSelection = stateHelper.applyFieldReducer\r\n            .bind(stateHelper, 'selection', _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.toggleSelection);\r\n        return _this;\r\n    }\r\n    SelectionStateBase.getDerivedStateFromProps = function (nextProps, prevState) {\r\n        var _a = nextProps.selection, selection = _a === void 0 ? prevState.selection : _a;\r\n        return {\r\n            selection: selection,\r\n        };\r\n    };\r\n    SelectionStateBase.prototype.render = function () {\r\n        var selection = this.state.selection;\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"SelectionState\" },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"selection\", value: selection }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"toggleSelection\", action: this.toggleSelection })));\r\n    };\r\n    SelectionStateBase.defaultProps = {\r\n        defaultSelection: [],\r\n    };\r\n    return SelectionStateBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n/** A plugin that manages the selection state. */\r\nvar SelectionState = SelectionStateBase;\n\nvar rowsWithAvailableToSelectComputed = function (_a) {\r\n    var rows = _a.rows, getRowId = _a.getRowId, isGroupRow = _a.isGroupRow;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.rowsWithAvailableToSelect)(rows, getRowId, isGroupRow);\r\n};\r\nvar allSelectedComputed = function (_a) {\r\n    var rows = _a.rows, selection = _a.selection;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.allSelected)(rows, selection);\r\n};\r\nvar someSelectedComputed = function (_a) {\r\n    var rows = _a.rows, selection = _a.selection;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.someSelected)(rows, selection);\r\n};\r\nvar selectAllAvailableComputed = function (_a) {\r\n    var availableToSelect = _a.rows.availableToSelect;\r\n    return !!availableToSelect.length;\r\n};\r\nvar toggleSelectAll = function (state, _a, _b) {\r\n    var availableToSelect = _a.rows.availableToSelect;\r\n    var toggleSelection = _b.toggleSelection;\r\n    toggleSelection({ state: state, rowIds: availableToSelect });\r\n};\r\nvar unwrapRowsComputed = function (_a) {\r\n    var rows = _a.rows;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.unwrapSelectedRows)(rows);\r\n};\r\nvar pluginDependencies$6 = [\r\n    { name: 'SelectionState' },\r\n];\r\n// eslint-disable-next-line react/prefer-stateless-function\r\nvar IntegratedSelectionBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(IntegratedSelectionBase, _super);\r\n    function IntegratedSelectionBase() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    IntegratedSelectionBase.prototype.render = function () {\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"IntegratedSelection\", dependencies: pluginDependencies$6 },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"rows\", computed: rowsWithAvailableToSelectComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"allSelected\", computed: allSelectedComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"someSelected\", computed: someSelectedComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"selectAllAvailable\", computed: selectAllAvailableComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"toggleSelectAll\", action: toggleSelectAll }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"rows\", computed: unwrapRowsComputed })));\r\n    };\r\n    return IntegratedSelectionBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n/* tslint:disable: max-line-length */\r\n/** A plugin that performs built-in selection. */\r\nvar IntegratedSelection = IntegratedSelectionBase;\r\n/* tslint:enable: max-line-length */\n\nvar columnExtensionValueGetter$3 = function (columnExtensions, defaultValue) { return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.getColumnExtensionValueGetter)(columnExtensions, 'sortingEnabled', defaultValue); };\r\nvar SortingStateBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(SortingStateBase, _super);\r\n    function SortingStateBase(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.state = {\r\n            sorting: props.sorting || props.defaultSorting,\r\n        };\r\n        var stateHelper = (0,_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.createStateHelper)(_this, {\r\n            sorting: function () {\r\n                var onSortingChange = _this.props.onSortingChange;\r\n                return onSortingChange;\r\n            },\r\n        });\r\n        _this.changeColumnSorting = stateHelper.applyReducer\r\n            .bind(stateHelper, function (prevState, payload) {\r\n            var _a = _this.props.sorting, sorting = _a === void 0 ? prevState.sorting : _a;\r\n            var persistentSortedColumns = (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.getPersistentSortedColumns)(sorting, props.columnExtensions);\r\n            var keepOther = (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.calculateKeepOther)(prevState.sorting, payload.keepOther, persistentSortedColumns);\r\n            return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.changeColumnSorting)(prevState, __assign(__assign({}, payload), { keepOther: keepOther }));\r\n        });\r\n        return _this;\r\n    }\r\n    SortingStateBase.getDerivedStateFromProps = function (nextProps, prevState) {\r\n        var _a = nextProps.sorting, sorting = _a === void 0 ? prevState.sorting : _a;\r\n        return {\r\n            sorting: sorting,\r\n        };\r\n    };\r\n    SortingStateBase.prototype.render = function () {\r\n        var sorting = this.state.sorting;\r\n        var _a = this.props, columnExtensions = _a.columnExtensions, columnSortingEnabled = _a.columnSortingEnabled;\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"SortingState\" },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"sorting\", value: sorting }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"isColumnSortingEnabled\", value: columnExtensionValueGetter$3(columnExtensions, columnSortingEnabled) }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"changeColumnSorting\", action: this.changeColumnSorting })));\r\n    };\r\n    SortingStateBase.defaultProps = {\r\n        defaultSorting: [],\r\n        columnSortingEnabled: true,\r\n    };\r\n    return SortingStateBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n// tslint:disable-next-line: max-line-length\r\n/** A plugin that manages the sorting state. It controls the list of columns that participate in sorting. */\r\nvar SortingState = SortingStateBase;\n\nvar pluginDependencies$7 = [\r\n    { name: 'SortingState' },\r\n];\r\nvar IntegratedSortingBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(IntegratedSortingBase, _super);\r\n    function IntegratedSortingBase() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    IntegratedSortingBase.prototype.render = function () {\r\n        var columnExtensions = this.props.columnExtensions;\r\n        var getColumnCompare = function (columnName) { return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.getColumnExtension)(columnExtensions, columnName).compare; };\r\n        var rowsComputed = function (_a) {\r\n            var rows = _a.rows, sorting = _a.sorting, getCellValue = _a.getCellValue, isGroupRow = _a.isGroupRow, getRowLevelKey = _a.getRowLevelKey;\r\n            return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.sortedRows)(rows, sorting, getCellValue, getColumnCompare, isGroupRow, getRowLevelKey);\r\n        };\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"IntegratedSorting\", dependencies: pluginDependencies$7 },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"rows\", computed: rowsComputed })));\r\n    };\r\n    return IntegratedSortingBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n/** A plugin that performs built-in data sorting. */\r\nvar IntegratedSorting = IntegratedSortingBase;\n\nvar getTargetColumns = function (payload, columns) { return payload\r\n    .filter(function (item) { return item.type === 'column'; })\r\n    .map(function (item) { return columns.find(function (column) { return column.name === item.columnName; }); }); };\r\n// tslint:disable-next-line: max-line-length\r\nvar DragDropProviderBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(DragDropProviderBase, _super);\r\n    function DragDropProviderBase(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.state = {\r\n            payload: null,\r\n            clientOffset: null,\r\n        };\r\n        _this.change = function (_a) {\r\n            var payload = _a.payload, clientOffset = _a.clientOffset;\r\n            return _this.setState({ payload: payload, clientOffset: clientOffset });\r\n        };\r\n        return _this;\r\n    }\r\n    DragDropProviderBase.prototype.componentDidMount = function () {\r\n        this.bodyRef = document.body;\r\n    };\r\n    DragDropProviderBase.prototype.render = function () {\r\n        var _this = this;\r\n        var _a = this.props, Container = _a.containerComponent, Column = _a.columnComponent;\r\n        var _b = this.state, payload = _b.payload, clientOffset = _b.clientOffset;\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"DragDropProvider\" },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"draggingEnabled\", value: true }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"root\" },\r\n                (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.DragDropProvider, { onChange: this.change },\r\n                    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplatePlaceholder, null)),\r\n                payload && ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplateConnector, null, function (_a) {\r\n                    var columns = _a.columns;\r\n                    return ((0,react_dom__WEBPACK_IMPORTED_MODULE_4__.createPortal)((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Container, { clientOffset: clientOffset }, getTargetColumns(payload, columns)\r\n                        .map(function (column) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Column, { key: column.name, column: column })); })), _this.bodyRef));\r\n                })))));\r\n    };\r\n    DragDropProviderBase.components = {\r\n        containerComponent: 'Container',\r\n        columnComponent: 'Column',\r\n    };\r\n    return DragDropProviderBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n// tslint:disable-next-line: max-line-length\r\n/** A plugin that implements the drag-and-drop functionality and visualizes columns that are being dragged. */\r\nvar DragDropProvider = DragDropProviderBase;\n\nvar pluginDependencies$8 = [\r\n    { name: 'Table' },\r\n    { name: 'DragDropProvider', optional: true },\r\n];\r\nvar tableHeaderRowsComputed = function (_a) {\r\n    var tableHeaderRows = _a.tableHeaderRows;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.tableHeaderRowsWithReordering)(tableHeaderRows);\r\n};\r\n// tslint:disable-next-line: max-line-length\r\nvar TableColumnReorderingRaw = /*#__PURE__*/ (function (_super) {\r\n    __extends(TableColumnReorderingRaw, _super);\r\n    function TableColumnReorderingRaw(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.cellDimensionGetters = {};\r\n        _this.cellDimensions = [];\r\n        _this.state = {\r\n            order: props.defaultOrder,\r\n            sourceColumnIndex: -1,\r\n            targetColumnIndex: -1,\r\n        };\r\n        _this.onOver = _this.handleOver.bind(_this);\r\n        _this.onLeave = _this.handleLeave.bind(_this);\r\n        _this.onDrop = _this.handleDrop.bind(_this);\r\n        return _this;\r\n    }\r\n    TableColumnReorderingRaw.prototype.getState = function () {\r\n        var orderState = this.state.order;\r\n        var _a = this.props.order, order = _a === void 0 ? orderState : _a;\r\n        return __assign(__assign({}, this.state), { order: order });\r\n    };\r\n    TableColumnReorderingRaw.prototype.getDraftOrder = function () {\r\n        var _a = this.getState(), order = _a.order, sourceColumnIndex = _a.sourceColumnIndex, targetColumnIndex = _a.targetColumnIndex;\r\n        return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.draftOrder)(order, sourceColumnIndex, targetColumnIndex);\r\n    };\r\n    TableColumnReorderingRaw.prototype.getAvailableColumns = function () {\r\n        var _this = this;\r\n        return this.getDraftOrder()\r\n            .filter(function (columnName) { return !!_this.cellDimensionGetters[columnName]; });\r\n    };\r\n    TableColumnReorderingRaw.prototype.cacheCellDimensions = function () {\r\n        var _this = this;\r\n        this.cellDimensions = (this.cellDimensions && this.cellDimensions.length)\r\n            ? this.cellDimensions\r\n            : this.getAvailableColumns()\r\n                .map(function (columnName) { return _this.cellDimensionGetters[columnName](); });\r\n    };\r\n    TableColumnReorderingRaw.prototype.resetCellDimensions = function () {\r\n        this.cellDimensions = [];\r\n    };\r\n    TableColumnReorderingRaw.prototype.ensureCellDimensionGetters = function (tableColumns) {\r\n        var _this = this;\r\n        Object.keys(this.cellDimensionGetters)\r\n            .forEach(function (columnName) {\r\n            var columnIndex = tableColumns\r\n                .findIndex(function (_a) {\r\n                var type = _a.type, column = _a.column;\r\n                return type === _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.TABLE_DATA_TYPE && column.name === columnName;\r\n            });\r\n            if (columnIndex === -1) {\r\n                delete _this.cellDimensionGetters[columnName];\r\n            }\r\n        });\r\n    };\r\n    // tslint:disable-next-line: max-line-length\r\n    TableColumnReorderingRaw.prototype.storeCellDimensionsGetter = function (tableColumn, getter, tableColumns) {\r\n        if (tableColumn.type === _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.TABLE_DATA_TYPE) {\r\n            this.cellDimensionGetters[tableColumn.column.name] = getter;\r\n        }\r\n        this.ensureCellDimensionGetters(tableColumns);\r\n    };\r\n    TableColumnReorderingRaw.prototype.handleOver = function (_a) {\r\n        var payload = _a.payload, x = _a.clientOffset.x;\r\n        var sourceColumnName = payload[0].columnName;\r\n        var availableColumns = this.getAvailableColumns();\r\n        var relativeSourceColumnIndex = availableColumns.indexOf(sourceColumnName);\r\n        if (relativeSourceColumnIndex === -1)\r\n            return;\r\n        this.cacheCellDimensions();\r\n        var cellDimensions = this.cellDimensions;\r\n        var relativeTargetIndex = (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.getTableTargetColumnIndex)(cellDimensions, x);\r\n        if (relativeTargetIndex === -1)\r\n            return;\r\n        var _b = this.getState(), prevSourceColumnIndex = _b.sourceColumnIndex, prevTargetColumnIndex = _b.targetColumnIndex;\r\n        var draftOrder = this.getDraftOrder();\r\n        var targetColumnIndex = draftOrder.indexOf(availableColumns[relativeTargetIndex]);\r\n        if (targetColumnIndex === prevTargetColumnIndex)\r\n            return;\r\n        var sourceColumnIndex = prevSourceColumnIndex === -1\r\n            ? draftOrder.indexOf(sourceColumnName)\r\n            : prevSourceColumnIndex;\r\n        this.setState({\r\n            sourceColumnIndex: sourceColumnIndex,\r\n            targetColumnIndex: targetColumnIndex,\r\n        });\r\n    };\r\n    TableColumnReorderingRaw.prototype.handleLeave = function () {\r\n        this.setState({\r\n            sourceColumnIndex: -1,\r\n            targetColumnIndex: -1,\r\n        });\r\n        this.resetCellDimensions();\r\n    };\r\n    TableColumnReorderingRaw.prototype.handleDrop = function () {\r\n        var _a = this.getState(), sourceColumnIndex = _a.sourceColumnIndex, targetColumnIndex = _a.targetColumnIndex, order = _a.order;\r\n        var onOrderChange = this.props.onOrderChange;\r\n        if (sourceColumnIndex === -1 && targetColumnIndex === -1)\r\n            return;\r\n        var nextOrder = (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.changeColumnOrder)(order, {\r\n            sourceColumnName: order[sourceColumnIndex],\r\n            targetColumnName: order[targetColumnIndex],\r\n        });\r\n        this.setState({\r\n            order: nextOrder,\r\n            sourceColumnIndex: -1,\r\n            targetColumnIndex: -1,\r\n        });\r\n        if (onOrderChange) {\r\n            onOrderChange(nextOrder);\r\n        }\r\n        this.resetCellDimensions();\r\n    };\r\n    TableColumnReorderingRaw.prototype.render = function () {\r\n        var _this = this;\r\n        var _a = this.props, Container = _a.tableContainerComponent, Row = _a.rowComponent, Cell = _a.cellComponent;\r\n        this.cellDimensionGetters = {};\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"TableColumnReordering\", dependencies: pluginDependencies$8 },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(OrderedTableColumns, { order: this.getDraftOrder() }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"tableHeaderRows\", computed: tableHeaderRowsComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"table\" }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplateConnector, null, function (_a) {\r\n                var draggingEnabled = _a.draggingEnabled;\r\n                return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Container, __assign({}, params, { onOver: _this.onOver, onLeave: _this.onLeave, onDrop: _this.onDrop, draggingEnabled: draggingEnabled }),\r\n                    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplatePlaceholder, null)));\r\n            })); }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableRow\", predicate: function (_a) {\r\n                    var tableRow = _a.tableRow;\r\n                    return tableRow.type === _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.TABLE_REORDERING_TYPE;\r\n                } }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Row, __assign({}, params))); }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableCell\", predicate: function (_a) {\r\n                    var tableRow = _a.tableRow;\r\n                    return tableRow.type === _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.TABLE_REORDERING_TYPE;\r\n                } }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplateConnector, null, function (_a) {\r\n                var tableColumns = _a.tableColumns;\r\n                return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Cell, __assign({}, params, { getCellDimensions: function (getter) { return _this.storeCellDimensionsGetter(params.tableColumn, getter, tableColumns); } })));\r\n            })); })));\r\n    };\r\n    TableColumnReorderingRaw.defaultProps = {\r\n        defaultOrder: [],\r\n    };\r\n    TableColumnReorderingRaw.components = {\r\n        tableContainerComponent: 'TableContainer',\r\n        rowComponent: 'Row',\r\n        cellComponent: 'Cell',\r\n    };\r\n    return TableColumnReorderingRaw;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\nvar TableContainer = function (_a) {\r\n    var onOver = _a.onOver, onLeave = _a.onLeave, onDrop = _a.onDrop, children = _a.children, draggingEnabled = _a.draggingEnabled;\r\n    return (draggingEnabled ? ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.DropTarget, { onOver: onOver, onLeave: onLeave, onDrop: onDrop }, children)) : children);\r\n};\r\n/** A plugin that manages the displayed columns' order. */\r\nvar TableColumnReordering = (0,_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.withComponents)({ TableContainer: TableContainer })(TableColumnReorderingRaw);\n\nvar RowPlaceholder = function (props) { return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplatePlaceholder, { name: \"tableRow\", params: props }); };\r\nvar CellPlaceholder = function (props) { return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplatePlaceholder, { name: \"tableCell\", params: props }); };\r\nvar tableHeaderRows = [];\r\nvar tableBodyRowsComputed = function (_a) {\r\n    var rows = _a.rows, getRowId = _a.getRowId, isDataLoading = _a.isDataLoading;\r\n    return ((0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.tableRowsWithDataRows)(rows, getRowId, isDataLoading));\r\n};\r\nvar tableFooterRows = [];\r\nvar defaultMessages = {\r\n    noData: 'No data',\r\n};\r\nvar TableBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(TableBase, _super);\r\n    function TableBase() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TableBase.prototype.render = function () {\r\n        var _a = this.props, Layout = _a.layoutComponent, Cell = _a.cellComponent, Row = _a.rowComponent, NoDataRow = _a.noDataRowComponent, NoDataCell = _a.noDataCellComponent, StubRow = _a.stubRowComponent, StubCell = _a.stubCellComponent, StubHeaderCell = _a.stubHeaderCellComponent, columnExtensions = _a.columnExtensions, messages = _a.messages, containerComponent = _a.containerComponent, tableComponent = _a.tableComponent, headComponent = _a.headComponent, bodyComponent = _a.bodyComponent, footerComponent = _a.footerComponent;\r\n        var getMessage = (0,_devexpress_dx_core__WEBPACK_IMPORTED_MODULE_3__.getMessagesFormatter)(__assign(__assign({}, defaultMessages), messages));\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"Table\" },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"tableHeaderRows\", value: tableHeaderRows }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"tableBodyRows\", computed: tableBodyRowsComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"tableFooterRows\", value: tableFooterRows }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(TableColumnsWithDataRowsGetter, { columnExtensions: columnExtensions }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"getTableCellColSpan\", value: _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.tableCellColSpanGetter }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"body\" },\r\n                (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplatePlaceholder, { name: \"table\" })),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"table\" },\r\n                (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplateConnector, null, function (_a) {\r\n                    var headerRows = _a.tableHeaderRows, bodyRows = _a.tableBodyRows, footerRows = _a.tableFooterRows, columns = _a.tableColumns, getTableCellColSpan = _a.getTableCellColSpan;\r\n                    return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplatePlaceholder, { name: \"tableLayout\", params: {\r\n                            tableComponent: tableComponent,\r\n                            headComponent: headComponent,\r\n                            bodyComponent: bodyComponent,\r\n                            footerComponent: footerComponent,\r\n                            containerComponent: containerComponent,\r\n                            headerRows: headerRows,\r\n                            bodyRows: bodyRows,\r\n                            footerRows: footerRows,\r\n                            columns: columns,\r\n                            rowComponent: RowPlaceholder,\r\n                            cellComponent: CellPlaceholder,\r\n                            getCellColSpan: getTableCellColSpan,\r\n                        } }));\r\n                })),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableLayout\" }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Layout, __assign({}, params))); }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableCell\" }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplateConnector, null, function (_a) {\r\n                var headerRows = _a.tableHeaderRows;\r\n                return ((0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isHeaderStubTableCell)(params.tableRow, headerRows)\r\n                    ? (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(StubHeaderCell, __assign({}, params))\r\n                    : (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(StubCell, __assign({}, params)));\r\n            })); }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableCell\", predicate: function (_a) {\r\n                    var tableRow = _a.tableRow, tableColumn = _a.tableColumn;\r\n                    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isDataTableCell)(tableRow, tableColumn);\r\n                } }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplateConnector, null, function (_a) {\r\n                var getCellValue = _a.getCellValue;\r\n                var columnName = params.tableColumn.column.name;\r\n                var value = getCellValue(params.tableRow.row, columnName);\r\n                return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplatePlaceholder, { name: \"valueFormatter\", params: {\r\n                        value: value,\r\n                        row: params.tableRow.row,\r\n                        column: params.tableColumn.column,\r\n                    } }, function (content) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Cell, __assign({}, params, { row: params.tableRow.row, column: params.tableColumn.column, value: value }), content)); }));\r\n            })); }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableCell\", predicate: function (_a) {\r\n                    var tableRow = _a.tableRow;\r\n                    return !!(0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isNoDataTableRow)(tableRow);\r\n                } }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplateConnector, null, function (_a) {\r\n                var tableColumns = _a.tableColumns;\r\n                if ((0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isNoDataTableCell)(params.tableColumn, tableColumns)) {\r\n                    return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(NoDataCell, __assign({}, params, { getMessage: getMessage })));\r\n                }\r\n                return null;\r\n            })); }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableRow\" }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(StubRow, __assign({}, params))); }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableRow\", predicate: function (_a) {\r\n                    var tableRow = _a.tableRow;\r\n                    return !!(0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isDataTableRow)(tableRow);\r\n                } }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Row, __assign({}, params, { row: params.tableRow.row }))); }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableRow\", predicate: function (_a) {\r\n                    var tableRow = _a.tableRow;\r\n                    return !!(0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isNoDataTableRow)(tableRow);\r\n                } }, function (params) { return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(NoDataRow, __assign({}, params)); })));\r\n    };\r\n    TableBase.COLUMN_TYPE = _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.TABLE_DATA_TYPE;\r\n    TableBase.ROW_TYPE = _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.TABLE_DATA_TYPE;\r\n    TableBase.NODATA_ROW_TYPE = _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.TABLE_NODATA_TYPE;\r\n    TableBase.defaultProps = {\r\n        messages: {},\r\n    };\r\n    TableBase.components = {\r\n        tableComponent: 'Table',\r\n        headComponent: 'TableHead',\r\n        bodyComponent: 'TableBody',\r\n        footerComponent: 'TableFooter',\r\n        containerComponent: 'Container',\r\n        layoutComponent: 'Layout',\r\n        rowComponent: 'Row',\r\n        cellComponent: 'Cell',\r\n        noDataRowComponent: 'NoDataRow',\r\n        noDataCellComponent: 'NoDataCell',\r\n        stubRowComponent: 'StubRow',\r\n        stubCellComponent: 'StubCell',\r\n        stubHeaderCellComponent: 'StubHeaderCell',\r\n    };\r\n    return TableBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n/***\r\n * A plugin that renders Grid data as a table. This plugin enables you to customize\r\n * table rows and columns, and contains the Table Row and Table Cell components\r\n * that can be extended by other plugins\r\n * */\r\nvar Table = TableBase;\n\nvar TableSelectionBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(TableSelectionBase, _super);\r\n    function TableSelectionBase() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TableSelectionBase.prototype.render = function () {\r\n        var _a = this.props, highlightRow = _a.highlightRow, selectByRowClick = _a.selectByRowClick, showSelectionColumn = _a.showSelectionColumn, showSelectAll = _a.showSelectAll, HeaderCell = _a.headerCellComponent, Cell = _a.cellComponent, Row = _a.rowComponent, selectionColumnWidth = _a.selectionColumnWidth;\r\n        var tableColumnsComputed = function (_a) {\r\n            var tableColumns = _a.tableColumns;\r\n            return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.tableColumnsWithSelection)(tableColumns, selectionColumnWidth);\r\n        };\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"TableSelection\", dependencies: [\r\n                { name: 'Table' },\r\n                { name: 'SelectionState' },\r\n                { name: 'IntegratedSelection', optional: !showSelectAll },\r\n            ] },\r\n            showSelectionColumn && ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"tableColumns\", computed: tableColumnsComputed })),\r\n            highlightRow && ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"highlightSelectedRow\", value: true })),\r\n            (showSelectionColumn && showSelectAll) && ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableCell\", predicate: function (_a) {\r\n                    var tableRow = _a.tableRow, tableColumn = _a.tableColumn;\r\n                    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isSelectAllTableCell)(tableRow, tableColumn);\r\n                } }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplateConnector, null, function (_a, _b) {\r\n                var selectAllAvailable = _a.selectAllAvailable, allSelected = _a.allSelected, someSelected = _a.someSelected;\r\n                var toggleSelectAll = _b.toggleSelectAll;\r\n                return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(HeaderCell, __assign({}, params, { disabled: !selectAllAvailable, allSelected: allSelected, someSelected: someSelected, onToggle: function (select) { return toggleSelectAll(select); } })));\r\n            })); })),\r\n            showSelectionColumn && ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableCell\", predicate: function (_a) {\r\n                    var tableRow = _a.tableRow, tableColumn = _a.tableColumn;\r\n                    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isSelectTableCell)(tableRow, tableColumn);\r\n                } }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplateConnector, null, function (_a, _b) {\r\n                var selection = _a.selection;\r\n                var toggleSelection = _b.toggleSelection;\r\n                return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Cell, __assign({}, params, { row: params.tableRow.row, selected: selection.indexOf(params.tableRow.rowId) !== -1, onToggle: function () { return toggleSelection({ rowIds: [params.tableRow.rowId] }); } })));\r\n            })); })),\r\n            (highlightRow || selectByRowClick) && ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableRow\", predicate: function (_a) {\r\n                    var tableRow = _a.tableRow;\r\n                    return !!(0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isDataTableRow)(tableRow);\r\n                } }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplateConnector, null, function (_a, _b) {\r\n                var selection = _a.selection;\r\n                var toggleSelection = _b.toggleSelection;\r\n                return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Row, __assign({}, params, { selectByRowClick: selectByRowClick, highlighted: (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isRowHighlighted)(highlightRow, selection, params.tableRow), onToggle: function () { return toggleSelection({ rowIds: [params.tableRow.rowId] }); } })));\r\n            })); }))));\r\n    };\r\n    TableSelectionBase.defaultProps = {\r\n        highlightRow: false,\r\n        selectByRowClick: false,\r\n        showSelectAll: false,\r\n        showSelectionColumn: true,\r\n    };\r\n    TableSelectionBase.components = {\r\n        rowComponent: 'Row',\r\n        cellComponent: 'Cell',\r\n        headerCellComponent: 'HeaderCell',\r\n    };\r\n    TableSelectionBase.COLUMN_TYPE = _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.TABLE_SELECT_TYPE;\r\n    return TableSelectionBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n/***\r\n * A plugin that visualizes table rows' selection state by rendering selection checkboxes\r\n * and highlighting the selected rows.\r\n * */\r\nvar TableSelection = TableSelectionBase;\n\n// tslint:disable-next-line: max-line-length\r\nvar RowDetailStateBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(RowDetailStateBase, _super);\r\n    function RowDetailStateBase(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.state = {\r\n            expandedRowIds: props.expandedRowIds || props.defaultExpandedRowIds,\r\n        };\r\n        var stateHelper = (0,_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.createStateHelper)(_this, {\r\n            expandedRowIds: function () {\r\n                var onExpandedRowIdsChange = _this.props.onExpandedRowIdsChange;\r\n                return onExpandedRowIdsChange;\r\n            },\r\n        });\r\n        _this.toggleDetailRowExpanded = stateHelper.applyFieldReducer\r\n            .bind(stateHelper, 'expandedRowIds', _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.toggleDetailRowExpanded);\r\n        return _this;\r\n    }\r\n    RowDetailStateBase.getDerivedStateFromProps = function (nextProps, prevState) {\r\n        var _a = nextProps.expandedRowIds, expandedRowIds = _a === void 0 ? prevState.expandedRowIds : _a;\r\n        return {\r\n            expandedRowIds: expandedRowIds,\r\n        };\r\n    };\r\n    RowDetailStateBase.prototype.render = function () {\r\n        var expandedRowIds = this.state.expandedRowIds;\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"RowDetailState\" },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"expandedDetailRowIds\", value: expandedRowIds }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"toggleDetailRowExpanded\", action: this.toggleDetailRowExpanded })));\r\n    };\r\n    RowDetailStateBase.defaultProps = {\r\n        defaultExpandedRowIds: [],\r\n    };\r\n    return RowDetailStateBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n/** A plugin that manages the expanded state for table row details. */\r\nvar RowDetailState = RowDetailStateBase;\n\nvar getCellColSpanComputed = function (_a) {\r\n    var getTableCellColSpan = _a.getTableCellColSpan;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.tableDetailCellColSpanGetter)(getTableCellColSpan);\r\n};\r\nvar pluginDependencies$9 = [\r\n    { name: 'RowDetailState' },\r\n    { name: 'Table' },\r\n];\r\nvar TableRowDetailBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(TableRowDetailBase, _super);\r\n    function TableRowDetailBase() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TableRowDetailBase.prototype.render = function () {\r\n        var _a = this.props, rowHeight = _a.rowHeight, Content = _a.contentComponent, ToggleCell = _a.toggleCellComponent, Cell = _a.cellComponent, Row = _a.rowComponent, toggleColumnWidth = _a.toggleColumnWidth;\r\n        var tableColumnsComputed = function (_a) {\r\n            var tableColumns = _a.tableColumns;\r\n            return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.tableColumnsWithDetail)(tableColumns, toggleColumnWidth);\r\n        };\r\n        var tableBodyRowsComputed = function (_a) {\r\n            var tableBodyRows = _a.tableBodyRows, expandedDetailRowIds = _a.expandedDetailRowIds;\r\n            return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.tableRowsWithExpandedDetail)(tableBodyRows, expandedDetailRowIds, rowHeight);\r\n        };\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"TableRowDetail\", dependencies: pluginDependencies$9 },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"tableColumns\", computed: tableColumnsComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"tableBodyRows\", computed: tableBodyRowsComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"getTableCellColSpan\", computed: getCellColSpanComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableCell\", predicate: function (_a) {\r\n                    var tableRow = _a.tableRow, tableColumn = _a.tableColumn;\r\n                    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isDetailToggleTableCell)(tableRow, tableColumn);\r\n                } }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplateConnector, null, function (_a, _b) {\r\n                var expandedDetailRowIds = _a.expandedDetailRowIds;\r\n                var toggleDetailRowExpanded = _b.toggleDetailRowExpanded;\r\n                return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(ToggleCell, __assign({}, params, { row: params.tableRow.row, expanded: (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isDetailRowExpanded)(expandedDetailRowIds, params.tableRow.rowId), onToggle: function () { return toggleDetailRowExpanded({ rowId: params.tableRow.rowId }); } })));\r\n            })); }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableCell\", predicate: function (_a) {\r\n                    var tableRow = _a.tableRow;\r\n                    return !!(0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isDetailTableRow)(tableRow);\r\n                } }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplateConnector, null, function (_a) {\r\n                var tableColumns = _a.tableColumns;\r\n                if ((0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isDetailTableCell)(params.tableColumn, tableColumns)) {\r\n                    return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Cell, __assign({}, params, { row: params.tableRow.row }), Content && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Content, { row: params.tableRow.row })));\r\n                }\r\n                return null;\r\n            })); }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableRow\", predicate: function (_a) {\r\n                    var tableRow = _a.tableRow;\r\n                    return !!(0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isDetailTableRow)(tableRow);\r\n                } }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Row, __assign({}, params, { row: params.tableRow.row }))); })));\r\n    };\r\n    TableRowDetailBase.ROW_TYPE = _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.TABLE_DETAIL_TYPE;\r\n    TableRowDetailBase.COLUMN_TYPE = _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.TABLE_DETAIL_TYPE;\r\n    TableRowDetailBase.defaultProps = {\r\n        contentComponent: function () { return null; },\r\n    };\r\n    TableRowDetailBase.components = {\r\n        rowComponent: 'Row',\r\n        cellComponent: 'Cell',\r\n        toggleCellComponent: 'ToggleCell',\r\n    };\r\n    return TableRowDetailBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n/** A plugin that renders detail rows. */\r\nvar TableRowDetail = TableRowDetailBase;\n\nvar defaultSummaryMessages = {\r\n    sum: 'Sum',\r\n    min: 'Min',\r\n    max: 'Max',\r\n    avg: 'Avg',\r\n    count: 'Count',\r\n};\n\nvar TableSummaryContent = function (_a) {\r\n    var column = _a.column, columnSummaries = _a.columnSummaries, formatlessSummaryTypes = _a.formatlessSummaryTypes, Item = _a.itemComponent, messages = _a.messages;\r\n    var getMessage = (0,_devexpress_dx_core__WEBPACK_IMPORTED_MODULE_3__.getMessagesFormatter)(__assign(__assign({}, defaultSummaryMessages), messages));\r\n    var SummaryItem = function (_a) {\r\n        var summary = _a.summary, children = _a.children;\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Item, { getMessage: getMessage, type: summary.type, value: summary.value }, children || String(summary.value)));\r\n    };\r\n    var isFormatlessSummary = function (summary) { return (summary.value === null\r\n        || formatlessSummaryTypes.includes(summary.type)\r\n        || _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.defaultFormatlessSummaries.includes(summary.type)); };\r\n    return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, columnSummaries.map(function (summary) {\r\n        if (isFormatlessSummary(summary)) {\r\n            return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(SummaryItem, { key: summary.type, summary: summary });\r\n        }\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplatePlaceholder, { key: summary.type, name: \"valueFormatter\", params: {\r\n                column: column,\r\n                value: summary.value,\r\n            } }, function (content) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(SummaryItem, { summary: summary }, content)); }));\r\n    })));\r\n};\n\nvar getInlineSummaryComponent = function (column, summary, formatlessSummaries) { return function () { return ((summary.value === null || formatlessSummaries.includes(summary.type))\r\n    ? (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, summary.value)\r\n    : ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplatePlaceholder, { key: summary.type, name: \"valueFormatter\", params: {\r\n            column: column,\r\n            value: summary.value,\r\n        } }, function (content) { return content || summary.value; }))); }; };\r\nvar flattenGroupInlineSummaries = function (columns, tableRow, groupSummaryItems, groupSummaryValues, formatlessSummaries) { return ((0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.getGroupInlineSummaries)(groupSummaryItems, columns, groupSummaryValues[tableRow.row.compoundKey])\r\n    .map(function (colSummaries) { return (__spread(colSummaries.summaries.map(function (summary) { return (__assign(__assign({}, summary), { columnTitle: colSummaries.column.title, messageKey: summary.type + \"Of\", component: getInlineSummaryComponent(colSummaries.column, summary, formatlessSummaries) })); }))); })\r\n    .reduce(function (acc, summaries) { return acc.concat(summaries); }, [])); };\n\nvar pluginDependencies$a = [\r\n    { name: 'GroupingState' },\r\n    { name: 'Table' },\r\n    { name: 'DataTypeProvider', optional: true },\r\n    { name: 'SummaryState', optional: true },\r\n    { name: 'CustomSummary', optional: true },\r\n    { name: 'IntegratedSummary', optional: true },\r\n    { name: 'Table' },\r\n    { name: 'DataTypeProvider', optional: true },\r\n    { name: 'TableSelection', optional: true },\r\n];\r\nvar side = 'left';\r\n/** @internal */\r\nvar defaultMessages$1 = {\r\n    countOf: 'Count: ',\r\n    sumOf: 'Sum of {columnTitle} is ',\r\n    maxOf: 'Max of {columnTitle} is ',\r\n    minOf: 'Min of {columnTitle} is ',\r\n    avgOf: 'Avg of {columnTitle} is ',\r\n};\r\nvar tableBodyRowsComputed$1 = function (_a) {\r\n    var tableBodyRows = _a.tableBodyRows, isGroupRow = _a.isGroupRow;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.tableRowsWithGrouping)(tableBodyRows, isGroupRow);\r\n};\r\nvar getCellColSpanComputed$1 = function (_a) {\r\n    var getTableCellColSpan = _a.getTableCellColSpan, groupSummaryItems = _a.groupSummaryItems, viewport = _a.viewport;\r\n    var firstVisibleColumnIndex = viewport === null || viewport === void 0 ? void 0 : viewport.columns[0][0];\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.tableGroupCellColSpanGetter)(getTableCellColSpan, groupSummaryItems, firstVisibleColumnIndex);\r\n};\r\nvar TableGroupRowBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(TableGroupRowBase, _super);\r\n    function TableGroupRowBase() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TableGroupRowBase.prototype.render = function () {\r\n        var _a = this.props, GroupCell = _a.cellComponent, Content = _a.contentComponent, Icon = _a.iconComponent, GroupRow = _a.rowComponent, Container = _a.containerComponent, GroupIndentCell = _a.indentCellComponent, InlineSummary = _a.inlineSummaryComponent, InlineSummaryItem = _a.inlineSummaryItemComponent, SummaryCell = _a.summaryCellComponent, SummaryItem = _a.summaryItemComponent, StubCell = _a.stubCellComponent, indentColumnWidth = _a.indentColumnWidth, contentCellPadding = _a.contentCellPadding, showColumnsWhenGrouped = _a.showColumnsWhenGrouped, columnExtensions = _a.columnExtensions, messages = _a.messages, formatlessSummaryTypes = _a.formatlessSummaryTypes;\r\n        var getMessage = (0,_devexpress_dx_core__WEBPACK_IMPORTED_MODULE_3__.getMessagesFormatter)(__assign(__assign({}, defaultMessages$1), messages));\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"TableGroupRow\", dependencies: pluginDependencies$a },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(TableColumnsWithGrouping, { columnExtensions: columnExtensions, showColumnsWhenGrouped: showColumnsWhenGrouped, indentColumnWidth: indentColumnWidth }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"tableBodyRows\", computed: tableBodyRowsComputed$1 }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"getTableCellColSpan\", computed: getCellColSpanComputed$1 }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableCell\", predicate: function (_a) {\r\n                    var tableRow = _a.tableRow;\r\n                    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isGroupTableRow)(tableRow);\r\n                } }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplateConnector, null, function (_a, _b) {\r\n                var grouping = _a.grouping, expandedGroups = _a.expandedGroups, groupSummaryItems = _a.groupSummaryItems, groupSummaryValues = _a.groupSummaryValues, columns = _a.columns;\r\n                var toggleGroupExpanded = _b.toggleGroupExpanded;\r\n                if ((0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isGroupTableCell)(params.tableRow, params.tableColumn)) {\r\n                    var formatlessSummaries = _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.defaultFormatlessSummaries.concat(formatlessSummaryTypes);\r\n                    var inlineSummaries_1 = groupSummaryItems\r\n                        ? flattenGroupInlineSummaries(columns, params.tableRow, groupSummaryItems, groupSummaryValues, formatlessSummaries) : [];\r\n                    var cellIndent = (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.calculateGroupCellIndent)(params.tableColumn, grouping, indentColumnWidth);\r\n                    var contentIndent_1 = \"calc(\" + cellIndent + \"px + \" + contentCellPadding + \")\";\r\n                    return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplatePlaceholder, { name: \"valueFormatter\", params: {\r\n                            column: params.tableColumn.column,\r\n                            value: params.tableRow.row.value,\r\n                        } }, function (content) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(GroupCell, __assign({}, params, { contentComponent: Content, iconComponent: Icon, containerComponent: Container, row: params.tableRow.row, column: params.tableColumn.column, expanded: expandedGroups.indexOf(params.tableRow.row.compoundKey) !== -1, onToggle: function () { return toggleGroupExpanded({ groupKey: params.tableRow.row.compoundKey }); }, inlineSummaries: inlineSummaries_1, inlineSummaryComponent: InlineSummary, inlineSummaryItemComponent: InlineSummaryItem, getMessage: getMessage, position: contentIndent_1, side: side }), content)); }));\r\n                }\r\n                if ((0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isGroupIndentTableCell)(params.tableRow, params.tableColumn, grouping)) {\r\n                    var fixedProps = {\r\n                        side: side,\r\n                        position: (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.calculateGroupCellIndent)(params.tableColumn, grouping, indentColumnWidth),\r\n                    };\r\n                    if (GroupIndentCell) {\r\n                        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(GroupIndentCell, __assign({}, params, fixedProps, { row: params.tableRow.row, column: params.tableColumn.column })));\r\n                    }\r\n                    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplatePlaceholder, { params: fixedProps });\r\n                }\r\n                if ((0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isGroupIndentStubTableCell)(params.tableRow, params.tableColumn, grouping)) {\r\n                    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplatePlaceholder, { params: params });\r\n                }\r\n                return null;\r\n            })); }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableCell\", predicate: function (_a) {\r\n                    var tableRow = _a.tableRow, tableColumn = _a.tableColumn;\r\n                    return ((0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isGroupRowOrdinaryCell)(tableRow, tableColumn));\r\n                } }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplateConnector, null, function (_a, _b) {\r\n                var groupSummaryItems = _a.groupSummaryItems, groupSummaryValues = _a.groupSummaryValues, grouping = _a.grouping, tableColumns = _a.tableColumns;\r\n                var toggleGroupExpanded = _b.toggleGroupExpanded;\r\n                var tableColumn = params.tableColumn, tableRow = params.tableRow;\r\n                var onToggle = function () { return toggleGroupExpanded({ groupKey: tableRow.row.compoundKey }); };\r\n                if ((0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isRowSummaryCell)(tableRow, tableColumn, grouping, groupSummaryItems)) {\r\n                    var columnSummaries = (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.getColumnSummaries)(groupSummaryItems, tableColumn.column.name, groupSummaryValues[tableRow.row.compoundKey], function (summaryItem) { return (!summaryItem.showInGroupFooter &&\r\n                        summaryItem.alignByColumn); });\r\n                    return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(SummaryCell, __assign({}, params, { row: params.tableRow.row, column: params.tableColumn.column, onToggle: onToggle }),\r\n                        (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(TableSummaryContent, { column: tableColumn.column, columnSummaries: columnSummaries, formatlessSummaryTypes: formatlessSummaryTypes, itemComponent: SummaryItem, messages: messages })));\r\n                }\r\n                // NOTE: ensure that right-aligned summary will fit into a column\r\n                if ((0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isPreviousCellContainSummary)(tableRow, tableColumn, tableColumns, grouping, groupSummaryItems) || _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.TABLE_FLEX_TYPE === tableColumn.type) {\r\n                    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(StubCell, __assign({}, params, { onToggle: onToggle }));\r\n                }\r\n                return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplatePlaceholder, null);\r\n            })); }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableRow\", predicate: function (_a) {\r\n                    var tableRow = _a.tableRow;\r\n                    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isGroupTableRow)(tableRow);\r\n                } }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(GroupRow, __assign({}, params, { row: params.tableRow.row }))); })));\r\n    };\r\n    TableGroupRowBase.ROW_TYPE = _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.TABLE_GROUP_TYPE;\r\n    TableGroupRowBase.COLUMN_TYPE = _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.TABLE_GROUP_TYPE;\r\n    TableGroupRowBase.defaultProps = {\r\n        showColumnsWhenGrouped: false,\r\n        formatlessSummaryTypes: [],\r\n    };\r\n    TableGroupRowBase.components = {\r\n        rowComponent: 'Row',\r\n        cellComponent: 'Cell',\r\n        contentComponent: 'Content',\r\n        iconComponent: 'Icon',\r\n        containerComponent: 'Container',\r\n        indentCellComponent: 'IndentCell',\r\n        inlineSummaryComponent: 'InlineSummary',\r\n        inlineSummaryItemComponent: 'InlineSummaryItem',\r\n        summaryCellComponent: 'SummaryCell',\r\n        summaryItemComponent: 'SummaryItem',\r\n        stubCellComponent: 'StubCell',\r\n    };\r\n    return TableGroupRowBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n/** A plugin that renders group rows and enables them to expand and collapse. */\r\nvar TableGroupRow = TableGroupRowBase;\n\nvar tableHeaderRowsComputed$1 = function (_a) {\r\n    var tableHeaderRows = _a.tableHeaderRows;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.tableRowsWithHeading)(tableHeaderRows || []);\r\n};\r\nvar TableHeaderRowBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(TableHeaderRowBase, _super);\r\n    function TableHeaderRowBase() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TableHeaderRowBase.prototype.render = function () {\r\n        var _a = this.props, showSortingControls = _a.showSortingControls, showGroupingControls = _a.showGroupingControls, HeaderCell = _a.cellComponent, HeaderRow = _a.rowComponent, Content = _a.contentComponent, SortLabel = _a.sortLabelComponent, GroupButton = _a.groupButtonComponent, Title = _a.titleComponent, messages = _a.messages;\r\n        var getMessage = (0,_devexpress_dx_core__WEBPACK_IMPORTED_MODULE_3__.getMessagesFormatter)(messages);\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"TableHeaderRow\", dependencies: [\r\n                { name: 'Table' },\r\n                { name: 'SortingState', optional: !showSortingControls },\r\n                { name: 'GroupingState', optional: !showGroupingControls },\r\n                { name: 'DragDropProvider', optional: true },\r\n                { name: 'TableColumnResizing', optional: true },\r\n            ] },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"tableHeaderRows\", computed: tableHeaderRowsComputed$1 }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableCell\", predicate: function (_a) {\r\n                    var tableRow = _a.tableRow, tableColumn = _a.tableColumn;\r\n                    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isHeadingTableCell)(tableRow, tableColumn);\r\n                } }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplateConnector, null, function (_a, _b) {\r\n                var sorting = _a.sorting, tableColumns = _a.tableColumns, draggingEnabled = _a.draggingEnabled, tableColumnResizingEnabled = _a.tableColumnResizingEnabled, isColumnSortingEnabled = _a.isColumnSortingEnabled, isColumnGroupingEnabled = _a.isColumnGroupingEnabled, columnResizingMode = _a.columnResizingMode;\r\n                var changeColumnSorting = _b.changeColumnSorting, changeColumnGrouping = _b.changeColumnGrouping, changeTableColumnWidth = _b.changeTableColumnWidth, draftTableColumnWidth = _b.draftTableColumnWidth, cancelTableColumnWidthDraft = _b.cancelTableColumnWidthDraft, _c = _b.storeWidthGetters, storeWidthGetters = _c === void 0 ? function () { } : _c;\r\n                var _d = params.tableColumn.column, columnName = _d.name, columnTitle = _d.title;\r\n                var atLeastOneDataColumn = tableColumns\r\n                    .filter(function (_a) {\r\n                    var type = _a.type;\r\n                    return type === _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.TABLE_DATA_TYPE;\r\n                }).length > 1;\r\n                var sortingEnabled = isColumnSortingEnabled\r\n                    && isColumnSortingEnabled(columnName);\r\n                var groupingEnabled = isColumnGroupingEnabled\r\n                    && isColumnGroupingEnabled(columnName)\r\n                    && atLeastOneDataColumn;\r\n                var nextColumnName = (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.getNextColumnName)(tableColumns, columnName);\r\n                return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(HeaderCell, __assign({}, params, { column: params.tableColumn.column, draggingEnabled: draggingEnabled && atLeastOneDataColumn, resizingEnabled: tableColumnResizingEnabled\r\n                        && (!!nextColumnName || columnResizingMode === 'widget'), onWidthChange: function (_a) {\r\n                        var shift = _a.shift;\r\n                        return changeTableColumnWidth({\r\n                            columnName: columnName, nextColumnName: nextColumnName, shift: shift,\r\n                        });\r\n                    }, onWidthDraft: function (_a) {\r\n                        var shift = _a.shift;\r\n                        return draftTableColumnWidth({\r\n                            columnName: columnName, nextColumnName: nextColumnName, shift: shift,\r\n                        });\r\n                    }, onWidthDraftCancel: function () { return cancelTableColumnWidthDraft(); }, getCellWidth: function (getter) { return storeWidthGetters({\r\n                        tableColumn: params.tableColumn,\r\n                        getter: getter, tableColumns: tableColumns,\r\n                    }); } }),\r\n                    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplatePlaceholder, { name: \"tableHeaderCellBefore\", params: {\r\n                            column: params.tableColumn.column,\r\n                        } }),\r\n                    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Content, { column: params.tableColumn.column, align: params.tableColumn.align }, showSortingControls ? ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(SortLabel, { column: params.tableColumn.column, align: params.tableColumn.align, direction: (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.getColumnSortingDirection)(sorting, columnName) || null, disabled: !sortingEnabled, onSort: function (_a) {\r\n                            var direction = _a.direction, keepOther = _a.keepOther;\r\n                            changeColumnSorting({ columnName: columnName, direction: direction, keepOther: keepOther });\r\n                        }, getMessage: getMessage },\r\n                        (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Title, null, columnTitle || columnName))) : ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Title, null, columnTitle || columnName))),\r\n                    showGroupingControls ? ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(GroupButton, { disabled: !groupingEnabled, onGroup: function () { return changeColumnGrouping({ columnName: columnName }); } })) : null));\r\n            })); }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableRow\", predicate: function (_a) {\r\n                    var tableRow = _a.tableRow;\r\n                    return !!(0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isHeadingTableRow)(tableRow);\r\n                } }, function (params) { return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(HeaderRow, __assign({}, params)); })));\r\n    };\r\n    TableHeaderRowBase.ROW_TYPE = _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.TABLE_HEADING_TYPE;\r\n    TableHeaderRowBase.defaultProps = {\r\n        showSortingControls: false,\r\n        showGroupingControls: false,\r\n        messages: {},\r\n    };\r\n    TableHeaderRowBase.components = {\r\n        cellComponent: 'Cell',\r\n        rowComponent: 'Row',\r\n        contentComponent: 'Content',\r\n        sortLabelComponent: 'SortLabel',\r\n        titleComponent: 'Title',\r\n        groupButtonComponent: 'GroupButton',\r\n    };\r\n    return TableHeaderRowBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\nTableHeaderRowBase.components = {\r\n    cellComponent: 'Cell',\r\n    rowComponent: 'Row',\r\n    contentComponent: 'Content',\r\n    sortLabelComponent: 'SortLabel',\r\n    titleComponent: 'Title',\r\n    groupButtonComponent: 'GroupButton',\r\n};\r\n/***\r\n * A plugin that renders the table's header row. The Column's `title` field specifies the\r\n * column's title in the header row.The plugin also allows you to manage a column's sorting\r\n * and grouping state and initiate column dragging.\r\n * */\r\nvar TableHeaderRow = TableHeaderRowBase;\n\nvar CellPlaceholder$1 = function (props) { return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplatePlaceholder, { params: props }); };\r\nvar bandLevelsVisibilityComputed = function (_a) {\r\n    var columnIntervals = _a.columnVisibleIntervals, tableHeaderColumnChains = _a.tableHeaderColumnChains, bandLevels = _a.bandLevels;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.bandLevelsVisibility)(columnIntervals, tableHeaderColumnChains, bandLevels);\r\n};\r\nvar columnVisibleIntervalsComputed = function (_a) {\r\n    var viewport = _a.viewport, tableColumns = _a.tableColumns;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.columnVisibleIntervals)(viewport, tableColumns);\r\n};\r\nvar TableBandHeaderBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(TableBandHeaderBase, _super);\r\n    function TableBandHeaderBase() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TableBandHeaderBase.prototype.render = function () {\r\n        var _a = this.props, Cell = _a.cellComponent, Row = _a.rowComponent, HeaderCell = _a.bandedHeaderCellComponent, InvisibleCell = _a.invisibleCellComponent, columnBands = _a.columnBands;\r\n        var tableHeaderRowsComputed = function (_a) {\r\n            var tableHeaderRows = _a.tableHeaderRows, tableColumns = _a.tableColumns;\r\n            return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.tableRowsWithBands)(tableHeaderRows, columnBands, tableColumns);\r\n        };\r\n        var tableHeaderColumnChainsComputed = function (_a) {\r\n            var tableHeaderRows = _a.tableHeaderRows, tableColumns = _a.tableColumns;\r\n            return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.tableHeaderColumnChainsWithBands)(tableHeaderRows, tableColumns, columnBands);\r\n        };\r\n        var bandLevels = (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.columnBandLevels)(columnBands);\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"TableBandHeader\", dependencies: [\r\n                { name: 'Table' },\r\n                { name: 'TableHeaderRow' },\r\n                { name: 'TableSelection', optional: true },\r\n                { name: 'TableEditColumn', optional: true },\r\n            ] },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"tableHeaderRows\", computed: tableHeaderRowsComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"columnVisibleIntervals\", computed: columnVisibleIntervalsComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"tableHeaderColumnChains\", computed: tableHeaderColumnChainsComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"bandLevels\", value: bandLevels }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"bandLevelsVisibility\", computed: bandLevelsVisibilityComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableCell\", predicate: function (_a) {\r\n                    var tableRow = _a.tableRow;\r\n                    return !!(0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isBandedOrHeaderRow)(tableRow);\r\n                } }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplateConnector, null, function (_a) {\r\n                var tableColumns = _a.tableColumns, tableHeaderRows = _a.tableHeaderRows, tableHeaderColumnChains = _a.tableHeaderColumnChains, columnIntervals = _a.columnVisibleIntervals, levelsVisibility = _a.bandLevelsVisibility;\r\n                var bandComponent = (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.getBandComponent)(params, tableHeaderRows, tableColumns, columnBands, tableHeaderColumnChains, columnIntervals, levelsVisibility);\r\n                switch (bandComponent.type) {\r\n                    case _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.BAND_DUPLICATE_RENDER:\r\n                        return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplatePlaceholder, { params: __assign({}, params) });\r\n                    case _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.BAND_EMPTY_CELL:\r\n                        return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(InvisibleCell, null);\r\n                    case _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.BAND_GROUP_CELL: {\r\n                        var _b = bandComponent.payload, value = _b.value, payload = __rest(_b, [\"value\"]);\r\n                        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Cell, __assign({}, params, payload), value));\r\n                    }\r\n                    case _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.BAND_HEADER_CELL:\r\n                        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplatePlaceholder, { name: \"tableCell\", params: __assign(__assign({}, params), bandComponent.payload) }));\r\n                    case _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.BAND_FILL_LEVEL_CELL:\r\n                        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Cell, __assign({}, params, bandComponent.payload, { style: { whiteSpace: 'pre' } }), ' '));\r\n                    default:\r\n                        return null;\r\n                }\r\n            })); }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableCell\", predicate: function (_a) {\r\n                    var tableRow = _a.tableRow, tableColumn = _a.tableColumn;\r\n                    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isHeadingTableCell)(tableRow, tableColumn);\r\n                } }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(HeaderCell, __assign({ component: CellPlaceholder$1 }, params))); }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableRow\", predicate: function (_a) {\r\n                    var tableRow = _a.tableRow;\r\n                    return !!(0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isBandedTableRow)(tableRow);\r\n                } }, function (params) { return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Row, __assign({}, params)); })));\r\n    };\r\n    TableBandHeaderBase.ROW_TYPE = _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.TABLE_BAND_TYPE;\r\n    TableBandHeaderBase.components = {\r\n        cellComponent: 'Cell',\r\n        rowComponent: 'Row',\r\n        bandedHeaderCellComponent: 'BandedHeaderCell',\r\n        invisibleCellComponent: 'InvisibleCell',\r\n    };\r\n    return TableBandHeaderBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\nTableBandHeaderBase.components = {\r\n    cellComponent: 'Cell',\r\n    rowComponent: 'Row',\r\n    bandedHeaderCellComponent: 'BandedHeaderCell',\r\n    invisibleCellComponent: 'InvisibleCell',\r\n};\r\n/** A plugin that renders the banded cells. */\r\nvar TableBandHeader = TableBandHeaderBase;\n\nvar pluginDependencies$b = [\r\n    { name: 'FilteringState' },\r\n    { name: 'Table' },\r\n    { name: 'DataTypeProvider', optional: true },\r\n];\r\nvar defaultMessages$2 = {\r\n    filterPlaceholder: 'Filter...',\r\n    contains: 'Contains',\r\n    notContains: 'Does not contain',\r\n    startsWith: 'Starts with',\r\n    endsWith: 'Ends with',\r\n    equal: 'Equals',\r\n    notEqual: 'Does not equal',\r\n    greaterThan: 'Greater than',\r\n    greaterThanOrEqual: 'Greater than or equal to',\r\n    lessThan: 'Less than',\r\n    lessThanOrEqual: 'Less than or equal to',\r\n};\r\nvar TableFilterRowBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(TableFilterRowBase, _super);\r\n    function TableFilterRowBase(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.state = {\r\n            filterOperations: {},\r\n        };\r\n        return _this;\r\n    }\r\n    TableFilterRowBase.prototype.render = function () {\r\n        var _this = this;\r\n        var _a = this.props, rowHeight = _a.rowHeight, showFilterSelector = _a.showFilterSelector, FilterCell = _a.cellComponent, FilterRow = _a.rowComponent, FilterSelector = _a.filterSelectorComponent, iconComponent = _a.iconComponent, toggleButtonComponent = _a.toggleButtonComponent, EditorComponent = _a.editorComponent, messages = _a.messages;\r\n        var getMessage = (0,_devexpress_dx_core__WEBPACK_IMPORTED_MODULE_3__.getMessagesFormatter)(__assign(__assign({}, defaultMessages$2), messages));\r\n        var tableHeaderRowsComputed = function (_a) {\r\n            var tableHeaderRows = _a.tableHeaderRows;\r\n            return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.tableHeaderRowsWithFilter)(tableHeaderRows, rowHeight);\r\n        };\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"TableFilterRow\", dependencies: pluginDependencies$b },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"tableHeaderRows\", computed: tableHeaderRowsComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableCell\", predicate: function (_a) {\r\n                    var tableRow = _a.tableRow, tableColumn = _a.tableColumn;\r\n                    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isFilterTableCell)(tableRow, tableColumn);\r\n                } }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplateConnector, null, function (_a, _b) {\r\n                var filters = _a.filters, isColumnFilteringEnabled = _a.isColumnFilteringEnabled, getAvailableFilterOperations = _a.getAvailableFilterOperations, isDataRemote = _a.isDataRemote;\r\n                var changeColumnFilter = _b.changeColumnFilter, scrollToRow = _b.scrollToRow;\r\n                var filterOperations = _this.state.filterOperations;\r\n                var columnName = params.tableColumn.column.name;\r\n                var filter = (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.getColumnFilterConfig)(filters, columnName);\r\n                var onFilter = function (config) {\r\n                    if (isDataRemote) {\r\n                        scrollToRow(_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.TOP_POSITION);\r\n                    }\r\n                    changeColumnFilter({ columnName: columnName, config: config });\r\n                };\r\n                var columnFilterOperations = (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.getColumnFilterOperations)(getAvailableFilterOperations, columnName);\r\n                var selectedFilterOperation = (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.getSelectedFilterOperation)(filterOperations, columnName, filter, columnFilterOperations);\r\n                var handleFilterOperationChange = function (value) {\r\n                    var _a;\r\n                    _this.setState({\r\n                        filterOperations: __assign(__assign({}, filterOperations), (_a = {}, _a[columnName] = value, _a)),\r\n                    });\r\n                    if (filter && !(0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isFilterValueEmpty)(filter.value)) {\r\n                        onFilter({ value: filter.value, operation: value });\r\n                    }\r\n                };\r\n                var handleFilterValueChange = function (value) { return onFilter(!(0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isFilterValueEmpty)(value)\r\n                    ? { value: value, operation: selectedFilterOperation }\r\n                    : null); };\r\n                var filteringEnabled = isColumnFilteringEnabled(columnName);\r\n                return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplatePlaceholder, { name: \"valueEditor\", params: {\r\n                        column: params.tableColumn.column,\r\n                        value: filter ? filter.value : undefined,\r\n                        onValueChange: handleFilterValueChange,\r\n                        disabled: !filteringEnabled,\r\n                    } }, function (content) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(FilterCell, __assign({}, params, { getMessage: getMessage, column: params.tableColumn.column, filter: filter, filteringEnabled: filteringEnabled, onFilter: onFilter }),\r\n                    showFilterSelector\r\n                        ? ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(FilterSelector, { toggleButtonComponent: toggleButtonComponent, iconComponent: iconComponent, value: selectedFilterOperation, availableValues: columnFilterOperations, onChange: handleFilterOperationChange, disabled: !filteringEnabled, getMessage: getMessage })) : null,\r\n                    content || ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(EditorComponent, { value: filter ? filter.value : undefined, disabled: !filteringEnabled, getMessage: getMessage, onChange: handleFilterValueChange })))); }));\r\n            })); }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableRow\", predicate: function (_a) {\r\n                    var tableRow = _a.tableRow;\r\n                    return !!(0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isFilterTableRow)(tableRow);\r\n                } }, function (params) { return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(FilterRow, __assign({}, params)); })));\r\n    };\r\n    TableFilterRowBase.ROW_TYPE = _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.TABLE_FILTER_TYPE;\r\n    TableFilterRowBase.defaultProps = {\r\n        showFilterSelector: false,\r\n        messages: {},\r\n    };\r\n    TableFilterRowBase.components = {\r\n        rowComponent: 'Row',\r\n        cellComponent: 'Cell',\r\n        filterSelectorComponent: 'FilterSelector',\r\n        iconComponent: 'Icon',\r\n        editorComponent: 'Editor',\r\n        toggleButtonComponent: 'ToggleButton',\r\n    };\r\n    return TableFilterRowBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n/** A plugin that renders a filter row. */\r\nvar TableFilterRow = TableFilterRowBase;\n\nvar pluginDependencies$c = [\r\n    { name: 'EditingState' },\r\n    { name: 'Table' },\r\n    { name: 'DataTypeProvider', optional: true },\r\n];\r\nvar TableEditRowBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(TableEditRowBase, _super);\r\n    function TableEditRowBase() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TableEditRowBase.prototype.render = function () {\r\n        var _a = this.props, EditCell = _a.cellComponent, EditRow = _a.rowComponent, rowHeight = _a.rowHeight;\r\n        var tableBodyRowsComputed = function (_a) {\r\n            var tableBodyRows = _a.tableBodyRows, editingRowIds = _a.editingRowIds, addedRows = _a.addedRows;\r\n            return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.tableRowsWithEditing)(tableBodyRows, editingRowIds, addedRows, rowHeight);\r\n        };\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"TableEditRow\", dependencies: pluginDependencies$c },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"tableBodyRows\", computed: tableBodyRowsComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableCell\", predicate: function (_a) {\r\n                    var tableRow = _a.tableRow, tableColumn = _a.tableColumn;\r\n                    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isEditTableCell)(tableRow, tableColumn);\r\n                } }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplateConnector, null, function (_a, _b) {\r\n                var getCellValue = _a.getCellValue, createRowChange = _a.createRowChange, rowChanges = _a.rowChanges, isColumnEditingEnabled = _a.isColumnEditingEnabled;\r\n                var changeAddedRow = _b.changeAddedRow, changeRow = _b.changeRow;\r\n                var _c = params.tableRow, rowId = _c.rowId, row = _c.row;\r\n                var column = params.tableColumn.column;\r\n                var columnName = column.name;\r\n                var isNew = (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isAddedTableRow)(params.tableRow);\r\n                var changedRow = isNew\r\n                    ? row\r\n                    : __assign(__assign({}, row), (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.getRowChange)(rowChanges, rowId));\r\n                var value = getCellValue(changedRow, columnName);\r\n                var onValueChange = function (newValue) {\r\n                    var changeArgs = {\r\n                        rowId: rowId,\r\n                        change: createRowChange(changedRow, newValue, columnName),\r\n                    };\r\n                    if (isNew) {\r\n                        changeAddedRow(changeArgs);\r\n                    }\r\n                    else {\r\n                        changeRow(changeArgs);\r\n                    }\r\n                };\r\n                var editingEnabled = isColumnEditingEnabled(columnName);\r\n                return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplatePlaceholder, { name: \"valueEditor\", params: {\r\n                        column: column,\r\n                        row: row,\r\n                        value: value,\r\n                        onValueChange: onValueChange,\r\n                        disabled: !editingEnabled,\r\n                    } }, function (content) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(EditCell, __assign({}, params, { row: row, column: column, value: value, editingEnabled: editingEnabled, onValueChange: onValueChange }), content)); }));\r\n            })); }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableRow\", predicate: function (_a) {\r\n                    var tableRow = _a.tableRow;\r\n                    return !!((0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isEditTableRow)(tableRow) || (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isAddedTableRow)(tableRow));\r\n                } }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(EditRow, __assign({}, params, { row: params.tableRow.row }))); })));\r\n    };\r\n    TableEditRowBase.ADDED_ROW_TYPE = _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.TABLE_ADDED_TYPE;\r\n    TableEditRowBase.EDIT_ROW_TYPE = _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.TABLE_EDIT_TYPE;\r\n    TableEditRowBase.components = {\r\n        rowComponent: 'Row',\r\n        cellComponent: 'Cell',\r\n    };\r\n    return TableEditRowBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n/** A plugin that renders a row being edited. */\r\nvar TableEditRow = TableEditRowBase;\n\nvar pluginDependencies$d = [\r\n    { name: 'EditingState' },\r\n    { name: 'Table' },\r\n];\r\nvar defaultMessages$3 = {\r\n    addCommand: 'New',\r\n    editCommand: 'Edit',\r\n    deleteCommand: 'Delete',\r\n    commitCommand: 'Save',\r\n    cancelCommand: 'Cancel',\r\n};\r\nvar TableEditColumnBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(TableEditColumnBase, _super);\r\n    function TableEditColumnBase() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TableEditColumnBase.prototype.render = function () {\r\n        var _a = this.props, Cell = _a.cellComponent, HeaderCell = _a.headerCellComponent, Command = _a.commandComponent, showAddCommand = _a.showAddCommand, showEditCommand = _a.showEditCommand, showDeleteCommand = _a.showDeleteCommand, width = _a.width, messages = _a.messages;\r\n        var getMessage = (0,_devexpress_dx_core__WEBPACK_IMPORTED_MODULE_3__.getMessagesFormatter)(__assign(__assign({}, defaultMessages$3), messages));\r\n        var tableColumnsComputed = function (_a) {\r\n            var tableColumns = _a.tableColumns;\r\n            return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.tableColumnsWithEditing)(tableColumns, width);\r\n        };\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"TableEditColumn\", dependencies: pluginDependencies$d },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"tableColumns\", computed: tableColumnsComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableCell\", predicate: function (_a) {\r\n                    var tableRow = _a.tableRow, tableColumn = _a.tableColumn;\r\n                    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isHeadingEditCommandsTableCell)(tableRow, tableColumn);\r\n                } }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplateConnector, null, function (getters, actions) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(HeaderCell, __assign({}, params), showAddCommand && ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Command, { id: \"add\", text: getMessage('addCommand'), onExecute: function () { return actions.addRow(); } })))); })); }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableCell\", predicate: function (_a) {\r\n                    var tableRow = _a.tableRow, tableColumn = _a.tableColumn;\r\n                    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isEditCommandsTableCell)(tableRow, tableColumn);\r\n                } }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplateConnector, null, function (getters, actions) {\r\n                var isEdit = (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isEditTableRow)(params.tableRow);\r\n                var isNew = (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isAddedTableRow)(params.tableRow);\r\n                var isEditing = isEdit || isNew;\r\n                var rowIds = [params.tableRow.rowId];\r\n                return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Cell, __assign({}, params, { row: params.tableRow.row }),\r\n                    showEditCommand && !isEditing && ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Command, { id: \"edit\", text: getMessage('editCommand'), onExecute: function () { return actions.startEditRows({ rowIds: rowIds }); } })),\r\n                    showDeleteCommand && !isEditing && ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Command, { id: \"delete\", text: getMessage('deleteCommand'), onExecute: function () {\r\n                            actions.deleteRows({ rowIds: rowIds });\r\n                            actions.commitDeletedRows({ rowIds: rowIds });\r\n                        } })),\r\n                    isEditing && ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Command, { id: \"commit\", text: getMessage('commitCommand'), onExecute: function () {\r\n                            if (isNew) {\r\n                                actions.commitAddedRows({ rowIds: rowIds });\r\n                            }\r\n                            else {\r\n                                actions.stopEditRows({ rowIds: rowIds });\r\n                                actions.commitChangedRows({ rowIds: rowIds });\r\n                            }\r\n                        } })),\r\n                    isEditing && ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Command, { id: \"cancel\", text: getMessage('cancelCommand'), onExecute: function () {\r\n                            if (isNew) {\r\n                                actions.cancelAddedRows({ rowIds: rowIds });\r\n                            }\r\n                            else {\r\n                                actions.stopEditRows({ rowIds: rowIds });\r\n                                actions.cancelChangedRows({ rowIds: rowIds });\r\n                            }\r\n                        } }))));\r\n            })); })));\r\n    };\r\n    TableEditColumnBase.COLUMN_TYPE = _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.TABLE_EDIT_COMMAND_TYPE;\r\n    TableEditColumnBase.defaultProps = {\r\n        showAddCommand: false,\r\n        showEditCommand: false,\r\n        showDeleteCommand: false,\r\n        width: 140,\r\n        messages: {},\r\n    };\r\n    TableEditColumnBase.components = {\r\n        cellComponent: 'Cell',\r\n        headerCellComponent: 'HeaderCell',\r\n        commandComponent: 'Command',\r\n    };\r\n    return TableEditColumnBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n/***\r\n * A plugin that renders a command column. This column contains controls used for row editing,\r\n * creating, or deleting and committing/canceling changes.\r\n * */\r\nvar TableEditColumn = TableEditColumnBase;\n\nvar pluginDependencies$e = [\r\n    { name: 'Table' },\r\n];\r\n// tslint:disable-next-line: max-line-length\r\nvar TableColumnResizingBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(TableColumnResizingBase, _super);\r\n    function TableColumnResizingBase(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.widthGetters = {};\r\n        _this.cachedWidths = {};\r\n        _this.state = {\r\n            columnWidths: props.columnWidths || props.defaultColumnWidths,\r\n            draftColumnWidths: [],\r\n        };\r\n        var stateHelper = (0,_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.createStateHelper)(_this, {\r\n            columnWidths: function () {\r\n                var onColumnWidthsChange = _this.props.onColumnWidthsChange;\r\n                return onColumnWidthsChange;\r\n            },\r\n        });\r\n        _this.tableColumnsComputed = (0,_devexpress_dx_core__WEBPACK_IMPORTED_MODULE_3__.memoize)(function (columnWidths) { return function (_a) {\r\n            var tableColumns = _a.tableColumns;\r\n            return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.tableColumnsWithWidths)(tableColumns, columnWidths, _this.props.resizingMode);\r\n        }; });\r\n        _this.tableColumnsDraftComputed = (0,_devexpress_dx_core__WEBPACK_IMPORTED_MODULE_3__.memoize)(function (draftColumnWidths) { return function (_a) {\r\n            var tableColumns = _a.tableColumns;\r\n            return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.tableColumnsWithDraftWidths)(tableColumns, draftColumnWidths, _this.props.resizingMode);\r\n        }; });\r\n        _this.changeTableColumnWidth = stateHelper.applyReducer.bind(stateHelper, function (prevState, payload) {\r\n            var cachedWidths = __assign({}, _this.cachedWidths);\r\n            var _a = _this.props, minColumnWidth = _a.minColumnWidth, maxColumnWidth = _a.maxColumnWidth, columnExtensions = _a.columnExtensions, resizingMode = _a.resizingMode;\r\n            return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.changeTableColumnWidth)(prevState, __assign(__assign({}, payload), { cachedWidths: cachedWidths, resizingMode: resizingMode,\r\n                minColumnWidth: minColumnWidth, maxColumnWidth: maxColumnWidth, columnExtensions: columnExtensions }));\r\n        });\r\n        _this.draftTableColumnWidth = stateHelper.applyReducer.bind(stateHelper, function (prevState, payload) {\r\n            _this.storeCache(payload);\r\n            var cachedWidths = _this.cachedWidths;\r\n            var _a = _this.props, minColumnWidth = _a.minColumnWidth, maxColumnWidth = _a.maxColumnWidth, columnExtensions = _a.columnExtensions, resizingMode = _a.resizingMode;\r\n            return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.draftTableColumnWidth)(prevState, __assign(__assign({}, payload), { cachedWidths: cachedWidths, resizingMode: resizingMode,\r\n                minColumnWidth: minColumnWidth, maxColumnWidth: maxColumnWidth, columnExtensions: columnExtensions }));\r\n        });\r\n        _this.cancelTableColumnWidthDraft = stateHelper.applyReducer.bind(stateHelper, _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.cancelTableColumnWidthDraft);\r\n        _this.storeCache = function (_a) {\r\n            var columnName = _a.columnName, nextColumnName = _a.nextColumnName;\r\n            if (Object.keys(_this.cachedWidths).length === 0) {\r\n                _this.cachedWidths[columnName] = _this.widthGetters[columnName]();\r\n                if (nextColumnName) {\r\n                    _this.cachedWidths[nextColumnName] = _this.widthGetters[nextColumnName]();\r\n                }\r\n            }\r\n        };\r\n        _this.clearCache = function () {\r\n            Object.keys(_this.cachedWidths)\r\n                .forEach(function (columnName) { return delete _this.cachedWidths[columnName]; });\r\n        };\r\n        _this.storeWidthGetters = (0,_devexpress_dx_core__WEBPACK_IMPORTED_MODULE_3__.memoize)(function (_a) {\r\n            var tableColumn = _a.tableColumn, getter = _a.getter, tableColumns = _a.tableColumns;\r\n            if (tableColumn.type === _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.TABLE_DATA_TYPE) {\r\n                _this.widthGetters[tableColumn.column.name] = getter;\r\n            }\r\n            Object.keys(_this.widthGetters)\r\n                .forEach(function (columnName) {\r\n                var columnIndex = tableColumns\r\n                    .findIndex(function (_a) {\r\n                    var type = _a.type, column = _a.column;\r\n                    return type === _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.TABLE_DATA_TYPE && column.name === columnName;\r\n                });\r\n                if (columnIndex === -1) {\r\n                    delete _this.widthGetters[columnName];\r\n                }\r\n            });\r\n        });\r\n        return _this;\r\n    }\r\n    TableColumnResizingBase.getDerivedStateFromProps = function (nextProps, prevState) {\r\n        var _a = nextProps.columnWidths, columnWidths = _a === void 0 ? prevState.columnWidths : _a;\r\n        return {\r\n            columnWidths: columnWidths,\r\n        };\r\n    };\r\n    TableColumnResizingBase.prototype.componentDidUpdate = function (_, prevState) {\r\n        var currentWidths = this.state.columnWidths;\r\n        var prevWidths = prevState.columnWidths;\r\n        if (currentWidths !== prevWidths) {\r\n            this.clearCache();\r\n        }\r\n    };\r\n    TableColumnResizingBase.prototype.render = function () {\r\n        var _a = this.state, columnWidths = _a.columnWidths, draftColumnWidths = _a.draftColumnWidths;\r\n        var resizingMode = this.props.resizingMode;\r\n        var tableColumnsComputed = this.tableColumnsComputed(columnWidths);\r\n        var tableColumnsDraftComputed = this.tableColumnsDraftComputed(draftColumnWidths);\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"TableColumnResizing\", dependencies: pluginDependencies$e },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"tableColumnResizingEnabled\", value: true }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"tableColumns\", computed: tableColumnsComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"tableColumns\", computed: tableColumnsDraftComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"columnResizingMode\", value: resizingMode }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"changeTableColumnWidth\", action: this.changeTableColumnWidth }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"draftTableColumnWidth\", action: this.draftTableColumnWidth }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"cancelTableColumnWidthDraft\", action: this.cancelTableColumnWidthDraft }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"storeWidthGetters\", action: this.storeWidthGetters })));\r\n    };\r\n    TableColumnResizingBase.defaultProps = {\r\n        defaultColumnWidths: [],\r\n        resizingMode: 'widget',\r\n    };\r\n    return TableColumnResizingBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n/* tslint:disable: max-line-length */\r\n/** A plugin that manages table column widths. */\r\nvar TableColumnResizing = TableColumnResizingBase;\r\n/* tslint:enable: max-line-length */\n\nvar pluginDependencies$f = [\r\n    { name: 'PagingState' },\r\n];\r\nvar defaultMessages$4 = {\r\n    showAll: 'All',\r\n    info: function (_a) {\r\n        var from = _a.from, to = _a.to, count = _a.count;\r\n        return \"\" + from + (from < to ? \"-\" + to : '') + \" of \" + count;\r\n    },\r\n};\r\nvar PagingPanelBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(PagingPanelBase, _super);\r\n    function PagingPanelBase() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PagingPanelBase.prototype.render = function () {\r\n        var _a = this.props, Pager = _a.containerComponent, pageSizes = _a.pageSizes, messages = _a.messages;\r\n        var getMessage = (0,_devexpress_dx_core__WEBPACK_IMPORTED_MODULE_3__.getMessagesFormatter)(__assign(__assign({}, defaultMessages$4), messages));\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"PagingPanel\", dependencies: pluginDependencies$f },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"footer\" },\r\n                (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplatePlaceholder, null),\r\n                (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplateConnector, null, function (_a, _b) {\r\n                    var currentPage = _a.currentPage, pageSize = _a.pageSize, totalCount = _a.totalCount;\r\n                    var setCurrentPage = _b.setCurrentPage, setPageSize = _b.setPageSize;\r\n                    return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Pager, { currentPage: currentPage, pageSize: pageSize, totalCount: totalCount, totalPages: (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.pageCount)(totalCount, pageSize), pageSizes: pageSizes, getMessage: getMessage, onCurrentPageChange: setCurrentPage, onPageSizeChange: setPageSize }));\r\n                }))));\r\n    };\r\n    PagingPanelBase.defaultProps = {\r\n        pageSizes: [],\r\n        messages: {},\r\n    };\r\n    PagingPanelBase.components = {\r\n        containerComponent: 'Container',\r\n    };\r\n    return PagingPanelBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n/** A plugin that renders the paging panel used for navigation through data pages. */\r\nvar PagingPanel = PagingPanelBase;\n\nvar defaultProps = {\r\n    draggingEnabled: false,\r\n    onDragStart: function () { },\r\n    onDragEnd: function () { },\r\n};\r\n// tslint:disable-next-line: max-line-length\r\nvar ItemLayout = /*#__PURE__*/ (function (_super) {\r\n    __extends(ItemLayout, _super);\r\n    function ItemLayout(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.state = {\r\n            dragging: false,\r\n        };\r\n        return _this;\r\n    }\r\n    ItemLayout.prototype.render = function () {\r\n        var _this = this;\r\n        var _a = this.props, item = _a.item, Item = _a.itemComponent, draggingEnabled = _a.draggingEnabled, onDragStart = _a.onDragStart, onDragEnd = _a.onDragEnd;\r\n        var dragging = this.state.dragging;\r\n        var itemElement = (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Item, { item: __assign(__assign({}, item), { draft: dragging || item.draft }) });\r\n        return (draggingEnabled ? ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.DragSource, { payload: [{ type: 'column', columnName: item.column.name }], onStart: function () {\r\n                _this.setState({ dragging: true });\r\n                onDragStart();\r\n            }, onEnd: function () {\r\n                _this.setState({ dragging: false });\r\n                onDragEnd();\r\n            } }, itemElement)) : (itemElement));\r\n    };\r\n    ItemLayout.defaultProps = defaultProps;\r\n    return ItemLayout;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\n\nvar defaultProps$1 = {\r\n    onGroup: function () { },\r\n    draggingEnabled: false,\r\n    isColumnGroupingEnabled: function () { return false; },\r\n    onGroupDraft: function () { },\r\n    onGroupDraftCancel: function () { },\r\n};\r\n// tslint:disable-next-line: max-line-length\r\nvar GroupPanelLayoutBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(GroupPanelLayoutBase, _super);\r\n    function GroupPanelLayoutBase(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.itemRefs = [];\r\n        _this.draggingColumnName = null;\r\n        _this.state = {\r\n            sourceColumnName: null,\r\n            targetItemIndex: -1,\r\n        };\r\n        _this.handleDragEvent = function (eventHandler, _a) {\r\n            var payload = _a.payload, restArgs = __rest(_a, [\"payload\"]);\r\n            var isColumnGroupingEnabled = _this.props.isColumnGroupingEnabled;\r\n            var columnName = payload[0].columnName;\r\n            if (isColumnGroupingEnabled(columnName)) {\r\n                eventHandler(__assign({ payload: payload }, restArgs));\r\n            }\r\n        };\r\n        _this.onEnter = function (_a) {\r\n            var payload = _a.payload;\r\n            _this.setState({\r\n                sourceColumnName: payload[0].columnName,\r\n            });\r\n        };\r\n        _this.onOver = function (_a) {\r\n            var clientOffset = _a.clientOffset;\r\n            var _b = _this.props, onGroupDraft = _b.onGroupDraft, items = _b.items;\r\n            var _c = _this.state, sourceColumnName = _c.sourceColumnName, prevTargetItemIndex = _c.targetItemIndex;\r\n            // eslint-disable-next-line react/no-find-dom-node\r\n            var itemGeometries = _this.itemRefs\r\n                .map(function (ref) { return (0,react_dom__WEBPACK_IMPORTED_MODULE_4__.findDOMNode)(ref).getBoundingClientRect(); });\r\n            var sourceItemIndex = items.findIndex(function (_a) {\r\n                var column = _a.column;\r\n                return column.name === sourceColumnName;\r\n            });\r\n            var targetItemIndex = (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.getGroupCellTargetIndex)(itemGeometries, sourceItemIndex, clientOffset);\r\n            if (prevTargetItemIndex === targetItemIndex)\r\n                return;\r\n            onGroupDraft({\r\n                columnName: sourceColumnName,\r\n                groupIndex: targetItemIndex,\r\n            });\r\n            _this.setState({ targetItemIndex: targetItemIndex });\r\n        };\r\n        _this.onLeave = function () {\r\n            var onGroupDraft = _this.props.onGroupDraft;\r\n            var sourceColumnName = _this.state.sourceColumnName;\r\n            if (!_this.draggingColumnName) {\r\n                _this.resetState();\r\n                return;\r\n            }\r\n            onGroupDraft({\r\n                columnName: sourceColumnName,\r\n                groupIndex: -1,\r\n            });\r\n            _this.setState({\r\n                targetItemIndex: -1,\r\n            });\r\n        };\r\n        _this.onDrop = function () {\r\n            var onGroup = _this.props.onGroup;\r\n            var _a = _this.state, sourceColumnName = _a.sourceColumnName, targetItemIndex = _a.targetItemIndex;\r\n            _this.resetState();\r\n            onGroup({\r\n                columnName: sourceColumnName,\r\n                groupIndex: targetItemIndex,\r\n            });\r\n        };\r\n        _this.onDragStart = function (columnName) {\r\n            _this.draggingColumnName = columnName;\r\n        };\r\n        _this.onDragEnd = function () {\r\n            _this.draggingColumnName = null;\r\n            var _a = _this.state, sourceColumnName = _a.sourceColumnName, targetItemIndex = _a.targetItemIndex;\r\n            var onGroup = _this.props.onGroup;\r\n            if (sourceColumnName && targetItemIndex === -1) {\r\n                onGroup({\r\n                    columnName: sourceColumnName,\r\n                });\r\n            }\r\n            _this.resetState();\r\n        };\r\n        return _this;\r\n    }\r\n    GroupPanelLayoutBase.prototype.resetState = function () {\r\n        var onGroupDraftCancel = this.props.onGroupDraftCancel;\r\n        onGroupDraftCancel();\r\n        this.setState({\r\n            sourceColumnName: null,\r\n            targetItemIndex: -1,\r\n        });\r\n    };\r\n    GroupPanelLayoutBase.prototype.render = function () {\r\n        var _this = this;\r\n        var _a = this.props, items = _a.items, EmptyMessage = _a.emptyMessageComponent, Container = _a.containerComponent, Item = _a.itemComponent, draggingEnabled = _a.draggingEnabled, isColumnGroupingEnabled = _a.isColumnGroupingEnabled;\r\n        this.itemRefs = [];\r\n        var groupPanel = (items.length ? ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Container, null, items.map(function (item) {\r\n            var columnName = item.column.name;\r\n            return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(ItemLayout, { key: columnName, ref: function (element) { return element && _this.itemRefs.push(element); }, item: item, itemComponent: Item, draggingEnabled: draggingEnabled && isColumnGroupingEnabled(columnName), onDragStart: function () { return _this.onDragStart(columnName); }, onDragEnd: _this.onDragEnd }));\r\n        }))) : ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(EmptyMessage, null)));\r\n        return draggingEnabled\r\n            ? ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.DropTarget, { onEnter: function (args) { return _this.handleDragEvent(_this.onEnter, args); }, onOver: function (args) { return _this.handleDragEvent(_this.onOver, args); }, onLeave: function (args) { return _this.handleDragEvent(_this.onLeave, args); }, onDrop: function (args) { return _this.handleDragEvent(_this.onDrop, args); } }, groupPanel))\r\n            : groupPanel;\r\n    };\r\n    GroupPanelLayoutBase.defaultProps = defaultProps$1;\r\n    return GroupPanelLayoutBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n/** @internal */\r\nvar GroupPanelLayout = GroupPanelLayoutBase;\n\nvar defaultMessages$5 = {\r\n    groupByColumn: 'Drag a column header here to group by that column',\r\n};\r\nvar defaultProps$2 = {\r\n    showSortingControls: false,\r\n    showGroupingControls: false,\r\n    messages: {},\r\n};\r\nvar GroupingPanelRaw = /*#__PURE__*/ (function (_super) {\r\n    __extends(GroupingPanelRaw, _super);\r\n    function GroupingPanelRaw() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    GroupingPanelRaw.prototype.render = function () {\r\n        var _a = this.props, LayoutComponent = _a.layoutComponent, Container = _a.containerComponent, Item = _a.itemComponent, EmptyMessage = _a.emptyMessageComponent, showSortingControls = _a.showSortingControls, showGroupingControls = _a.showGroupingControls, messages = _a.messages;\r\n        var getMessage = (0,_devexpress_dx_core__WEBPACK_IMPORTED_MODULE_3__.getMessagesFormatter)(__assign(__assign({}, defaultMessages$5), messages));\r\n        var EmptyMessagePlaceholder = function () { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(EmptyMessage, { getMessage: getMessage })); };\r\n        var ItemPlaceholder = function (_a) {\r\n            var item = _a.item;\r\n            var columnName = item.column.name;\r\n            return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplateConnector, null, function (_a, _b) {\r\n                var sorting = _a.sorting, isColumnSortingEnabled = _a.isColumnSortingEnabled, isColumnGroupingEnabled = _a.isColumnGroupingEnabled;\r\n                var changeColumnGrouping = _b.changeColumnGrouping, changeColumnSorting = _b.changeColumnSorting;\r\n                var sortingEnabled = isColumnSortingEnabled && isColumnSortingEnabled(columnName);\r\n                var groupingEnabled = isColumnGroupingEnabled && isColumnGroupingEnabled(columnName);\r\n                return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Item, { item: item, sortingEnabled: sortingEnabled, groupingEnabled: groupingEnabled, showSortingControls: showSortingControls, sortingDirection: showSortingControls\r\n                        ? (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.getColumnSortingDirection)(sorting, columnName) : undefined, showGroupingControls: showGroupingControls, onGroup: function () { return changeColumnGrouping({ columnName: columnName }); }, onSort: function (_a) {\r\n                        var direction = _a.direction, keepOther = _a.keepOther;\r\n                        return changeColumnSorting({ columnName: columnName, direction: direction, keepOther: keepOther });\r\n                    } }));\r\n            }));\r\n        };\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"GroupingPanel\", dependencies: [\r\n                { name: 'GroupingState' },\r\n                { name: 'Toolbar' },\r\n                { name: 'SortingState', optional: !showSortingControls },\r\n            ] },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"toolbarContent\" },\r\n                (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplateConnector, null, function (_a, _b) {\r\n                    var columns = _a.columns, grouping = _a.grouping, draftGrouping = _a.draftGrouping, draggingEnabled = _a.draggingEnabled, isColumnGroupingEnabled = _a.isColumnGroupingEnabled, isDataRemote = _a.isDataRemote;\r\n                    var changeColumnGrouping = _b.changeColumnGrouping, draftColumnGrouping = _b.draftColumnGrouping, cancelColumnGroupingDraft = _b.cancelColumnGroupingDraft, scrollToRow = _b.scrollToRow;\r\n                    var onGroup = function (config) {\r\n                        if (isDataRemote) {\r\n                            scrollToRow(_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.TOP_POSITION);\r\n                        }\r\n                        changeColumnGrouping(config);\r\n                    };\r\n                    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(LayoutComponent, { items: (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.groupingPanelItems)(columns, grouping, draftGrouping), isColumnGroupingEnabled: isColumnGroupingEnabled, draggingEnabled: draggingEnabled, onGroup: onGroup, onGroupDraft: draftColumnGrouping, onGroupDraftCancel: cancelColumnGroupingDraft, itemComponent: ItemPlaceholder, emptyMessageComponent: EmptyMessagePlaceholder, containerComponent: Container });\r\n                }),\r\n                (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplatePlaceholder, null))));\r\n    };\r\n    GroupingPanelRaw.defaultProps = defaultProps$2;\r\n    GroupingPanelRaw.components = {\r\n        layoutComponent: 'Layout',\r\n        containerComponent: 'Container',\r\n        itemComponent: 'Item',\r\n        emptyMessageComponent: 'EmptyMessage',\r\n    };\r\n    return GroupingPanelRaw;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n/***\r\n * A plugin that renders the Grouping Panel in the Grid's header. This panel displays grouped\r\n * columns and allows a user to modify grouping options.Optionally, the plugin allows an end-user\r\n * to change grouped columns' sorting order and render sorting indicators.\r\n * */\r\nvar GroupingPanel = (0,_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.withComponents)({ Layout: GroupPanelLayout })(GroupingPanelRaw);\n\nvar DataTypeProviderBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(DataTypeProviderBase, _super);\r\n    function DataTypeProviderBase() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DataTypeProviderBase.prototype.render = function () {\r\n        var _a = this.props, columnNames = _a.for, Formatter = _a.formatterComponent, Editor = _a.editorComponent, availableFilterOperations = _a.availableFilterOperations;\r\n        var getAvailableFilterOperationsComputed = function (_a) {\r\n            var getAvailableFilterOperations = _a.getAvailableFilterOperations;\r\n            return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.getAvailableFilterOperationsGetter)(getAvailableFilterOperations, availableFilterOperations, columnNames);\r\n        };\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"DataTypeProvider\", key: columnNames.join('_') },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"getAvailableFilterOperations\", computed: getAvailableFilterOperationsComputed }),\r\n            Formatter\r\n                ? ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"valueFormatter\", predicate: function (_a) {\r\n                        var column = _a.column;\r\n                        return columnNames.includes(column.name);\r\n                    } }, function (params) { return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Formatter, __assign({}, params)); }))\r\n                : null,\r\n            Editor\r\n                ? ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"valueEditor\", predicate: function (_a) {\r\n                        var column = _a.column;\r\n                        return columnNames.includes(column.name);\r\n                    } }, function (params) { return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Editor, __assign({}, params)); }))\r\n                : null));\r\n    };\r\n    return DataTypeProviderBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n// tslint:disable-next-line: max-line-length\r\n/** A plugin that allows you to customize formatting options and editors depending on the data type. */\r\nvar DataTypeProvider = DataTypeProviderBase;\n\nvar pluginDependencies$g = [\r\n    { name: 'Table' },\r\n];\r\nvar defaultMessages$6 = {\r\n    noColumns: 'Nothing to show',\r\n};\r\nvar columnExtensionValueGetter$4 = function (columnExtensions, defaultValue) { return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.getColumnExtensionValueGetter)(columnExtensions, 'togglingEnabled', defaultValue); };\r\n// tslint:disable-next-line: max-line-length\r\nvar TableColumnVisibilityBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(TableColumnVisibilityBase, _super);\r\n    function TableColumnVisibilityBase(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.state = {\r\n            hiddenColumnNames: props.hiddenColumnNames || props.defaultHiddenColumnNames,\r\n        };\r\n        var stateHelper = (0,_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.createStateHelper)(_this, {\r\n            hiddenColumnNames: function () {\r\n                var onHiddenColumnNamesChange = _this.props.onHiddenColumnNamesChange;\r\n                return onHiddenColumnNamesChange;\r\n            },\r\n        });\r\n        _this.toggleColumnVisibility = stateHelper.applyFieldReducer.bind(stateHelper, 'hiddenColumnNames', _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.toggleColumn);\r\n        return _this;\r\n    }\r\n    TableColumnVisibilityBase.getDerivedStateFromProps = function (nextProps, prevState) {\r\n        var _a = nextProps.hiddenColumnNames, hiddenColumnNames = _a === void 0 ? prevState.hiddenColumnNames : _a;\r\n        return {\r\n            hiddenColumnNames: hiddenColumnNames,\r\n        };\r\n    };\r\n    TableColumnVisibilityBase.prototype.render = function () {\r\n        var _a = this.props, EmptyMessage = _a.emptyMessageComponent, messages = _a.messages;\r\n        var getMessage = (0,_devexpress_dx_core__WEBPACK_IMPORTED_MODULE_3__.getMessagesFormatter)(__assign(__assign({}, defaultMessages$6), messages));\r\n        var hiddenColumnNames = this.state.hiddenColumnNames;\r\n        var _b = this.props, columnExtensions = _b.columnExtensions, columnTogglingEnabled = _b.columnTogglingEnabled;\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"TableColumnVisibility\", dependencies: pluginDependencies$g },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(VisibleTableColumns, { hiddenColumnNames: hiddenColumnNames }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"isColumnTogglingEnabled\", value: columnExtensionValueGetter$4(columnExtensions, columnTogglingEnabled) }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"toggleColumnVisibility\", action: this.toggleColumnVisibility }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"table\" }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplateConnector, null, function (_a) {\r\n                var tableColumns = _a.tableColumns;\r\n                return ((0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.tableDataColumnsExist)(tableColumns)\r\n                    ? (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplatePlaceholder, null)\r\n                    : ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(EmptyMessage, __assign({ getMessage: getMessage }, params))));\r\n            })); })));\r\n    };\r\n    TableColumnVisibilityBase.defaultProps = {\r\n        defaultHiddenColumnNames: [],\r\n        messages: {},\r\n        columnTogglingEnabled: true,\r\n    };\r\n    TableColumnVisibilityBase.components = {\r\n        emptyMessageComponent: 'EmptyMessage',\r\n    };\r\n    return TableColumnVisibilityBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\nTableColumnVisibilityBase.components = {\r\n    emptyMessageComponent: 'EmptyMessage',\r\n};\r\n/* tslint:disable: max-line-length */\r\n/** A plugin that manages Grid columns' visibility. */\r\nvar TableColumnVisibility = TableColumnVisibilityBase;\r\n/* tslint:enable: max-line-length */\n\nvar ToolbarBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(ToolbarBase, _super);\r\n    function ToolbarBase() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ToolbarBase.prototype.render = function () {\r\n        var _a = this.props, Root = _a.rootComponent, FlexibleSpaceComponent = _a.flexibleSpaceComponent;\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"Toolbar\" },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"header\" },\r\n                (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Root, null,\r\n                    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplatePlaceholder, { name: \"toolbarContent\" })),\r\n                (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplatePlaceholder, null)),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"toolbarContent\" },\r\n                (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(FlexibleSpaceComponent, null))));\r\n    };\r\n    ToolbarBase.components = {\r\n        rootComponent: 'Root',\r\n        flexibleSpaceComponent: 'FlexibleSpace',\r\n    };\r\n    return ToolbarBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n/** A plugin that renders the Grid toolbar. */\r\nvar Toolbar = ToolbarBase;\n\nvar TreeDataStateBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(TreeDataStateBase, _super);\r\n    function TreeDataStateBase(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.state = {\r\n            expandedRowIds: props.expandedRowIds || props.defaultExpandedRowIds,\r\n        };\r\n        var stateHelper = (0,_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.createStateHelper)(_this, {\r\n            expandedRowIds: function () {\r\n                var onExpandedRowIdsChange = _this.props.onExpandedRowIdsChange;\r\n                return onExpandedRowIdsChange;\r\n            },\r\n        });\r\n        _this.toggleRowExpanded = stateHelper.applyFieldReducer\r\n            .bind(stateHelper, 'expandedRowIds', _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.toggleRowExpanded);\r\n        return _this;\r\n    }\r\n    TreeDataStateBase.getDerivedStateFromProps = function (nextProps, prevState) {\r\n        var _a = nextProps.expandedRowIds, expandedRowIds = _a === void 0 ? prevState.expandedRowIds : _a;\r\n        return {\r\n            expandedRowIds: expandedRowIds,\r\n        };\r\n    };\r\n    TreeDataStateBase.prototype.render = function () {\r\n        var expandedRowIds = this.state.expandedRowIds;\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"TreeDataState\" },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"expandedRowIds\", value: expandedRowIds }),\r\n            ' ',\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"toggleRowExpanded\", action: this.toggleRowExpanded })));\r\n    };\r\n    TreeDataStateBase.defaultProps = {\r\n        defaultExpandedRowIds: [],\r\n    };\r\n    return TreeDataStateBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n/** A plugin that manages the expanded state for tree rows. */\r\nvar TreeDataState = TreeDataStateBase;\n\nvar pluginDependencies$h = [\r\n    { name: 'TreeDataState' },\r\n];\r\nvar expandedTreeRowsComputed = function (_a) {\r\n    var rows = _a.rows, getRowId = _a.getRowId, expandedRowIds = _a.expandedRowIds;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.expandedTreeRows)(rows, getRowId, expandedRowIds);\r\n};\r\nvar getRowIdComputed$1 = function (_a) {\r\n    var getRowId = _a.getRowId, rows = _a.rows;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.customTreeRowIdGetter)(getRowId, rows);\r\n};\r\nvar getRowLevelKeyComputed = function (_a) {\r\n    var getRowLevelKey = _a.getRowLevelKey, rows = _a.rows;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.customTreeRowLevelKeyGetter)(getRowLevelKey, rows);\r\n};\r\nvar isTreeRowLeafComputed = function (_a) {\r\n    var rows = _a.rows;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isTreeRowLeafGetter)(rows);\r\n};\r\nvar getTreeRowLevelComputed = function (_a) {\r\n    var rows = _a.rows;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.getTreeRowLevelGetter)(rows);\r\n};\r\nvar collapsedTreeRowsGetterComputed = function (_a) {\r\n    var rows = _a.rows, getCollapsedRows = _a.getCollapsedRows;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.collapsedTreeRowsGetter)(getCollapsedRows, rows);\r\n};\r\nvar unwrappedTreeRowsComputed = function (_a) {\r\n    var rows = _a.rows;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.unwrappedCustomTreeRows)(rows);\r\n};\r\nvar CustomTreeDataBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(CustomTreeDataBase, _super);\r\n    function CustomTreeDataBase() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    CustomTreeDataBase.prototype.render = function () {\r\n        var getChildRows = this.props.getChildRows;\r\n        var treeRowsComputed = function (_a) {\r\n            var rows = _a.rows;\r\n            return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.customTreeRowsWithMeta)(rows, getChildRows);\r\n        };\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"CustomTreeData\", dependencies: pluginDependencies$h },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"rows\", computed: treeRowsComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"getRowId\", computed: getRowIdComputed$1 }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"getRowLevelKey\", computed: getRowLevelKeyComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"isTreeRowLeaf\", computed: isTreeRowLeafComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"getTreeRowLevel\", computed: getTreeRowLevelComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"rows\", computed: expandedTreeRowsComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"getCollapsedRows\", computed: collapsedTreeRowsGetterComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"rows\", computed: unwrappedTreeRowsComputed })));\r\n    };\r\n    return CustomTreeDataBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n/***\r\n * A plugin that converts custom formatted tree data to a supported format and performs\r\n * local row expanding/collapsing.\r\n * */\r\nvar CustomTreeData = CustomTreeDataBase;\n\nvar TableTreeColumnBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(TableTreeColumnBase, _super);\r\n    function TableTreeColumnBase() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TableTreeColumnBase.prototype.render = function () {\r\n        var _a = this.props, forColumnName = _a.for, showSelectionControls = _a.showSelectionControls, showSelectAll = _a.showSelectAll, Indent = _a.indentComponent, ExpandButton = _a.expandButtonComponent, Checkbox = _a.checkboxComponent, Content = _a.contentComponent, Cell = _a.cellComponent;\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"TableTreeColumn\", dependencies: [\r\n                { name: 'DataTypeProvider', optional: true },\r\n                { name: 'TreeDataState' },\r\n                { name: 'SelectionState', optional: !showSelectionControls },\r\n                { name: 'IntegratedSelection', optional: !showSelectAll },\r\n                { name: 'Table' },\r\n                { name: 'TableHeaderRow', optional: true },\r\n            ], key: forColumnName },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"tableTreeColumnName\", value: forColumnName }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableHeaderCellBefore\", predicate: function (_a) {\r\n                    var column = _a.column;\r\n                    return column.name === forColumnName;\r\n                } },\r\n                (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(ExpandButton, { visible: false, expanded: false, onToggle: function () { } }),\r\n                showSelectionControls && showSelectAll && ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplateConnector, null, function (_a, _b) {\r\n                    var selectAllAvailable = _a.selectAllAvailable, allSelected = _a.allSelected, someSelected = _a.someSelected;\r\n                    var toggleSelectAll = _b.toggleSelectAll;\r\n                    return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Checkbox, { disabled: !selectAllAvailable, checked: allSelected, indeterminate: someSelected, onChange: toggleSelectAll }));\r\n                }))),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableCell\", predicate: function (_a) {\r\n                    var tableRow = _a.tableRow, tableColumn = _a.tableColumn;\r\n                    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isTreeTableCell)(tableRow, tableColumn, forColumnName);\r\n                } }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplateConnector, null, function (_a, _b) {\r\n                var getCollapsedRows = _a.getCollapsedRows, expandedRowIds = _a.expandedRowIds, selection = _a.selection, isTreeRowLeaf = _a.isTreeRowLeaf, getTreeRowLevel = _a.getTreeRowLevel, getCellValue = _a.getCellValue;\r\n                var toggleRowExpanded = _b.toggleRowExpanded, toggleSelection = _b.toggleSelection;\r\n                var _c = params.tableRow, row = _c.row, rowId = _c.rowId;\r\n                var columnName = params.tableColumn.column.name;\r\n                var value = getCellValue(row, columnName);\r\n                var collapsedRows = getCollapsedRows(row);\r\n                return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplatePlaceholder, { name: \"valueFormatter\", params: {\r\n                        value: value,\r\n                        row: row,\r\n                        column: params.tableColumn.column,\r\n                    } }, function (content) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Cell, __assign({}, params, { row: row, column: params.tableColumn.column, value: value }),\r\n                    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Indent, { level: getTreeRowLevel(row) }),\r\n                    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(ExpandButton, { visible: collapsedRows ? !!collapsedRows.length : !isTreeRowLeaf(row), expanded: expandedRowIds.indexOf(rowId) > -1, onToggle: function () { return toggleRowExpanded({ rowId: rowId }); } }),\r\n                    showSelectionControls && ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Checkbox, { disabled: false, checked: selection.indexOf(rowId) > -1, indeterminate: false, onChange: function () { return toggleSelection({ rowIds: [rowId] }); } })),\r\n                    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Content, null, content || value))); }));\r\n            })); })));\r\n    };\r\n    TableTreeColumnBase.defaultProps = {\r\n        showSelectionControls: false,\r\n        showSelectAll: false,\r\n    };\r\n    TableTreeColumnBase.components = {\r\n        cellComponent: 'Cell',\r\n        contentComponent: 'Content',\r\n        indentComponent: 'Indent',\r\n        expandButtonComponent: 'ExpandButton',\r\n        checkboxComponent: 'Checkbox',\r\n    };\r\n    return TableTreeColumnBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n/** A plugin that renders a table column with a toggle button and sorting indicators. */\r\nvar TableTreeColumn = TableTreeColumnBase;\n\nvar SearchStateBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(SearchStateBase, _super);\r\n    function SearchStateBase(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.state = {\r\n            value: props.value || props.defaultValue,\r\n        };\r\n        var stateHelper = (0,_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.createStateHelper)(_this, {\r\n            value: function () {\r\n                var onValueChange = _this.props.onValueChange;\r\n                return onValueChange;\r\n            },\r\n        });\r\n        _this.changeValue = stateHelper.applyFieldReducer\r\n            .bind(stateHelper, 'value', _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.changeSearchValue);\r\n        return _this;\r\n    }\r\n    SearchStateBase.getDerivedStateFromProps = function (nextProps, prevState) {\r\n        var _a = nextProps.value, value = _a === void 0 ? prevState.value : _a;\r\n        return {\r\n            value: value,\r\n        };\r\n    };\r\n    SearchStateBase.prototype.render = function () {\r\n        var value = this.state.value;\r\n        var filterExpressionComputed = function (_a) {\r\n            var filterExpression = _a.filterExpression, columns = _a.columns;\r\n            return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.searchFilterExpression)(value, columns, filterExpression);\r\n        };\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"SearchState\" },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"filterExpression\", computed: filterExpressionComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"searchValue\", value: value }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"changeSearchValue\", action: this.changeValue })));\r\n    };\r\n    SearchStateBase.defaultProps = {\r\n        defaultValue: '',\r\n    };\r\n    return SearchStateBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n/** A plugin that manages the search state. */\r\nvar SearchState = SearchStateBase;\n\nvar pluginDependencies$i = [\r\n    { name: 'Toolbar' },\r\n    { name: 'SearchState' },\r\n];\r\nvar defaultMessages$7 = {\r\n    searchPlaceholder: 'Search...',\r\n};\r\nvar SearchPanelBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(SearchPanelBase, _super);\r\n    function SearchPanelBase() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SearchPanelBase.prototype.render = function () {\r\n        var _a = this.props, Input = _a.inputComponent, messages = _a.messages;\r\n        var getMessage = (0,_devexpress_dx_core__WEBPACK_IMPORTED_MODULE_3__.getMessagesFormatter)(__assign(__assign({}, defaultMessages$7), messages));\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"SearchPanel\", dependencies: pluginDependencies$i },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"toolbarContent\" },\r\n                (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplatePlaceholder, null),\r\n                (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplateConnector, null, function (_a, _b) {\r\n                    var searchValue = _a.searchValue, isDataRemote = _a.isDataRemote;\r\n                    var changeSearchValue = _b.changeSearchValue, scrollToRow = _b.scrollToRow;\r\n                    var onValueChange = function (value) {\r\n                        if (isDataRemote) {\r\n                            scrollToRow(_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.TOP_POSITION);\r\n                        }\r\n                        changeSearchValue(value);\r\n                    };\r\n                    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Input, { value: searchValue, onValueChange: onValueChange, getMessage: getMessage });\r\n                }))));\r\n    };\r\n    SearchPanelBase.defaultProps = {\r\n        messages: {},\r\n    };\r\n    SearchPanelBase.components = {\r\n        inputComponent: 'Input',\r\n    };\r\n    return SearchPanelBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n/** A plugin that renders the Search Panel. */\r\nvar SearchPanel = SearchPanelBase;\n\nvar tableHeaderRowsComputed$2 = function (_a) {\r\n    var tableHeaderRows = _a.tableHeaderRows;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.tableHeaderRowsWithFixed)(tableHeaderRows);\r\n};\r\nvar tableHeaderColumnChainsComputed = function (_a) {\r\n    var tableColumns = _a.tableColumns, tableHeaderRows = _a.tableHeaderRows, tableHeaderColumnChains = _a.tableHeaderColumnChains;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.tableHeaderColumnChainsWithFixed)(tableHeaderColumnChains, tableHeaderRows, tableColumns);\r\n};\r\nvar CellPlaceholder$2 = function (props) { return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplatePlaceholder, { params: props }); };\r\nvar pluginDependencies$j = [\r\n    { name: 'Table' },\r\n    { name: 'TableBandHeader', optional: true },\r\n    { name: 'TableColumnReordering', optional: true },\r\n    { name: 'TableEditColumn', optional: true },\r\n    { name: 'TableEditRow', optional: true },\r\n    { name: 'TableFilterRow', optional: true },\r\n    { name: 'TableGroupRow', optional: true },\r\n    { name: 'TableHeaderRow', optional: true },\r\n    { name: 'TableRowDetail', optional: true },\r\n    { name: 'TableSelection', optional: true },\r\n    { name: 'TableSummaryRow', optional: true },\r\n    { name: 'TableTreeColumn', optional: true },\r\n];\r\n// tslint:disable-next-line: max-line-length\r\nvar TableFixedColumnsBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(TableFixedColumnsBase, _super);\r\n    function TableFixedColumnsBase(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.state = {\r\n            tableColumnDimensions: {},\r\n        };\r\n        return _this;\r\n    }\r\n    TableFixedColumnsBase.prototype.handleListenerSizeChange = function (key, width) {\r\n        var tableColumnDimensions = this.state.tableColumnDimensions;\r\n        if (tableColumnDimensions[key] !== width) {\r\n            this.setState(function (state) {\r\n                var _a;\r\n                return ({\r\n                    tableColumnDimensions: __assign(__assign({}, state.tableColumnDimensions), (_a = {}, _a[key] = width, _a)),\r\n                });\r\n            });\r\n        }\r\n    };\r\n    TableFixedColumnsBase.prototype.render = function () {\r\n        var _this = this;\r\n        var _a = this.props, Cell = _a.cellComponent, ListenerRow = _a.listenerRowComponent, ListenerCell = _a.listenerCellComponent;\r\n        var leftColumns = this.props.leftColumns;\r\n        var rightColumns = this.props.rightColumns;\r\n        var tableColumnsComputed = function (_a) {\r\n            var tableColumns = _a.tableColumns;\r\n            return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.tableColumnsWithFixed)(tableColumns, leftColumns, rightColumns);\r\n        };\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"TableFixedColumns\", dependencies: pluginDependencies$j },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"tableHeaderRows\", computed: tableHeaderRowsComputed$2 }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"tableColumns\", computed: tableColumnsComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"tableHeaderColumnChains\", computed: tableHeaderColumnChainsComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableCell\", predicate: function (_a) {\r\n                    var tableColumn = _a.tableColumn;\r\n                    return !!tableColumn.fixed;\r\n                } }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplateConnector, null, function (_a) {\r\n                var tableColumns = _a.tableColumns, tableHeaderColumnChains = _a.tableHeaderColumnChains, selection = _a.selection, highlightSelectedRow = _a.highlightSelectedRow;\r\n                var selected = (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isRowHighlighted)(highlightSelectedRow, selection, params.tableRow);\r\n                var tableColumnDimensions = _this.state.tableColumnDimensions;\r\n                var fixedColumnProps = (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.calculateFixedColumnProps)(params, { leftColumns: leftColumns, rightColumns: rightColumns }, tableColumns, tableColumnDimensions, tableHeaderColumnChains);\r\n                return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Cell, __assign({}, params, fixedColumnProps, { component: CellPlaceholder$2, selected: selected })));\r\n            })); }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableRow\", predicate: function (_a) {\r\n                    var tableRow = _a.tableRow;\r\n                    return !!(0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isFixedTableRow)(tableRow);\r\n                } }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(ListenerRow, __assign({}, params))); }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableCell\", predicate: function (_a) {\r\n                    var tableRow = _a.tableRow;\r\n                    return !!(0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isFixedTableRow)(tableRow);\r\n                } }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(ListenerCell, __assign({}, params, { listen: !!params.tableColumn.fixed, onSizeChange: function (_a) {\r\n                    var width = _a.width;\r\n                    return _this.handleListenerSizeChange(params.tableColumn.key, width);\r\n                } }))); })));\r\n    };\r\n    TableFixedColumnsBase.components = {\r\n        cellComponent: 'Cell',\r\n        listenerRowComponent: 'ListenerRow',\r\n        listenerCellComponent: 'ListenerCell',\r\n    };\r\n    TableFixedColumnsBase.defaultProps = {\r\n        leftColumns: [],\r\n        rightColumns: [],\r\n    };\r\n    return TableFixedColumnsBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n/** A plugin that enables you to fix columns to the left and right sides of the grid. */\r\nvar TableFixedColumns = TableFixedColumnsBase;\n\nvar groupSummaryItemsComputed = function (_a) {\r\n    var groupSummaryItems = _a.groupSummaryItems;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.prepareGroupSummaryItems)(groupSummaryItems);\r\n};\r\nvar SummaryStateBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(SummaryStateBase, _super);\r\n    function SummaryStateBase() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SummaryStateBase.prototype.render = function () {\r\n        var _a = this.props, totalItems = _a.totalItems, groupItems = _a.groupItems, treeItems = _a.treeItems;\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"SummaryState\" },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"totalSummaryItems\", value: totalItems }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"groupSummaryItems\", value: groupItems }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"groupSummaryItems\", computed: groupSummaryItemsComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"treeSummaryItems\", value: treeItems })));\r\n    };\r\n    SummaryStateBase.defaultProps = {\r\n        totalItems: [],\r\n        groupItems: [],\r\n        treeItems: [],\r\n    };\r\n    return SummaryStateBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n/** A plugin that provides items for total, group, and tree summaries. */\r\nvar SummaryState = SummaryStateBase;\n\nvar pluginDependencies$k = [\r\n    { name: 'SummaryState' },\r\n    { name: 'IntegratedGrouping', optional: true },\r\n];\r\nvar IntegratedSummaryBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(IntegratedSummaryBase, _super);\r\n    function IntegratedSummaryBase() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    IntegratedSummaryBase.prototype.render = function () {\r\n        var calculator = this.props.calculator;\r\n        var totalSummaryValuesComputed = function (_a) {\r\n            var rows = _a.rows, totalSummaryItems = _a.totalSummaryItems, getCellValue = _a.getCellValue, getRowLevelKey = _a.getRowLevelKey, isGroupRow = _a.isGroupRow, getCollapsedRows = _a.getCollapsedRows;\r\n            return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.totalSummaryValues)(rows, totalSummaryItems, getCellValue, getRowLevelKey, isGroupRow, getCollapsedRows, calculator);\r\n        };\r\n        var groupSummaryValuesComputed = function (_a) {\r\n            var rows = _a.rows, groupSummaryItems = _a.groupSummaryItems, getCellValue = _a.getCellValue, getRowLevelKey = _a.getRowLevelKey, isGroupRow = _a.isGroupRow, getCollapsedRows = _a.getCollapsedRows;\r\n            return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.groupSummaryValues)(rows, groupSummaryItems, getCellValue, getRowLevelKey, isGroupRow, getCollapsedRows, calculator);\r\n        };\r\n        var treeSummaryValuesComputed = function (_a) {\r\n            var rows = _a.rows, treeSummaryItems = _a.treeSummaryItems, getCellValue = _a.getCellValue, getRowLevelKey = _a.getRowLevelKey, isGroupRow = _a.isGroupRow, getRowId = _a.getRowId;\r\n            return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.treeSummaryValues)(rows, treeSummaryItems, getCellValue, getRowLevelKey, isGroupRow, getRowId, calculator);\r\n        };\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"IntegratedSummary\", dependencies: pluginDependencies$k },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"totalSummaryValues\", computed: totalSummaryValuesComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"groupSummaryValues\", computed: groupSummaryValuesComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"treeSummaryValues\", computed: treeSummaryValuesComputed })));\r\n    };\r\n    IntegratedSummaryBase.defaultCalculator = _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.defaultSummaryCalculator;\r\n    return IntegratedSummaryBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n/** A plugin that performs a built-in data summary calculation. */\r\nvar IntegratedSummary = IntegratedSummaryBase;\n\nvar pluginDependencies$l = [\r\n    { name: 'SummaryState' },\r\n];\r\nvar CustomSummaryBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(CustomSummaryBase, _super);\r\n    function CustomSummaryBase() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    CustomSummaryBase.prototype.render = function () {\r\n        var _a = this.props, totalValues = _a.totalValues, groupValues = _a.groupValues, treeValues = _a.treeValues;\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"CustomSummary\", dependencies: pluginDependencies$l },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"totalSummaryValues\", value: totalValues }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"groupSummaryValues\", value: groupValues }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"treeSummaryValues\", value: treeValues })));\r\n    };\r\n    return CustomSummaryBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n/** A plugin that allows you to calculate a custom summary. */\r\nvar CustomSummary = CustomSummaryBase;\n\nvar dependencies$1 = [\r\n    { name: 'DataTypeProvider', optional: true },\r\n    { name: 'SummaryState' },\r\n    { name: 'CustomSummary', optional: true },\r\n    { name: 'IntegratedSummary', optional: true },\r\n    { name: 'Table' },\r\n    { name: 'TableTreeColumn', optional: true },\r\n];\r\nvar tableBodyRowsComputed$2 = function (_a) {\r\n    var tableBodyRows = _a.tableBodyRows, getRowLevelKey = _a.getRowLevelKey, isGroupRow = _a.isGroupRow, getRowId = _a.getRowId, groupSummaryItems = _a.groupSummaryItems, treeSummaryItems = _a.treeSummaryItems;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.tableRowsWithSummaries)(tableBodyRows, groupSummaryItems, treeSummaryItems, getRowLevelKey, isGroupRow, getRowId);\r\n};\r\nvar tableFooterRowsComputed = function (_a) {\r\n    var tableFooterRows = _a.tableFooterRows, totalSummaryItems = _a.totalSummaryItems;\r\n    return totalSummaryItems.length\r\n        ? (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.tableRowsWithTotalSummaries)(tableFooterRows)\r\n        : tableFooterRows;\r\n};\r\nvar TableSummaryRowBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(TableSummaryRowBase, _super);\r\n    function TableSummaryRowBase() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TableSummaryRowBase.prototype.renderContent = function (column, columnSummaries) {\r\n        var _a = this.props, formatlessSummaryTypes = _a.formatlessSummaryTypes, Item = _a.itemComponent, messages = _a.messages;\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(TableSummaryContent, { column: column, columnSummaries: columnSummaries, formatlessSummaryTypes: formatlessSummaryTypes, itemComponent: Item, messages: messages }));\r\n    };\r\n    TableSummaryRowBase.prototype.render = function () {\r\n        var _this = this;\r\n        var _a = this.props, TotalRow = _a.totalRowComponent, GroupRow = _a.groupRowComponent, TreeRow = _a.treeRowComponent, TotalCell = _a.totalCellComponent, GroupCell = _a.groupCellComponent, TreeCell = _a.treeCellComponent, TreeColumnCell = _a.treeColumnCellComponent, TreeColumnContent = _a.treeColumnContentComponent, TreeColumnIndent = _a.treeColumnIndentComponent;\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"TableSummaryRow\", dependencies: dependencies$1 },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"tableBodyRows\", computed: tableBodyRowsComputed$2 }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"tableFooterRows\", computed: tableFooterRowsComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableCell\", predicate: function (_a) {\r\n                    var tableRow = _a.tableRow, tableColumn = _a.tableColumn;\r\n                    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isTotalSummaryTableCell)(tableRow, tableColumn);\r\n                } }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplateConnector, null, function (_a) {\r\n                var totalSummaryItems = _a.totalSummaryItems, totalSummaryValues = _a.totalSummaryValues;\r\n                var columnSummaries = (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.getColumnSummaries)(totalSummaryItems, params.tableColumn.column.name, totalSummaryValues);\r\n                return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(TotalCell, __assign({}, params, { column: params.tableColumn.column }), _this.renderContent(params.tableColumn.column, columnSummaries)));\r\n            })); }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableCell\", predicate: function (_a) {\r\n                    var tableRow = _a.tableRow, tableColumn = _a.tableColumn;\r\n                    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isGroupSummaryTableCell)(tableRow, tableColumn);\r\n                } }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplateConnector, null, function (_a) {\r\n                var groupSummaryItems = _a.groupSummaryItems, groupSummaryValues = _a.groupSummaryValues;\r\n                var columnSummaries = (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.getColumnSummaries)(groupSummaryItems, params.tableColumn.column.name, groupSummaryValues[params.tableRow.row.compoundKey], function (summaryItem) { return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isFooterSummary)(summaryItem); });\r\n                return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(GroupCell, __assign({}, params, { column: params.tableColumn.column }), _this.renderContent(params.tableColumn.column, columnSummaries)));\r\n            })); }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableCell\", predicate: function (_a) {\r\n                    var tableRow = _a.tableRow, tableColumn = _a.tableColumn;\r\n                    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isTreeSummaryTableCell)(tableRow, tableColumn);\r\n                } }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplateConnector, null, function (_a) {\r\n                var treeSummaryItems = _a.treeSummaryItems, treeSummaryValues = _a.treeSummaryValues, tableTreeColumnName = _a.tableTreeColumnName, getRowId = _a.getRowId, getTreeRowLevel = _a.getTreeRowLevel;\r\n                var columnSummaries = (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.getColumnSummaries)(treeSummaryItems, params.tableColumn.column.name, treeSummaryValues[getRowId(params.tableRow.row)]);\r\n                if (tableTreeColumnName === params.tableColumn.column.name) {\r\n                    return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(TreeColumnCell, __assign({}, params, { column: params.tableColumn.column }),\r\n                        (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(TreeColumnIndent, { level: getTreeRowLevel(params.tableRow.row) }),\r\n                        (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(TreeColumnContent, null, _this.renderContent(params.tableColumn.column, columnSummaries))));\r\n                }\r\n                return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(TreeCell, __assign({}, params, { column: params.tableColumn.column }), _this.renderContent(params.tableColumn.column, columnSummaries)));\r\n            })); }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableRow\", predicate: function (_a) {\r\n                    var tableRow = _a.tableRow;\r\n                    return !!(0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isTotalSummaryTableRow)(tableRow);\r\n                } }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(TotalRow, __assign({}, params))); }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableRow\", predicate: function (_a) {\r\n                    var tableRow = _a.tableRow;\r\n                    return !!(0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isGroupSummaryTableRow)(tableRow);\r\n                } }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(GroupRow, __assign({}, params))); }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableRow\", predicate: function (_a) {\r\n                    var tableRow = _a.tableRow;\r\n                    return !!(0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isTreeSummaryTableRow)(tableRow);\r\n                } }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(TreeRow, __assign({}, params))); })));\r\n    };\r\n    TableSummaryRowBase.TREE_ROW_TYPE = _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.TABLE_TREE_SUMMARY_TYPE;\r\n    TableSummaryRowBase.GROUP_ROW_TYPE = _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.TABLE_GROUP_SUMMARY_TYPE;\r\n    TableSummaryRowBase.TOTAL_ROW_TYPE = _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.TABLE_TOTAL_SUMMARY_TYPE;\r\n    TableSummaryRowBase.defaultProps = {\r\n        formatlessSummaryTypes: [],\r\n        messages: {},\r\n    };\r\n    TableSummaryRowBase.components = {\r\n        totalRowComponent: 'TotalRow',\r\n        groupRowComponent: 'GroupRow',\r\n        treeRowComponent: 'TreeRow',\r\n        totalCellComponent: 'TotalCell',\r\n        groupCellComponent: 'GroupCell',\r\n        treeCellComponent: 'TreeCell',\r\n        treeColumnCellComponent: 'TableTreeCell',\r\n        treeColumnContentComponent: 'TableTreeContent',\r\n        treeColumnIndentComponent: 'TableTreeIndent',\r\n        itemComponent: 'Item',\r\n    };\r\n    return TableSummaryRowBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n/** A plugin that renders table rows that display a total, group, and tree summary. */\r\nvar TableSummaryRow = TableSummaryRowBase;\n\nvar virtualRowsComputed = function (_a) {\r\n    var skip = _a.skip, rows = _a.rows, virtualRowsCache = _a.virtualRowsCache;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.virtualRowsWithCache)(skip, rows, virtualRowsCache);\r\n};\r\nvar rowsComputed = function (_a) {\r\n    var virtualRows = _a.virtualRows, availableRowCount = _a.availableRowCount;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.plainRows)(virtualRows, availableRowCount);\r\n};\r\nvar loadedRowsStartComputed = function (_a) {\r\n    var virtualRows = _a.virtualRows;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.loadedRowsStart)(virtualRows);\r\n};\r\n// tslint:disable-next-line: max-line-length\r\nvar VirtualTableStateBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(VirtualTableStateBase, _super);\r\n    function VirtualTableStateBase(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.requestTimer = 0;\r\n        _this.setViewport = function (viewport, _a, _b) {\r\n            var virtualRows = _a.virtualRows;\r\n            var requestNextPage = _b.requestNextPage;\r\n            var pageSize = _this.props.pageSize;\r\n            var referenceIndex = (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.getReferenceIndex)(viewport);\r\n            if ((0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.needFetchMorePages)(virtualRows, referenceIndex, pageSize)) {\r\n                requestNextPage({ referenceIndex: referenceIndex });\r\n            }\r\n        };\r\n        _this.requestNextPageAction = function (_a, _b) {\r\n            var referenceIndex = _a.referenceIndex, forceReload = _a.forceReload;\r\n            var virtualRows = _b.virtualRows;\r\n            var _c = _this.props, pageSize = _c.pageSize, totalRowCount = _c.totalRowCount, infiniteScrolling = _c.infiniteScrolling;\r\n            var requestedStartIndex = _this.state.requestedStartIndex;\r\n            var actualVirtualRows = forceReload ? _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.emptyVirtualRows : virtualRows;\r\n            var _d = (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.getRequestMeta)(referenceIndex, virtualRows, pageSize, totalRowCount, forceReload, infiniteScrolling), requestedRange = _d.requestedRange, actualBounds = _d.actualBounds;\r\n            if (forceReload || (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.shouldSendRequest)(requestedRange, requestedStartIndex)) {\r\n                _this.requestNextPage(requestedRange, actualVirtualRows, actualBounds);\r\n            }\r\n        };\r\n        _this.clearRowsCacheAction = function (_, __, _a) {\r\n            var requestNextPage = _a.requestNextPage;\r\n            _this.setState({\r\n                virtualRowsCache: _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.emptyVirtualRows,\r\n            });\r\n            requestNextPage({ forceReload: true });\r\n        };\r\n        _this.resetVirtualTablePosition = function () { return _this.requestFirstPage(); };\r\n        _this.state = {\r\n            virtualRowsCache: _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.emptyVirtualRows,\r\n            requestedStartIndex: -1,\r\n            availableRowCount: props.totalRowCount || 0,\r\n        };\r\n        return _this;\r\n    }\r\n    VirtualTableStateBase.prototype.requestNextPage = function (requestedRange, virtualRows, actualBounds) {\r\n        var _this = this;\r\n        var _a = this.props, getRows = _a.getRows, infiniteScrolling = _a.infiniteScrolling, totalRowCount = _a.totalRowCount;\r\n        var stateAvailableCount = this.state.availableRowCount;\r\n        if (this.requestTimer !== 0) {\r\n            clearTimeout(this.requestTimer);\r\n        }\r\n        this.requestTimer = window.setTimeout(function () {\r\n            var requestedStartIndex = requestedRange.start, end = requestedRange.end;\r\n            var loadCount = end - requestedStartIndex;\r\n            var virtualRowsCache = (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.trimRowsToInterval)(virtualRows, actualBounds);\r\n            var availableRowCount = (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.getAvailableRowCount)(infiniteScrolling, actualBounds.end, stateAvailableCount, totalRowCount);\r\n            getRows(requestedStartIndex, loadCount);\r\n            _this.setState({\r\n                virtualRowsCache: virtualRowsCache,\r\n                availableRowCount: availableRowCount,\r\n                requestedStartIndex: requestedStartIndex,\r\n            });\r\n        }, 50);\r\n    };\r\n    VirtualTableStateBase.prototype.requestFirstPage = function () {\r\n        var _this = this;\r\n        var _a = this.props, getRows = _a.getRows, pageSize = _a.pageSize;\r\n        if (this.requestTimer !== 0) {\r\n            clearTimeout(this.requestTimer);\r\n        }\r\n        this.requestTimer = window.setTimeout(function () {\r\n            getRows(0, 2 * pageSize);\r\n            _this.setState({\r\n                virtualRowsCache: _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.emptyVirtualRows,\r\n                requestedStartIndex: 0,\r\n            });\r\n        }, 50);\r\n    };\r\n    VirtualTableStateBase.getDerivedStateFromProps = function (nextProps, prevState) {\r\n        var _a = nextProps.availableRowCount, prevAvailableRowCount = _a === void 0 ? prevState.availableRowCount : _a, totalRowCount = nextProps.totalRowCount, pageSize = nextProps.pageSize, infiniteScrolling = nextProps.infiniteScrolling;\r\n        var prevRequestedStartIndex = prevState.requestedStartIndex, prevVirtualRowCache = prevState.virtualRowsCache;\r\n        var availableRowCount = (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.getAvailableRowCount)(infiniteScrolling, pageSize * 2, prevAvailableRowCount, totalRowCount);\r\n        var requestedStartIndex = Math.max(Math.min(prevRequestedStartIndex, availableRowCount - pageSize), 0);\r\n        var virtualRowsCache = prevRequestedStartIndex === requestedStartIndex\r\n            ? prevVirtualRowCache\r\n            : _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.emptyVirtualRows;\r\n        return {\r\n            availableRowCount: availableRowCount,\r\n            requestedStartIndex: requestedStartIndex,\r\n            virtualRowsCache: virtualRowsCache,\r\n        };\r\n    };\r\n    VirtualTableStateBase.prototype.componentDidMount = function () {\r\n        var _a = this.props, getRows = _a.getRows, pageSize = _a.pageSize, infiniteScrolling = _a.infiniteScrolling, totalRowCount = _a.totalRowCount;\r\n        getRows(0, 2 * pageSize);\r\n        var newRowCount = infiniteScrolling ? 2 * pageSize : totalRowCount;\r\n        this.setState({\r\n            availableRowCount: newRowCount,\r\n        });\r\n    };\r\n    VirtualTableStateBase.prototype.componentWillUnmount = function () {\r\n        if (this.requestTimer !== 0) {\r\n            window.clearTimeout(this.requestTimer);\r\n        }\r\n    };\r\n    VirtualTableStateBase.prototype.render = function () {\r\n        var _a = this.state, virtualRowsCache = _a.virtualRowsCache, availableRowCount = _a.availableRowCount;\r\n        var _b = this.props, skip = _b.skip, pageSize = _b.pageSize, loading = _b.loading, infiniteScrolling = _b.infiniteScrolling;\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"VirtualTableState\" },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"isDataRemote\", value: true }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"isDataLoading\", value: loading }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"isScrollingInfinite\", value: infiniteScrolling }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"skip\", value: skip }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"virtualRowsCache\", value: virtualRowsCache }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"pageSize\", value: pageSize }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"availableRowCount\", value: availableRowCount }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"virtualRows\", computed: virtualRowsComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"rows\", computed: rowsComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"loadedRowsStart\", computed: loadedRowsStartComputed }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"requestNextPage\", action: this.requestNextPageAction }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"setViewport\", action: this.setViewport }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"clearRowCache\", action: this.clearRowsCacheAction }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"changeColumnSorting\", action: this.clearRowsCacheAction }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"changeColumnFilter\", action: this.resetVirtualTablePosition }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"changeSearchValue\", action: this.resetVirtualTablePosition }),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"changeColumnGrouping\", action: this.resetVirtualTablePosition })));\r\n    };\r\n    VirtualTableStateBase.defaultProps = {\r\n        pageSize: 100,\r\n    };\r\n    return VirtualTableStateBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\nvar VirtualTableState = VirtualTableStateBase;\n\nvar pluginDependencies$m = [\r\n    { name: 'EditingState' },\r\n    { name: 'Table' },\r\n    { name: 'DataTypeProvider', optional: true },\r\n];\r\nvar rowsWithEditingCellsComputed = function (_a) {\r\n    var tableBodyRows = _a.tableBodyRows, editingCells = _a.editingCells;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.rowsWithEditingCells)(tableBodyRows, editingCells);\r\n};\r\nvar columnsWithEditingCellsComputed = function (_a) {\r\n    var tableColumns = _a.tableColumns, editingCells = _a.editingCells;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.columnsWithEditingCells)(tableColumns, editingCells);\r\n};\r\n/* tslint:disable-next-line max-line-length*/\r\nvar INLINE_CELL_EDITING_ERROR = 'The startEditAction property of the InlineCellEditing plugin is given an invalid value.';\r\n// tslint:disable-next-line: max-line-length\r\nvar TableInlineCellEditingBase = function (props) {\r\n    var EditCell = props.cellComponent, startEditAction = props.startEditAction, selectTextOnEditStart = props.selectTextOnEditStart;\r\n    return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"TableInlineCellEditing\", dependencies: pluginDependencies$m },\r\n        (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"tableBodyRows\", computed: rowsWithEditingCellsComputed }),\r\n        (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"tableColumns\", computed: columnsWithEditingCellsComputed }),\r\n        (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableCell\", predicate: function (_a) {\r\n                var tableRow = _a.tableRow, tableColumn = _a.tableColumn;\r\n                return tableRow.type === _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.TABLE_DATA_TYPE &&\r\n                    tableColumn.type === _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.TABLE_DATA_TYPE;\r\n            } }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplateConnector, null, function (_a, _b) {\r\n            var _c;\r\n            var startEditCells = _b.startEditCells;\r\n            var rowId = params.tableRow.rowId, column = params.tableColumn.column;\r\n            var columnName = column.name;\r\n            if (startEditAction !== 'click' && startEditAction !== 'doubleClick') {\r\n                throw new Error(INLINE_CELL_EDITING_ERROR);\r\n            }\r\n            var startEditCellCallback = function () {\r\n                return startEditCells({\r\n                    editingCells: [{ rowId: rowId, columnName: columnName }],\r\n                });\r\n            };\r\n            var eventName = startEditAction === 'click' ? 'onClick' : 'onDoubleClick';\r\n            var newParams = __assign(__assign({}, params), (_c = {}, _c[eventName] = startEditCellCallback, _c));\r\n            return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplatePlaceholder, { params: newParams });\r\n        })); }),\r\n        (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableCell\", predicate: function (_a) {\r\n                var tableRow = _a.tableRow, tableColumn = _a.tableColumn;\r\n                return tableRow.hasEditCell && tableColumn.hasEditCell;\r\n            } }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplateConnector, null, function (_a, _b) {\r\n            var getCellValue = _a.getCellValue, createRowChange = _a.createRowChange, rowChanges = _a.rowChanges, isColumnEditingEnabled = _a.isColumnEditingEnabled;\r\n            var changeRow = _b.changeRow, stopEditCells = _b.stopEditCells, commitChangedRows = _b.commitChangedRows, cancelChangedRows = _b.cancelChangedRows;\r\n            var _c = params.tableRow, rowId = _c.rowId, row = _c.row, column = params.tableColumn.column;\r\n            var columnName = column.name;\r\n            var changedRow = __assign(__assign({}, row), (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.getRowChange)(rowChanges, rowId));\r\n            var value = getCellValue(changedRow, columnName);\r\n            var onValueChange = function (newValue) {\r\n                var changeArgs = {\r\n                    rowId: rowId,\r\n                    change: createRowChange(changedRow, newValue, columnName),\r\n                };\r\n                changeRow(changeArgs);\r\n            };\r\n            var onKeyDown = function (_a) {\r\n                var key = _a.key;\r\n                if (key === 'Enter') {\r\n                    commitChangedRows({ rowIds: [rowId] });\r\n                    stopEditCells({ editingCells: [{ rowId: rowId, columnName: columnName }] });\r\n                }\r\n                else if (key === 'Escape') {\r\n                    cancelChangedRows({ rowIds: [rowId] });\r\n                    stopEditCells({ editingCells: [{ rowId: rowId, columnName: columnName }] });\r\n                }\r\n            };\r\n            var onBlur = function () {\r\n                commitChangedRows({ rowIds: [rowId] });\r\n                stopEditCells({ editingCells: [{ rowId: rowId, columnName: columnName }] });\r\n            };\r\n            var onFocus = selectTextOnEditStart ? function (e) { return e.target.select(); } : function () { };\r\n            var editingEnabled = isColumnEditingEnabled(columnName);\r\n            return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplatePlaceholder, { name: \"valueEditor\", params: {\r\n                    column: column,\r\n                    row: row,\r\n                    value: value,\r\n                    onValueChange: onValueChange,\r\n                    disabled: !editingEnabled,\r\n                } }, function (content) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(EditCell, __assign({}, params, { row: row, column: column, value: value, editingEnabled: editingEnabled, onValueChange: onValueChange, autoFocus: true, onKeyDown: onKeyDown, onBlur: onBlur, onFocus: onFocus }), content)); }));\r\n        })); })));\r\n};\r\nTableInlineCellEditingBase.components = {\r\n    cellComponent: 'Cell',\r\n};\r\nTableInlineCellEditingBase.defaultProps = {\r\n    startEditAction: 'click',\r\n    selectTextOnEditStart: false,\r\n};\r\n// tslint:disable-next-line: max-line-length\r\nvar TableInlineCellEditing = TableInlineCellEditingBase;\n\nvar defaultMessages$8 = {\r\n    showExportMenu: 'Export',\r\n    exportAll: 'Export all data',\r\n    exportSelected: 'Export selected rows',\r\n};\r\nvar ExportPanelBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(ExportPanelBase, _super);\r\n    function ExportPanelBase() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.state = { visible: false };\r\n        _this.setButtonRef = function (button) { return _this.button = button; };\r\n        _this.handleToggle = function () {\r\n            var visible = _this.state.visible;\r\n            _this.setState({ visible: !visible });\r\n        };\r\n        _this.handleHide = function () { return _this.setState({ visible: false }); };\r\n        return _this;\r\n    }\r\n    ExportPanelBase.prototype.render = function () {\r\n        var _this = this;\r\n        var _a = this.props, ToggleButton = _a.toggleButtonComponent, Menu = _a.menuComponent, MenuItem = _a.menuItemComponent, messages = _a.messages, startExport = _a.startExport;\r\n        var visible = this.state.visible;\r\n        var getMessage = (0,_devexpress_dx_core__WEBPACK_IMPORTED_MODULE_3__.getMessagesFormatter)(__assign(__assign({}, defaultMessages$8), messages));\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"ExportPanel\", dependencies: [\r\n                { name: 'SelectionState', optional: true },\r\n                { name: 'Toolbar' },\r\n            ] },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"toolbarContent\" },\r\n                (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplatePlaceholder, null),\r\n                (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplateConnector, null, function (_a) {\r\n                    var selection = _a.selection;\r\n                    return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,\r\n                        (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(ToggleButton, { buttonRef: _this.setButtonRef, onToggle: _this.handleToggle, getMessage: getMessage }),\r\n                        (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Menu, { visible: visible, onHide: _this.handleHide, target: _this.button },\r\n                            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(MenuItem, { key: \"exportAll\", text: getMessage('exportAll'), onClick: function () {\r\n                                    _this.handleHide();\r\n                                    startExport();\r\n                                } }),\r\n                            (selection === null || selection === void 0 ? void 0 : selection.length) ? ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(MenuItem, { key: \"exportSelected\", text: getMessage('exportSelected'), onClick: function () {\r\n                                    _this.handleHide();\r\n                                    startExport({ selectedOnly: true });\r\n                                } })) : null)));\r\n                }))));\r\n    };\r\n    ExportPanelBase.components = {\r\n        toggleButtonComponent: 'ToggleButton',\r\n        menuComponent: 'Menu',\r\n        menuItemComponent: 'MenuItem',\r\n    };\r\n    return ExportPanelBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\nvar ExportPanel = ExportPanelBase;\n\nvar getRowStyle = function (_a) {\r\n    var row = _a.row;\r\n    return (row.height !== undefined\r\n        ? ({ height: row.height + \"px\" })\r\n        : undefined);\r\n};\r\nvar isNumber = function (value) {\r\n    return typeof value === 'number' || !Number.isNaN(Number(value));\r\n};\n\n/* globals requestAnimationFrame cancelAnimationFrame */\r\nvar TableLayoutBase = /*#__PURE__*/ (function (_super) {\r\n    __extends(TableLayoutBase, _super);\r\n    function TableLayoutBase(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.savedOffsetWidth = -1;\r\n        _this.raf = -1;\r\n        _this.state = {\r\n            animationState: new Map(),\r\n        };\r\n        _this.animations = new Map();\r\n        _this.savedScrollWidth = {};\r\n        _this.tableRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.createRef)();\r\n        return _this;\r\n    }\r\n    TableLayoutBase.prototype.componentDidUpdate = function (prevProps) {\r\n        var columns = this.props.columns;\r\n        var prevColumns = prevProps.columns;\r\n        var animationState = this.state.animationState;\r\n        var activeAnimationExists = !(0,_devexpress_dx_core__WEBPACK_IMPORTED_MODULE_3__.shallowEqual)(columns, prevColumns)\r\n            || !!animationState.size || !!this.animations.size;\r\n        // NOTE: animation should be recomputed only when columns are changed or\r\n        // an active animation is in progress. Otherwise it will be recalculated on\r\n        // each scroll event.\r\n        if (activeAnimationExists) {\r\n            this.processAnimation(prevColumns);\r\n        }\r\n    };\r\n    TableLayoutBase.prototype.processAnimation = function (prevColumns) {\r\n        var columns = this.props.columns;\r\n        var tableWidth = this.getTableWidth(prevColumns, columns);\r\n        this.animations = (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.getAnimations)(prevColumns, columns, tableWidth, this.animations);\r\n        cancelAnimationFrame(this.raf);\r\n        this.raf = requestAnimationFrame(this.processAnimationFrame.bind(this));\r\n    };\r\n    TableLayoutBase.prototype.getTableWidth = function (prevColumns, columns) {\r\n        var _a = this.tableRef.current, offsetWidth = _a.offsetWidth, scrollWidth = _a.scrollWidth;\r\n        var animationState = this.state.animationState;\r\n        var widthChanged = this.savedOffsetWidth !== offsetWidth\r\n            || !this.savedScrollWidth[columns.length];\r\n        var columnCountChanged = columns.length !== prevColumns.length;\r\n        if (columnCountChanged || (widthChanged && !animationState.size)) {\r\n            this.savedScrollWidth = {};\r\n            this.savedScrollWidth[columns.length] = scrollWidth;\r\n            this.savedOffsetWidth = offsetWidth;\r\n        }\r\n        return this.savedScrollWidth[columns.length];\r\n    };\r\n    TableLayoutBase.prototype.getColumns = function () {\r\n        var columns = this.props.columns;\r\n        var animationState = this.state.animationState;\r\n        var result = columns;\r\n        var isFixedWidth = columns\r\n            .filter(function (column) { return column.width === undefined || column.width === 'auto'; })\r\n            .length === 0;\r\n        if (isFixedWidth) {\r\n            // presumably a flex column added here instead of in a getter in the Table plugin\r\n            // to make sure that all manipulations on taleColumns have already done earlier\r\n            result = __spread(result, [{ key: _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.TABLE_FLEX_TYPE.toString(), type: _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.TABLE_FLEX_TYPE }]);\r\n        }\r\n        if (animationState.size) {\r\n            result = result\r\n                .map(function (column) { return (animationState.has(column.key)\r\n                ? __assign(__assign({}, column), { animationState: animationState.get(column.key) }) : column); });\r\n        }\r\n        return result;\r\n    };\r\n    TableLayoutBase.prototype.processAnimationFrame = function () {\r\n        var animationComponentState = this.state.animationState;\r\n        this.animations = (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.filterActiveAnimations)(this.animations);\r\n        if (!this.animations.size) {\r\n            if (animationComponentState.size) {\r\n                this.setState({ animationState: new Map() });\r\n            }\r\n            return;\r\n        }\r\n        var animationState = (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.evalAnimations)(this.animations);\r\n        this.setState({ animationState: animationState });\r\n    };\r\n    TableLayoutBase.prototype.render = function () {\r\n        var _a = this.props, Layout = _a.layoutComponent, minColumnWidth = _a.minColumnWidth, restProps = __rest(_a, [\"layoutComponent\", \"minColumnWidth\"]);\r\n        var columns = this.getColumns();\r\n        var minWidth = columns\r\n            .map(function (column) { return column.width || (column.type === _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.TABLE_FLEX_TYPE ? 0 : minColumnWidth); })\r\n            .filter(function (value) { return value !== 'auto' && value !== 0; })\r\n            .map(function (value) { return isNumber(value) ? value + \"px\" : value; })\r\n            .join(' + ');\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Layout, __assign({}, restProps, { tableRef: this.tableRef, columns: columns, minWidth: minWidth, minColumnWidth: minColumnWidth })));\r\n    };\r\n    return TableLayoutBase;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n/** @internal */\r\nvar TableLayout = TableLayoutBase;\n\n/** @internal */\r\nvar ColumnGroup = /*#__PURE__*/ (function (_super) {\r\n    __extends(ColumnGroup, _super);\r\n    function ColumnGroup() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ColumnGroup.prototype.render = function () {\r\n        var columns = this.props.columns;\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"colgroup\", null, columns.map(function (_a) {\r\n            var key = _a.key, width = _a.width;\r\n            var styleWidth = typeof width === 'number' ? width + \"px\" : width;\r\n            return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"col\", { key: key, style: width !== undefined\r\n                    ? { width: styleWidth }\r\n                    : undefined }));\r\n        })));\r\n    };\r\n    return ColumnGroup;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\n\nvar VirtualRowLayout = /*#__PURE__*/ (function (_super) {\r\n    __extends(VirtualRowLayout, _super);\r\n    function VirtualRowLayout() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    VirtualRowLayout.prototype.shouldComponentUpdate = function (nextProps) {\r\n        var _a = this.props, prevCells = _a.cells, prevRow = _a.row;\r\n        var nextCells = nextProps.cells, nextRow = nextProps.row;\r\n        if (prevRow !== nextRow || prevCells.length !== nextCells.length) {\r\n            return true;\r\n        }\r\n        var propsAreNotEqual = nextCells.some(function (nextCell, i) {\r\n            var prevCell = prevCells[i];\r\n            return prevCell.column !== nextCell.column || prevCell.colSpan !== nextCell.colSpan;\r\n        });\r\n        return propsAreNotEqual;\r\n    };\r\n    VirtualRowLayout.prototype.render = function () {\r\n        var _a = this.props, row = _a.row, cells = _a.cells, Row = _a.rowComponent, Cell = _a.cellComponent;\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Row, { tableRow: row, style: getRowStyle({ row: row }) }, cells.map(function (_a) {\r\n            var column = _a.column, colSpan = _a.colSpan;\r\n            return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Cell, { key: column.key, tableRow: row, tableColumn: column, colSpan: colSpan }));\r\n        })));\r\n    };\r\n    return VirtualRowLayout;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component));\n\n// tslint:disable-next-line: max-line-length\r\nvar VirtualTableLayoutBlock = /*#__PURE__*/ (function (_super) {\r\n    __extends(VirtualTableLayoutBlock, _super);\r\n    function VirtualTableLayoutBlock() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    VirtualTableLayoutBlock.prototype.render = function () {\r\n        var _a = this.props, name = _a.name, tableRef = _a.tableRef, collapsedGrid = _a.collapsedGrid, minWidth = _a.minWidth, blockRefsHandler = _a.blockRefsHandler, rowRefsHandler = _a.rowRefsHandler, Table = _a.tableComponent, Body = _a.bodyComponent, cellComponent = _a.cellComponent, rowComponent = _a.rowComponent, marginBottom = _a.marginBottom;\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.RefHolder, { ref: function (ref) { return blockRefsHandler(name, ref); } },\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Table, { tableRef: tableRef, style: __assign({ minWidth: minWidth + \"px\" }, marginBottom ? { marginBottom: marginBottom + \"px\" } : null) },\r\n                (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(ColumnGroup, { columns: collapsedGrid.columns }),\r\n                (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Body, null, collapsedGrid.rows.map(function (visibleRow) {\r\n                    var row = visibleRow.row, _a = visibleRow.cells, cells = _a === void 0 ? [] : _a;\r\n                    return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.RefHolder, { key: row.key, ref: function (ref) { return rowRefsHandler(row, ref); } },\r\n                        (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(VirtualRowLayout, { row: row, cells: cells, rowComponent: rowComponent, cellComponent: cellComponent })));\r\n                })))));\r\n    };\r\n    VirtualTableLayoutBlock.defaultProps = {\r\n        blockRefsHandler: function () { },\r\n        rowRefsHandler: function () { },\r\n        tableRef: (0,react__WEBPACK_IMPORTED_MODULE_0__.createRef)(),\r\n    };\r\n    return VirtualTableLayoutBlock;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\n\nvar AUTO_HEIGHT = 'auto';\r\nvar defaultProps$3 = {\r\n    headerRows: [],\r\n    footerRows: [],\r\n    headComponent: function () { return null; },\r\n    headTableComponent: function () { return null; },\r\n    footerComponent: function () { return null; },\r\n    footerTableComponent: function () { return null; },\r\n};\r\n/** @internal */\r\n// tslint:disable-next-line: max-line-length\r\nvar VirtualTableLayout = /*#__PURE__*/ (function (_super) {\r\n    __extends(VirtualTableLayout, _super);\r\n    function VirtualTableLayout(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.rowRefs = new Map();\r\n        _this.blockRefs = new Map();\r\n        _this.viewportTop = 0;\r\n        _this.containerHeight = 600;\r\n        _this.containerWidth = 800;\r\n        _this.viewportLeft = 0;\r\n        _this.getRowHeight = function (row) {\r\n            var rowHeights = _this.state.rowHeights;\r\n            var estimatedRowHeight = _this.props.estimatedRowHeight;\r\n            if (row) {\r\n                var storedHeight = rowHeights.get(row.key);\r\n                if (storedHeight !== undefined)\r\n                    return storedHeight;\r\n                if (row.height)\r\n                    return row.height;\r\n            }\r\n            return estimatedRowHeight;\r\n        };\r\n        _this.registerRowRef = function (row, ref) {\r\n            if (ref === null) {\r\n                _this.rowRefs.delete(row);\r\n            }\r\n            else {\r\n                _this.rowRefs.set(row, ref);\r\n            }\r\n        };\r\n        _this.registerBlockRef = function (name, ref) {\r\n            if (ref === null) {\r\n                _this.blockRefs.delete(name);\r\n            }\r\n            else {\r\n                _this.blockRefs.set(name, ref);\r\n            }\r\n        };\r\n        _this.onScroll = function (e) {\r\n            var node = e.target;\r\n            if (_this.shouldSkipScrollEvent(e)) {\r\n                return;\r\n            }\r\n            var viewportTop = node.scrollTop, viewportLeft = node.scrollLeft;\r\n            _this.viewportTop = viewportTop;\r\n            _this.viewportLeft = viewportLeft;\r\n            _this.updateViewport();\r\n        };\r\n        _this.handleContainerSizeChange = function (_a) {\r\n            var width = _a.width, height = _a.height;\r\n            _this.containerHeight = height;\r\n            _this.containerWidth = width;\r\n            _this.updateViewport();\r\n        };\r\n        _this.state = {\r\n            rowHeights: new Map(),\r\n            height: 0,\r\n            headerHeight: 0,\r\n            bodyHeight: 0,\r\n            footerHeight: 0,\r\n            visibleRowBoundaries: {},\r\n        };\r\n        var headerHeight = props.headerRows\r\n            .reduce(function (acc, row) { return acc + _this.getRowHeight(row); }, 0);\r\n        var footerHeight = props.footerRows\r\n            .reduce(function (acc, row) { return acc + _this.getRowHeight(row); }, 0);\r\n        _this.state = __assign(__assign({}, _this.state), { headerHeight: headerHeight,\r\n            footerHeight: footerHeight });\r\n        _this.getColumnWidthGetter = (0,_devexpress_dx_core__WEBPACK_IMPORTED_MODULE_3__.memoize)(function (tableColumns, tableWidth, minColumnWidth) { return ((0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.getColumnWidthGetter)(tableColumns, tableWidth, minColumnWidth)); });\r\n        return _this;\r\n    }\r\n    VirtualTableLayout.prototype.componentDidMount = function () {\r\n        this.storeRowHeights();\r\n        this.storeBlockHeights();\r\n    };\r\n    VirtualTableLayout.prototype.componentDidUpdate = function (prevProps) {\r\n        this.storeRowHeights();\r\n        this.storeBlockHeights();\r\n        var _a = this.props, bodyRows = _a.bodyRows, columns = _a.columns;\r\n        // NOTE: the boundaries depend not only on scroll position and container dimensions\r\n        // but on body rows too. This boundaries update is especially important when\r\n        // lazy loading is used because by the time that all involved events are handled\r\n        // no rows are loaded yet.\r\n        var bodyRowsChanged = prevProps.bodyRows !== bodyRows;\r\n        // Also it's the only place where we can respond to the column count change\r\n        var columnCountChanged = prevProps.columns.length !== columns.length;\r\n        if (bodyRowsChanged || columnCountChanged) {\r\n            this.updateViewport();\r\n        }\r\n    };\r\n    VirtualTableLayout.getDerivedStateFromProps = function (nextProps, prevState) {\r\n        var prevRowHeight = prevState.rowHeights;\r\n        var rowHeights = __spread(nextProps.headerRows, nextProps.bodyRows, nextProps.footerRows).reduce(function (acc, row) {\r\n            var rowHeight = prevRowHeight.get(row.key);\r\n            if (rowHeight !== undefined) {\r\n                acc.set(row.key, rowHeight);\r\n            }\r\n            return acc;\r\n        }, new Map());\r\n        return { rowHeights: rowHeights };\r\n    };\r\n    VirtualTableLayout.prototype.storeRowHeights = function () {\r\n        var _this = this;\r\n        var rowsWithChangedHeights = Array.from(this.rowRefs.entries())\r\n            .map(function (_a) {\r\n            var _b = __read(_a, 2), row = _b[0], ref = _b[1];\r\n            return [row, (0,react_dom__WEBPACK_IMPORTED_MODULE_4__.findDOMNode)(ref)];\r\n        })\r\n            .filter(function (_a) {\r\n            var _b = __read(_a, 2), node = _b[1];\r\n            return !!node;\r\n        })\r\n            .map(function (_a) {\r\n            var _b = __read(_a, 2), row = _b[0], node = _b[1];\r\n            return [row, node.getBoundingClientRect().height];\r\n        })\r\n            .filter(function (_a) {\r\n            var _b = __read(_a, 1), row = _b[0];\r\n            return row.type !== _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.TABLE_STUB_TYPE;\r\n        })\r\n            .filter(function (_a) {\r\n            var _b = __read(_a, 2), row = _b[0], height = _b[1];\r\n            return height !== _this.getRowHeight(row);\r\n        });\r\n        if (rowsWithChangedHeights.length) {\r\n            var rowHeights_1 = this.state.rowHeights;\r\n            rowsWithChangedHeights\r\n                .forEach(function (_a) {\r\n                var _b = __read(_a, 2), row = _b[0], height = _b[1];\r\n                return rowHeights_1.set(row.key, height);\r\n            });\r\n            this.setState({\r\n                rowHeights: rowHeights_1,\r\n            });\r\n        }\r\n    };\r\n    VirtualTableLayout.prototype.storeBlockHeights = function () {\r\n        var _this = this;\r\n        var getBlockHeight = function (blockName) { return (_this.blockRefs.get(blockName)\r\n            ? (0,react_dom__WEBPACK_IMPORTED_MODULE_4__.findDOMNode)(_this.blockRefs.get(blockName)).getBoundingClientRect().height\r\n            : 0); };\r\n        var headerHeight = getBlockHeight('header');\r\n        var bodyHeight = getBlockHeight('body');\r\n        var footerHeight = getBlockHeight('footer');\r\n        var _a = this.state, prevHeaderHeight = _a.headerHeight, prevBodyHeight = _a.bodyHeight, prevFooterHeight = _a.footerHeight;\r\n        if (prevHeaderHeight !== headerHeight\r\n            || prevBodyHeight !== bodyHeight\r\n            || prevFooterHeight !== footerHeight) {\r\n            this.setState({\r\n                headerHeight: headerHeight,\r\n                bodyHeight: bodyHeight,\r\n                footerHeight: footerHeight,\r\n            });\r\n        }\r\n    };\r\n    VirtualTableLayout.prototype.shouldSkipScrollEvent = function (e) {\r\n        var node = e.target;\r\n        // NOTE: prevent nested scroll to update viewport\r\n        if (node !== e.currentTarget) {\r\n            return true;\r\n        }\r\n        // NOTE: normalize position:\r\n        // in Firefox and Chrome (zoom > 100%) when scrolled to the bottom\r\n        // in Edge when scrolled to the right edge\r\n        var correction = 1;\r\n        var nodeHorizontalOffset = parseInt(node.scrollLeft + node.clientWidth, 10) - correction;\r\n        var nodeVerticalOffset = parseInt(node.scrollTop + node.clientHeight, 10) - correction;\r\n        // NOTE: prevent iOS to flicker in bounces and correct rendering on high dpi screens\r\n        if (node.scrollTop < 0\r\n            || node.scrollLeft < 0\r\n            || nodeHorizontalOffset > Math.max(node.scrollWidth, node.clientWidth)\r\n            || nodeVerticalOffset > Math.max(node.scrollHeight, node.clientHeight)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    VirtualTableLayout.prototype.updateViewport = function () {\r\n        var _a = this.props, viewport = _a.viewport, setViewport = _a.setViewport;\r\n        var newViewport = this.calculateViewport();\r\n        if (viewport !== newViewport) {\r\n            setViewport(newViewport);\r\n        }\r\n    };\r\n    VirtualTableLayout.prototype.calculateViewport = function () {\r\n        var _a = this, state = _a.state, viewportTop = _a.viewportTop, viewportLeft = _a.viewportLeft, containerHeight = _a.containerHeight, containerWidth = _a.containerWidth;\r\n        var _b = this.props, loadedRowsStart = _b.loadedRowsStart, bodyRows = _b.bodyRows, headerRows = _b.headerRows, footerRows = _b.footerRows, estimatedRowHeight = _b.estimatedRowHeight, columns = _b.columns, minColumnWidth = _b.minColumnWidth, isDataRemote = _b.isDataRemote, viewport = _b.viewport;\r\n        var getColumnWidth = this.getColumnWidthGetter(columns, containerWidth, minColumnWidth);\r\n        return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.getViewport)(__assign(__assign({}, state), { viewportTop: viewportTop, viewportLeft: viewportLeft, containerHeight: containerHeight, containerWidth: containerWidth }), { loadedRowsStart: loadedRowsStart, columns: columns, bodyRows: bodyRows, headerRows: headerRows, footerRows: footerRows, isDataRemote: isDataRemote, viewport: viewport }, estimatedRowHeight, this.getRowHeight, getColumnWidth);\r\n    };\r\n    VirtualTableLayout.prototype.getCollapsedGrids = function (viewport) {\r\n        var _a = this, containerWidth = _a.containerWidth, viewportLeft = _a.viewportLeft;\r\n        var _b = this.props, headerRows = _b.headerRows, bodyRows = _b.bodyRows, footerRows = _b.footerRows, columns = _b.columns, loadedRowsStart = _b.loadedRowsStart, totalRowCount = _b.totalRowCount, getCellColSpan = _b.getCellColSpan, minColumnWidth = _b.minColumnWidth;\r\n        var getColumnWidth = this.getColumnWidthGetter(columns, containerWidth, minColumnWidth);\r\n        return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.getCollapsedGrids)({\r\n            headerRows: headerRows,\r\n            bodyRows: bodyRows,\r\n            footerRows: footerRows,\r\n            columns: columns,\r\n            loadedRowsStart: loadedRowsStart,\r\n            totalRowCount: totalRowCount,\r\n            getCellColSpan: getCellColSpan,\r\n            viewportLeft: viewportLeft,\r\n            containerWidth: containerWidth,\r\n            viewport: viewport,\r\n            getRowHeight: this.getRowHeight,\r\n            getColumnWidth: getColumnWidth,\r\n        });\r\n    };\r\n    VirtualTableLayout.prototype.render = function () {\r\n        var _a = this.props, Container = _a.containerComponent, HeadTable = _a.headTableComponent, FootTable = _a.footerTableComponent, Table = _a.tableComponent, Head = _a.headComponent, Body = _a.bodyComponent, Footer = _a.footerComponent, tableRef = _a.tableRef, height = _a.height, headerRows = _a.headerRows, footerRows = _a.footerRows, minColumnWidth = _a.minColumnWidth, minWidth = _a.minWidth, cellComponent = _a.cellComponent, rowComponent = _a.rowComponent, viewport = _a.viewport, scrollTop = _a.scrollTop;\r\n        var _b = this.state, headerHeight = _b.headerHeight, bodyHeight = _b.bodyHeight, footerHeight = _b.footerHeight;\r\n        var containerHeight = this.containerHeight;\r\n        var collapsedGrids = this.getCollapsedGrids(viewport);\r\n        var commonProps = {\r\n            cellComponent: cellComponent,\r\n            rowComponent: rowComponent,\r\n            minColumnWidth: minColumnWidth,\r\n            minWidth: minWidth,\r\n            blockRefsHandler: this.registerBlockRef,\r\n            rowRefsHandler: this.registerRowRef,\r\n        };\r\n        var sizerHeight = height === AUTO_HEIGHT ? null : height;\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Sizer, { onSizeChange: this.handleContainerSizeChange, containerComponent: Container, style: { height: sizerHeight }, onScroll: this.onScroll, scrollTop: scrollTop },\r\n            (!!headerRows.length) && ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(VirtualTableLayoutBlock, __assign({}, commonProps, { name: \"header\", collapsedGrid: collapsedGrids.headerGrid, tableComponent: HeadTable, bodyComponent: Head }))),\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(VirtualTableLayoutBlock, __assign({}, commonProps, { name: \"body\", collapsedGrid: collapsedGrids.bodyGrid, tableComponent: Table, bodyComponent: Body, tableRef: tableRef, marginBottom: Math.max(0, containerHeight - headerHeight - bodyHeight - footerHeight) })),\r\n            (!!footerRows.length) && ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(VirtualTableLayoutBlock, __assign({}, commonProps, { name: \"footer\", collapsedGrid: collapsedGrids.footerGrid, tableComponent: FootTable, bodyComponent: Footer })))));\r\n    };\r\n    VirtualTableLayout.defaultProps = defaultProps$3;\r\n    return VirtualTableLayout;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\n\nvar getColumnStyle = function (_a) {\r\n    var column = _a.column;\r\n    return column.animationState;\r\n};\r\n/** @internal */\r\nvar RowLayout = (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(function (props) {\r\n    var row = props.row, columns = props.columns, Row = props.rowComponent, Cell = props.cellComponent, getCellColSpan = props.getCellColSpan;\r\n    var getColSpan = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (tableRow, tableColumn) { return getCellColSpan({ tableRow: tableRow, tableColumn: tableColumn, tableColumns: columns }); }, [columns, getCellColSpan]);\r\n    return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Row, { tableRow: row, style: getRowStyle({ row: row }) }, columns\r\n        .map(function (column) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Cell, { key: column.key, tableRow: row, tableColumn: column, style: getColumnStyle({ column: column }), colSpan: getColSpan(row, column) })); })));\r\n});\n\n/** @internal */\r\nvar RowsBlockLayout = /*#__PURE__*/ (function (_super) {\r\n    __extends(RowsBlockLayout, _super);\r\n    function RowsBlockLayout() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RowsBlockLayout.prototype.render = function () {\r\n        var _a = this.props, rows = _a.rows, columns = _a.columns, Block = _a.blockComponent, rowComponent = _a.rowComponent, cellComponent = _a.cellComponent, getCellColSpan = _a.getCellColSpan;\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Block, null, rows\r\n            .map(function (row) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(RowLayout, { key: row.key, row: row, columns: columns, rowComponent: rowComponent, cellComponent: cellComponent, getCellColSpan: getCellColSpan })); })));\r\n    };\r\n    return RowsBlockLayout;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\n\nvar defaultProps$4 = {\r\n    headerRows: [],\r\n    footerRows: [],\r\n    headComponent: function () { return null; },\r\n    footerComponent: function () { return null; },\r\n};\r\n/** @internal */\r\nvar StaticTableLayout = /*#__PURE__*/ (function (_super) {\r\n    __extends(StaticTableLayout, _super);\r\n    function StaticTableLayout() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    StaticTableLayout.prototype.render = function () {\r\n        var _a = this.props, headerRows = _a.headerRows, bodyRows = _a.bodyRows, footerRows = _a.footerRows, columns = _a.columns, minWidth = _a.minWidth, Container = _a.containerComponent, Table = _a.tableComponent, headComponent = _a.headComponent, bodyComponent = _a.bodyComponent, footerComponent = _a.footerComponent, rowComponent = _a.rowComponent, cellComponent = _a.cellComponent, getCellColSpan = _a.getCellColSpan, tableRef = _a.tableRef;\r\n        var commonProps = {\r\n            columns: columns,\r\n            rowComponent: rowComponent,\r\n            cellComponent: cellComponent,\r\n            getCellColSpan: getCellColSpan,\r\n        };\r\n        return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Container, null,\r\n            (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Table, { tableRef: tableRef, style: { minWidth: \"calc(\" + minWidth + \")\" } },\r\n                (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(ColumnGroup, { columns: columns }),\r\n                !!headerRows.length && ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(RowsBlockLayout, __assign({ rows: headerRows, blockComponent: headComponent }, commonProps))),\r\n                (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(RowsBlockLayout, __assign({ rows: bodyRows, blockComponent: bodyComponent }, commonProps)),\r\n                !!footerRows.length && ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(RowsBlockLayout, __assign({ rows: footerRows, blockComponent: footerComponent }, commonProps))))));\r\n    };\r\n    StaticTableLayout.defaultProps = defaultProps$4;\r\n    return StaticTableLayout;\r\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\n\n/** @internal */\r\nvar emptyViewport = {\r\n    columns: [[0, 0]],\r\n    rows: [0, 0],\r\n    headerRows: [0, 0],\r\n    footerRows: [0, 0],\r\n    top: 0,\r\n    left: 0,\r\n    width: 800,\r\n    height: 600,\r\n};\r\nvar tableColumnsComputed = function (_a) {\r\n    var tableColumns = _a.tableColumns;\r\n    return (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.checkColumnWidths)(tableColumns);\r\n};\r\n/** @internal */\r\nvar makeVirtualTable = function (Table, _a) {\r\n    var VirtualLayout = _a.VirtualLayout, FixedHeader = _a.FixedHeader, FixedFooter = _a.FixedFooter, SkeletonCell = _a.SkeletonCell, defaultEstimatedRowHeight = _a.defaultEstimatedRowHeight, defaultHeight = _a.defaultHeight;\r\n    var VirtualTable = /*#__PURE__*/ (function (_super) {\r\n        __extends(VirtualTable, _super);\r\n        function VirtualTable(props) {\r\n            var _this = _super.call(this, props) || this;\r\n            _this.setViewport = function (viewport) {\r\n                _this.setState({ viewport: viewport });\r\n            };\r\n            _this.state = {\r\n                viewport: emptyViewport,\r\n                nextRowId: undefined,\r\n            };\r\n            _this.layoutRenderComponent = (0,_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.connectProps)(VirtualLayout, function () {\r\n                var _a = _this.props, headTableComponent = _a.headTableComponent, footerTableComponent = _a.footerTableComponent;\r\n                return {\r\n                    headTableComponent: headTableComponent,\r\n                    footerTableComponent: footerTableComponent,\r\n                };\r\n            });\r\n            _this.scrollToRow = function (nextRowId) { return _this.setState({ nextRowId: nextRowId }); };\r\n            return _this;\r\n        }\r\n        VirtualTable.prototype.componentDidUpdate = function (prevProps, prevState) {\r\n            var prevId = prevState.nextRowId;\r\n            var currentId = this.state.nextRowId;\r\n            var areIdsEqual = currentId !== undefined && currentId === prevId;\r\n            this.layoutRenderComponent.update();\r\n            if (areIdsEqual) {\r\n                this.setState({ nextRowId: undefined });\r\n            }\r\n        };\r\n        VirtualTable.prototype.render = function () {\r\n            var _this = this;\r\n            var _a = this.props, height = _a.height, estimatedRowHeight = _a.estimatedRowHeight, SkeletonStubCell = _a.skeletonCellComponent, children = _a.children, restProps = __rest(_a, [\"height\", \"estimatedRowHeight\", \"skeletonCellComponent\", \"children\"]);\r\n            var _b = this.state, stateViewport = _b.viewport, nextId = _b.nextRowId;\r\n            return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Plugin, { name: \"VirtualTable\" },\r\n                (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Table, __assign({ layoutComponent: this.layoutRenderComponent }, restProps)),\r\n                (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"setViewport\", action: this.setViewport }),\r\n                (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Action, { name: \"scrollToRow\", action: this.scrollToRow }),\r\n                (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"viewport\", value: stateViewport }),\r\n                (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Getter, { name: \"tableColumns\", computed: tableColumnsComputed }),\r\n                (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableLayout\" }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplateConnector, null, function (_a, _b) {\r\n                    var availableRowCount = _a.availableRowCount, loadedRowsStart = _a.loadedRowsStart, tableBodyRows = _a.tableBodyRows, isDataRemote = _a.isDataRemote, viewport = _a.viewport;\r\n                    var setViewport = _b.setViewport;\r\n                    var onTopRowChange = _this.props.onTopRowChange;\r\n                    var rowId = (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.getTopRowId)(viewport, tableBodyRows, isDataRemote);\r\n                    onTopRowChange(rowId);\r\n                    var totalRowCount = availableRowCount || tableBodyRows.length;\r\n                    var scrollTop = (0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.getScrollTop)(tableBodyRows, totalRowCount, nextId, estimatedRowHeight, isDataRemote);\r\n                    return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplatePlaceholder, { params: __assign(__assign({}, params), { totalRowCount: totalRowCount,\r\n                            loadedRowsStart: loadedRowsStart,\r\n                            isDataRemote: isDataRemote,\r\n                            height: height,\r\n                            estimatedRowHeight: estimatedRowHeight,\r\n                            setViewport: setViewport,\r\n                            viewport: viewport,\r\n                            scrollTop: scrollTop }) }));\r\n                })); }),\r\n                (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.Template, { name: \"tableCell\", predicate: function (_a) {\r\n                        var tableRow = _a.tableRow;\r\n                        return !!(0,_devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.isStubTableCell)(tableRow);\r\n                    } }, function (params) { return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplateConnector, null, function (_a) {\r\n                    var isDataRemote = _a.isDataRemote;\r\n                    return (isDataRemote ? (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(SkeletonStubCell, __assign({}, params)) : (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_devexpress_dx_react_core__WEBPACK_IMPORTED_MODULE_1__.TemplatePlaceholder, null));\r\n                })); })));\r\n        };\r\n        VirtualTable.defaultProps = {\r\n            estimatedRowHeight: defaultEstimatedRowHeight,\r\n            height: defaultHeight,\r\n            headTableComponent: FixedHeader,\r\n            footerTableComponent: FixedFooter,\r\n            skeletonCellComponent: SkeletonCell,\r\n            onTopRowChange: function () { },\r\n        };\r\n        VirtualTable.TOP_POSITION = _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.TOP_POSITION;\r\n        VirtualTable.BOTTOM_POSITION = _devexpress_dx_grid_core__WEBPACK_IMPORTED_MODULE_2__.BOTTOM_POSITION;\r\n        return VirtualTable;\r\n    }(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent));\r\n    Object.values(Table.components).forEach(function (name) {\r\n        VirtualTable[name] = Table[name];\r\n    });\r\n    VirtualTable.FixedHeader = FixedHeader;\r\n    VirtualTable.FixedFooter = FixedFooter;\r\n    VirtualTable.SkeletonCell = SkeletonCell;\r\n    return VirtualTable;\r\n};\n\nvar Node = /*#__PURE__*/ (function () {\r\n    function Node(start, rows) {\r\n        this.prev = null;\r\n        this.next = null;\r\n        this.start = start;\r\n        this.rows = rows;\r\n    }\r\n    return Node;\r\n}());\r\n// tslint:disable-next-line:max-classes-per-file\r\nvar LRUCache = /*#__PURE__*/ (function () {\r\n    function LRUCache(pageSize, capacity) {\r\n        if (capacity === void 0) { capacity = Number.POSITIVE_INFINITY; }\r\n        this.pages = new Map();\r\n        this.pageSize = pageSize;\r\n        this.capacity = capacity;\r\n        this.initList();\r\n    }\r\n    LRUCache.prototype.initList = function () {\r\n        this.head = new Node(-1, []);\r\n        this.tail = new Node(-1, []);\r\n        this.head.next = this.tail;\r\n        this.tail.prev = this.head;\r\n    };\r\n    LRUCache.prototype.addPage = function (pageStart, rows) {\r\n        if (this.pages.has(pageStart)) {\r\n            this.removePage(pageStart);\r\n        }\r\n        var node = new Node(pageStart, rows);\r\n        var last = this.tail.prev;\r\n        last.next = node;\r\n        node.next = this.tail;\r\n        node.prev = last;\r\n        this.tail.prev = node;\r\n        this.pages.set(pageStart, node);\r\n        if (this.pages.size > this.capacity) {\r\n            this.removePage(this.head.next.start);\r\n        }\r\n    };\r\n    LRUCache.prototype.removePage = function (start) {\r\n        var node = this.pages.get(start);\r\n        node.prev.next = node.next;\r\n        node.next.prev = node.prev;\r\n        this.pages.delete(start);\r\n    };\r\n    LRUCache.prototype.getPage = function (pageStart) {\r\n        if (!this.pages.has(pageStart)) {\r\n            return null;\r\n        }\r\n        var rows = this.pages.get(pageStart).rows;\r\n        this.removePage(pageStart);\r\n        this.addPage(pageStart, rows);\r\n        return rows;\r\n    };\r\n    LRUCache.prototype.clear = function () {\r\n        this.pages.clear();\r\n        this.initList();\r\n    };\r\n    return LRUCache;\r\n}());\r\nvar createRowCache = function (pageSize, capacity) {\r\n    if (pageSize === void 0) { pageSize = 100; }\r\n    if (capacity === void 0) { capacity = Number.POSITIVE_INFINITY; }\r\n    var cache = new LRUCache(pageSize, capacity / pageSize);\r\n    return {\r\n        getRows: function (skip, take) {\r\n            var result = [];\r\n            var pageCount = Math.ceil(take / pageSize);\r\n            for (var i = 0; i < pageCount; i += 1) {\r\n                var pageStart = skip + i * pageSize;\r\n                var chunk = cache.getPage(pageStart);\r\n                if (chunk !== null) {\r\n                    result = result.concat(chunk);\r\n                }\r\n                // yield if last page is incomplete\r\n                if (chunk === null || (i !== pageCount - 1 && chunk.length !== pageSize)) {\r\n                    return result;\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        setRows: function (skip, rows) {\r\n            var pageCount = Math.ceil(rows.length / pageSize);\r\n            for (var i = 0; i < pageCount; i += 1) {\r\n                var pageStart = i * pageSize;\r\n                var rowsChunk = rows.slice(pageStart, pageStart + pageSize);\r\n                // put incomplete page only if it is last one\r\n                if (rowsChunk.length === pageSize || i === pageCount - 1) {\r\n                    cache.addPage(pageStart + skip, rowsChunk);\r\n                }\r\n            }\r\n        },\r\n        invalidate: function () { return cache.clear(); },\r\n    };\r\n};\n\nvar InlineSummaryItem = (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(function (_a) {\r\n    var _b = _a.summary, messageKey = _b.messageKey, columnTitle = _b.columnTitle, SummaryComponent = _b.component, getMessage = _a.getMessage;\r\n    return ((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,\r\n        getMessage(messageKey, { columnTitle: columnTitle }),\r\n        (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(SummaryComponent, null)));\r\n});\n\n\n//# sourceMappingURL=dx-react-grid.es.js.map\n\n\n//# sourceURL=webpack://front-end/./node_modules/@devexpress/dx-react-grid/dist/dx-react-grid.es.js?");

/***/ })

}]);